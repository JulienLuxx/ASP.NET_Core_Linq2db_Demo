//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Net.NetworkInformation;
using System.Reflection;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Data;
using LinqToDB.Mapping;

using NpgsqlTypes;

namespace CoreDome.Domain
{
	/// <summary>
	/// Database       : TestDB
	/// Data Source    : tcp://47.244.228.240:5233
	/// Server Version : 11.3
	/// </summary>
	public partial class Connection : LinqToDB.Data.DataConnection
	{
		public ITable<__EFMigrationsHistory> __EFMigrationsHistory { get { return this.GetTable<__EFMigrationsHistory>(); } }
		public ITable<Article>               Article               { get { return this.GetTable<Article>(); } }
		public ITable<ArticleType>           ArticleType           { get { return this.GetTable<ArticleType>(); } }
		public ITable<Comment>               Comment               { get { return this.GetTable<Comment>(); } }
		public ITable<Log>                   Log                   { get { return this.GetTable<Log>(); } }
		public ITable<User>                  User                  { get { return this.GetTable<User>(); } }

		partial void InitMappingSchema()
		{
			MappingSchema.SetConvertExpression<object[], pg_control_checkpointResult>(tuple => new pg_control_checkpointResult() { checkpoint_lsn = (object)tuple[0], redo_lsn = (object)tuple[1], redo_wal_file = (string)tuple[2], timeline_id = (int?)tuple[3], prev_timeline_id = (int?)tuple[4], full_page_writes = (bool?)tuple[5], next_xid = (string)tuple[6], next_oid = (int?)tuple[7], next_multixact_id = (int?)tuple[8], next_multi_offset = (int?)tuple[9], oldest_xid = (int?)tuple[10], oldest_xid_dbid = (int?)tuple[11], oldest_active_xid = (int?)tuple[12], oldest_multi_xid = (int?)tuple[13], oldest_multi_dbid = (int?)tuple[14], oldest_commit_ts_xid = (int?)tuple[15], newest_commit_ts_xid = (int?)tuple[16], checkpoint_time = (DateTimeOffset?)tuple[17] });
			MappingSchema.SetConvertExpression<object[], pg_control_initResult>(tuple => new pg_control_initResult() { max_data_alignment = (int?)tuple[0], database_block_size = (int?)tuple[1], blocks_per_segment = (int?)tuple[2], wal_block_size = (int?)tuple[3], bytes_per_wal_segment = (int?)tuple[4], max_identifier_length = (int?)tuple[5], max_index_columns = (int?)tuple[6], max_toast_chunk_size = (int?)tuple[7], large_object_chunk_size = (int?)tuple[8], float4_pass_by_value = (bool?)tuple[9], float8_pass_by_value = (bool?)tuple[10], data_page_checksum_version = (int?)tuple[11] });
			MappingSchema.SetConvertExpression<object[], pg_control_recoveryResult>(tuple => new pg_control_recoveryResult() { min_recovery_end_lsn = (object)tuple[0], min_recovery_end_timeline = (int?)tuple[1], backup_start_lsn = (object)tuple[2], backup_end_lsn = (object)tuple[3], end_of_backup_record_required = (bool?)tuple[4] });
			MappingSchema.SetConvertExpression<object[], pg_control_systemResult>(tuple => new pg_control_systemResult() { pg_control_version = (int?)tuple[0], catalog_version_no = (int?)tuple[1], system_identifier = (long?)tuple[2], pg_control_last_modified = (DateTimeOffset?)tuple[3] });
			MappingSchema.SetConvertExpression<object[], pg_create_logical_replication_slotResult>(tuple => new pg_create_logical_replication_slotResult() { slot_name = (string)tuple[0], lsn = (object)tuple[1] });
			MappingSchema.SetConvertExpression<object[], pg_create_physical_replication_slotResult>(tuple => new pg_create_physical_replication_slotResult() { slot_name = (string)tuple[0], lsn = (object)tuple[1] });
			MappingSchema.SetConvertExpression<object[], pg_get_object_addressResult>(tuple => new pg_get_object_addressResult() { classid = (int?)tuple[0], objid = (int?)tuple[1], objsubid = (int?)tuple[2] });
			MappingSchema.SetConvertExpression<object[], pg_identify_objectResult>(tuple => new pg_identify_objectResult() { type = (string)tuple[0], schema = (string)tuple[1], name = (string)tuple[2], identity = (string)tuple[3] });
			MappingSchema.SetConvertExpression<object[], pg_identify_object_as_addressResult>(tuple => new pg_identify_object_as_addressResult() { type = (string)tuple[0], object_names = (object)tuple[1], object_args = (object)tuple[2] });
			MappingSchema.SetConvertExpression<object[], pg_last_committed_xactResult>(tuple => new pg_last_committed_xactResult() { xid = (int?)tuple[0], timestamp = (DateTimeOffset?)tuple[1] });
			MappingSchema.SetConvertExpression<object[], pg_replication_slot_advanceResult>(tuple => new pg_replication_slot_advanceResult() { slot_name = (string)tuple[0], end_lsn = (object)tuple[1] });
			MappingSchema.SetConvertExpression<object[], pg_sequence_parametersResult>(tuple => new pg_sequence_parametersResult() { start_value = (long?)tuple[0], minimum_value = (long?)tuple[1], maximum_value = (long?)tuple[2], increment = (long?)tuple[3], cycle_option = (bool?)tuple[4], cache_size = (long?)tuple[5], data_type = (int?)tuple[6] });
			MappingSchema.SetConvertExpression<object[], pg_stat_fileResult>(tuple => new pg_stat_fileResult() { size = (long?)tuple[0], access = (DateTimeOffset?)tuple[1], modification = (DateTimeOffset?)tuple[2], change = (DateTimeOffset?)tuple[3], creation = (DateTimeOffset?)tuple[4], isdir = (bool?)tuple[5] });
			MappingSchema.SetConvertExpression<object[], pg_stat_get_archiverResult>(tuple => new pg_stat_get_archiverResult() { archived_count = (long?)tuple[0], last_archived_wal = (string)tuple[1], last_archived_time = (DateTimeOffset?)tuple[2], failed_count = (long?)tuple[3], last_failed_wal = (string)tuple[4], last_failed_time = (DateTimeOffset?)tuple[5], stats_reset = (DateTimeOffset?)tuple[6] });
			MappingSchema.SetConvertExpression<object[], pg_stat_get_subscriptionResult>(tuple => new pg_stat_get_subscriptionResult() { subid = (int?)tuple[0], relid = (int?)tuple[1], pid = (int?)tuple[2], received_lsn = (object)tuple[3], last_msg_send_time = (DateTimeOffset?)tuple[4], last_msg_receipt_time = (DateTimeOffset?)tuple[5], latest_end_lsn = (object)tuple[6], latest_end_time = (DateTimeOffset?)tuple[7] });
			MappingSchema.SetConvertExpression<object[], pg_stat_get_wal_receiverResult>(tuple => new pg_stat_get_wal_receiverResult() { pid = (int?)tuple[0], status = (string)tuple[1], receive_start_lsn = (object)tuple[2], receive_start_tli = (int?)tuple[3], received_lsn = (object)tuple[4], received_tli = (int?)tuple[5], last_msg_send_time = (DateTimeOffset?)tuple[6], last_msg_receipt_time = (DateTimeOffset?)tuple[7], latest_end_lsn = (object)tuple[8], latest_end_time = (DateTimeOffset?)tuple[9], slot_name = (string)tuple[10], sender_host = (string)tuple[11], sender_port = (int?)tuple[12], conninfo = (string)tuple[13] });
			MappingSchema.SetConvertExpression<object[], pg_walfile_name_offsetResult>(tuple => new pg_walfile_name_offsetResult() { file_name = (string)tuple[0], file_offset = (int?)tuple[1] });
		}

		public Connection()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public Connection(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();

		#region Table Functions

		#region aclexplode

		[Sql.TableFunction(Schema="pg_catalog", Name="aclexplode")]
		public ITable<aclexplodeResult> aclexplode(object acl)
		{
			return this.GetTable<aclexplodeResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				acl);
		}

		public partial class aclexplodeResult
		{
			public int?   grantor        { get; set; }
			public int?   grantee        { get; set; }
			public string privilege_type { get; set; }
			public bool?  is_grantable   { get; set; }
		}

		#endregion

		#region generate_series

		[Sql.TableFunction(Schema="pg_catalog", Name="generate_series")]
		public ITable<generate_seriesResult> generate_series(DateTimeOffset? par1896, DateTimeOffset? par1897, NpgsqlTimeSpan? par1898)
		{
			return this.GetTable<generate_seriesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par1896,
				par1897,
				par1898);
		}

		public partial class generate_seriesResult
		{
			public DateTimeOffset? generate_series { get; set; }
		}

		#endregion

		#region generate_subscripts

		[Sql.TableFunction(Schema="pg_catalog", Name="generate_subscripts")]
		public ITable<generate_subscriptsResult> generate_subscripts(object par1902, int? par1903)
		{
			return this.GetTable<generate_subscriptsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par1902,
				par1903);
		}

		public partial class generate_subscriptsResult
		{
			public int? generate_subscripts { get; set; }
		}

		#endregion

		#region json_array_elements

		[Sql.TableFunction(Schema="pg_catalog", Name="json_array_elements")]
		public ITable<json_array_elementsResult> json_array_elements(string from_json)
		{
			return this.GetTable<json_array_elementsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class json_array_elementsResult
		{
			public string value { get; set; }
		}

		#endregion

		#region json_array_elements_text

		[Sql.TableFunction(Schema="pg_catalog", Name="json_array_elements_text")]
		public ITable<json_array_elements_textResult> json_array_elements_text(string from_json)
		{
			return this.GetTable<json_array_elements_textResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class json_array_elements_textResult
		{
			public string value { get; set; }
		}

		#endregion

		#region jsonb_array_elements

		[Sql.TableFunction(Schema="pg_catalog", Name="jsonb_array_elements")]
		public ITable<jsonb_array_elementsResult> jsonb_array_elements(string from_json)
		{
			return this.GetTable<jsonb_array_elementsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class jsonb_array_elementsResult
		{
			public string value { get; set; }
		}

		#endregion

		#region jsonb_array_elements_text

		[Sql.TableFunction(Schema="pg_catalog", Name="jsonb_array_elements_text")]
		public ITable<jsonb_array_elements_textResult> jsonb_array_elements_text(string from_json)
		{
			return this.GetTable<jsonb_array_elements_textResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class jsonb_array_elements_textResult
		{
			public string value { get; set; }
		}

		#endregion

		#region jsonb_each

		[Sql.TableFunction(Schema="pg_catalog", Name="jsonb_each")]
		public ITable<jsonb_eachResult> jsonb_each(string from_json)
		{
			return this.GetTable<jsonb_eachResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class jsonb_eachResult
		{
			public string key   { get; set; }
			public string value { get; set; }
		}

		#endregion

		#region jsonb_each_text

		[Sql.TableFunction(Schema="pg_catalog", Name="jsonb_each_text")]
		public ITable<jsonb_each_textResult> jsonb_each_text(string from_json)
		{
			return this.GetTable<jsonb_each_textResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class jsonb_each_textResult
		{
			public string key   { get; set; }
			public string value { get; set; }
		}

		#endregion

		#region jsonb_object_keys

		[Sql.TableFunction(Schema="pg_catalog", Name="jsonb_object_keys")]
		public ITable<jsonb_object_keysResult> jsonb_object_keys(string par3685)
		{
			return this.GetTable<jsonb_object_keysResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par3685);
		}

		public partial class jsonb_object_keysResult
		{
			public string jsonb_object_keys { get; set; }
		}

		#endregion

		#region jsonb_populate_recordset

		[Sql.TableFunction(Schema="pg_catalog", Name="jsonb_populate_recordset")]
		public ITable<jsonb_populate_recordsetResult> jsonb_populate_recordset(object par3691, string par3692)
		{
			return this.GetTable<jsonb_populate_recordsetResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par3691,
				par3692);
		}

		public partial class jsonb_populate_recordsetResult
		{
			public int? jsonb_populate_recordset { get; set; }
		}

		#endregion

		#region json_each

		[Sql.TableFunction(Schema="pg_catalog", Name="json_each")]
		public ITable<json_eachResult> json_each(string from_json)
		{
			return this.GetTable<json_eachResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class json_eachResult
		{
			public string key   { get; set; }
			public string value { get; set; }
		}

		#endregion

		#region json_each_text

		[Sql.TableFunction(Schema="pg_catalog", Name="json_each_text")]
		public ITable<json_each_textResult> json_each_text(string from_json)
		{
			return this.GetTable<json_each_textResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				from_json);
		}

		public partial class json_each_textResult
		{
			public string key   { get; set; }
			public string value { get; set; }
		}

		#endregion

		#region json_object_keys

		[Sql.TableFunction(Schema="pg_catalog", Name="json_object_keys")]
		public ITable<json_object_keysResult> json_object_keys(string par3739)
		{
			return this.GetTable<json_object_keysResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par3739);
		}

		public partial class json_object_keysResult
		{
			public string json_object_keys { get; set; }
		}

		#endregion

		#region json_populate_recordset

		[Sql.TableFunction(Schema="pg_catalog", Name="json_populate_recordset")]
		public ITable<json_populate_recordsetResult> json_populate_recordset(object @base, string from_json, bool? use_json_as_text)
		{
			return this.GetTable<json_populate_recordsetResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				@base,
				from_json,
				use_json_as_text);
		}

		public partial class json_populate_recordsetResult
		{
			public int? json_populate_recordset { get; set; }
		}

		#endregion

		#region pg_available_extensions

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_available_extensions")]
		public ITable<pg_available_extensionsResult> pg_available_extensions()
		{
			return this.GetTable<pg_available_extensionsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_available_extensionsResult
		{
			public string name            { get; set; }
			public string default_version { get; set; }
			public string comment         { get; set; }
		}

		#endregion

		#region pg_available_extension_versions

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_available_extension_versions")]
		public ITable<pg_available_extension_versionsResult> pg_available_extension_versions()
		{
			return this.GetTable<pg_available_extension_versionsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_available_extension_versionsResult
		{
			public string name        { get; set; }
			public string version     { get; set; }
			public bool?  superuser   { get; set; }
			public bool?  relocatable { get; set; }
			public string schema      { get; set; }
			public Array  requires    { get; set; }
			public string comment     { get; set; }
		}

		#endregion

		#region pg_config

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_config")]
		public ITable<pg_configResult> pg_config()
		{
			return this.GetTable<pg_configResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_configResult
		{
			public string name    { get; set; }
			public string setting { get; set; }
		}

		#endregion

		#region pg_cursor

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_cursor")]
		public ITable<pg_cursorResult> pg_cursor()
		{
			return this.GetTable<pg_cursorResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_cursorResult
		{
			public string          name          { get; set; }
			public string          statement     { get; set; }
			public bool?           is_holdable   { get; set; }
			public bool?           is_binary     { get; set; }
			public bool?           is_scrollable { get; set; }
			public DateTimeOffset? creation_time { get; set; }
		}

		#endregion

		#region pg_event_trigger_ddl_commands

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_event_trigger_ddl_commands")]
		public ITable<pg_event_trigger_ddl_commandsResult> pg_event_trigger_ddl_commands()
		{
			return this.GetTable<pg_event_trigger_ddl_commandsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_event_trigger_ddl_commandsResult
		{
			public int?   classid         { get; set; }
			public int?   objid           { get; set; }
			public int?   objsubid        { get; set; }
			public string command_tag     { get; set; }
			public string object_type     { get; set; }
			public string schema_name     { get; set; }
			public string object_identity { get; set; }
			public bool?  in_extension    { get; set; }
			public object command         { get; set; }
		}

		#endregion

		#region pg_event_trigger_dropped_objects

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_event_trigger_dropped_objects")]
		public ITable<pg_event_trigger_dropped_objectsResult> pg_event_trigger_dropped_objects()
		{
			return this.GetTable<pg_event_trigger_dropped_objectsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_event_trigger_dropped_objectsResult
		{
			public int?   classid         { get; set; }
			public int?   objid           { get; set; }
			public int?   objsubid        { get; set; }
			public bool?  original        { get; set; }
			public bool?  normal          { get; set; }
			public bool?  is_temporary    { get; set; }
			public string object_type     { get; set; }
			public string schema_name     { get; set; }
			public string object_name     { get; set; }
			public string object_identity { get; set; }
			public Array  address_names   { get; set; }
			public Array  address_args    { get; set; }
		}

		#endregion

		#region _pg_expandarray

		[Sql.TableFunction(Schema="information_schema", Name="_pg_expandarray")]
		public ITable<_pg_expandarrayResult> _pg_expandarray(object par5074)
		{
			return this.GetTable<_pg_expandarrayResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par5074);
		}

		public partial class _pg_expandarrayResult
		{
			public int? x { get; set; }
			public int? n { get; set; }
		}

		#endregion

		#region pg_extension_update_paths

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_extension_update_paths")]
		public ITable<pg_extension_update_pathsResult> pg_extension_update_paths(string name)
		{
			return this.GetTable<pg_extension_update_pathsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				name);
		}

		public partial class pg_extension_update_pathsResult
		{
			public string source { get; set; }
			public string target { get; set; }
			public string path   { get; set; }
		}

		#endregion

		#region pg_get_keywords

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_get_keywords")]
		public ITable<pg_get_keywordsResult> pg_get_keywords()
		{
			return this.GetTable<pg_get_keywordsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_get_keywordsResult
		{
			public string word    { get; set; }
			public char?  catcode { get; set; }
			public string catdesc { get; set; }
		}

		#endregion

		#region pg_get_multixact_members

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_get_multixact_members")]
		public ITable<pg_get_multixact_membersResult> pg_get_multixact_members(int? multixid)
		{
			return this.GetTable<pg_get_multixact_membersResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				multixid);
		}

		public partial class pg_get_multixact_membersResult
		{
			public int?   xid  { get; set; }
			public string mode { get; set; }
		}

		#endregion

		#region pg_get_publication_tables

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_get_publication_tables")]
		public ITable<pg_get_publication_tablesResult> pg_get_publication_tables(string pubname)
		{
			return this.GetTable<pg_get_publication_tablesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				pubname);
		}

		public partial class pg_get_publication_tablesResult
		{
			public int? relid { get; set; }
		}

		#endregion

		#region pg_get_replication_slots

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_get_replication_slots")]
		public ITable<pg_get_replication_slotsResult> pg_get_replication_slots()
		{
			return this.GetTable<pg_get_replication_slotsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_get_replication_slotsResult
		{
			public string slot_name           { get; set; }
			public string plugin              { get; set; }
			public string slot_type           { get; set; }
			public int?   datoid              { get; set; }
			public bool?  temporary           { get; set; }
			public bool?  active              { get; set; }
			public int?   active_pid          { get; set; }
			public int?   xmin                { get; set; }
			public int?   catalog_xmin        { get; set; }
			public string restart_lsn         { get; set; }
			public string confirmed_flush_lsn { get; set; }
		}

		#endregion

		#region pg_hba_file_rules

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_hba_file_rules")]
		public ITable<pg_hba_file_rulesResult> pg_hba_file_rules()
		{
			return this.GetTable<pg_hba_file_rulesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_hba_file_rulesResult
		{
			public int?   line_number { get; set; }
			public string type        { get; set; }
			public Array  database    { get; set; }
			public Array  user_name   { get; set; }
			public string address     { get; set; }
			public string netmask     { get; set; }
			public string auth_method { get; set; }
			public Array  options     { get; set; }
			public string error       { get; set; }
		}

		#endregion

		#region pg_listening_channels

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_listening_channels")]
		public ITable<pg_listening_channelsResult> pg_listening_channels()
		{
			return this.GetTable<pg_listening_channelsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_listening_channelsResult
		{
			public string pg_listening_channels { get; set; }
		}

		#endregion

		#region pg_lock_status

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_lock_status")]
		public ITable<pg_lock_statusResult> pg_lock_status()
		{
			return this.GetTable<pg_lock_statusResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_lock_statusResult
		{
			public string locktype           { get; set; }
			public int?   database           { get; set; }
			public int?   relation           { get; set; }
			public int?   page               { get; set; }
			public short? tuple              { get; set; }
			public string virtualxid         { get; set; }
			public int?   transactionid      { get; set; }
			public int?   classid            { get; set; }
			public int?   objid              { get; set; }
			public short? objsubid           { get; set; }
			public string virtualtransaction { get; set; }
			public int?   pid                { get; set; }
			public string mode               { get; set; }
			public bool?  granted            { get; set; }
			public bool?  fastpath           { get; set; }
		}

		#endregion

		#region pg_logical_slot_get_binary_changes

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_logical_slot_get_binary_changes")]
		public ITable<pg_logical_slot_get_binary_changesResult> pg_logical_slot_get_binary_changes(string slot_name, object upto_lsn, int? upto_nchanges, object options)
		{
			return this.GetTable<pg_logical_slot_get_binary_changesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				slot_name,
				upto_lsn,
				upto_nchanges,
				options);
		}

		public partial class pg_logical_slot_get_binary_changesResult
		{
			public string lsn  { get; set; }
			public int?   xid  { get; set; }
			public byte[] data { get; set; }
		}

		#endregion

		#region pg_logical_slot_get_changes

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_logical_slot_get_changes")]
		public ITable<pg_logical_slot_get_changesResult> pg_logical_slot_get_changes(string slot_name, object upto_lsn, int? upto_nchanges, object options)
		{
			return this.GetTable<pg_logical_slot_get_changesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				slot_name,
				upto_lsn,
				upto_nchanges,
				options);
		}

		public partial class pg_logical_slot_get_changesResult
		{
			public string lsn  { get; set; }
			public int?   xid  { get; set; }
			public string data { get; set; }
		}

		#endregion

		#region pg_logical_slot_peek_binary_changes

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_logical_slot_peek_binary_changes")]
		public ITable<pg_logical_slot_peek_binary_changesResult> pg_logical_slot_peek_binary_changes(string slot_name, object upto_lsn, int? upto_nchanges, object options)
		{
			return this.GetTable<pg_logical_slot_peek_binary_changesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				slot_name,
				upto_lsn,
				upto_nchanges,
				options);
		}

		public partial class pg_logical_slot_peek_binary_changesResult
		{
			public string lsn  { get; set; }
			public int?   xid  { get; set; }
			public byte[] data { get; set; }
		}

		#endregion

		#region pg_logical_slot_peek_changes

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_logical_slot_peek_changes")]
		public ITable<pg_logical_slot_peek_changesResult> pg_logical_slot_peek_changes(string slot_name, object upto_lsn, int? upto_nchanges, object options)
		{
			return this.GetTable<pg_logical_slot_peek_changesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				slot_name,
				upto_lsn,
				upto_nchanges,
				options);
		}

		public partial class pg_logical_slot_peek_changesResult
		{
			public string lsn  { get; set; }
			public int?   xid  { get; set; }
			public string data { get; set; }
		}

		#endregion

		#region pg_ls_dir

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_ls_dir")]
		public ITable<pg_ls_dirResult> pg_ls_dir(string par5212, bool? par5213, bool? par5214)
		{
			return this.GetTable<pg_ls_dirResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par5212,
				par5213,
				par5214);
		}

		public partial class pg_ls_dirResult
		{
			public string pg_ls_dir { get; set; }
		}

		#endregion

		#region pg_ls_logdir

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_ls_logdir")]
		public ITable<pg_ls_logdirResult> pg_ls_logdir()
		{
			return this.GetTable<pg_ls_logdirResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_ls_logdirResult
		{
			public string          name         { get; set; }
			public long?           size         { get; set; }
			public DateTimeOffset? modification { get; set; }
		}

		#endregion

		#region pg_ls_waldir

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_ls_waldir")]
		public ITable<pg_ls_waldirResult> pg_ls_waldir()
		{
			return this.GetTable<pg_ls_waldirResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_ls_waldirResult
		{
			public string          name         { get; set; }
			public long?           size         { get; set; }
			public DateTimeOffset? modification { get; set; }
		}

		#endregion

		#region pg_options_to_table

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_options_to_table")]
		public ITable<pg_options_to_tableResult> pg_options_to_table(object options_array)
		{
			return this.GetTable<pg_options_to_tableResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				options_array);
		}

		public partial class pg_options_to_tableResult
		{
			public string option_name  { get; set; }
			public string option_value { get; set; }
		}

		#endregion

		#region pg_prepared_statement

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_prepared_statement")]
		public ITable<pg_prepared_statementResult> pg_prepared_statement()
		{
			return this.GetTable<pg_prepared_statementResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_prepared_statementResult
		{
			public string          name            { get; set; }
			public string          statement       { get; set; }
			public DateTimeOffset? prepare_time    { get; set; }
			public Array           parameter_types { get; set; }
			public bool?           from_sql        { get; set; }
		}

		#endregion

		#region pg_prepared_xact

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_prepared_xact")]
		public ITable<pg_prepared_xactResult> pg_prepared_xact()
		{
			return this.GetTable<pg_prepared_xactResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_prepared_xactResult
		{
			public int?            transaction { get; set; }
			public string          gid         { get; set; }
			public DateTimeOffset? prepared    { get; set; }
			public int?            ownerid     { get; set; }
			public int?            dbid        { get; set; }
		}

		#endregion

		#region pg_show_all_file_settings

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_show_all_file_settings")]
		public ITable<pg_show_all_file_settingsResult> pg_show_all_file_settings()
		{
			return this.GetTable<pg_show_all_file_settingsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_show_all_file_settingsResult
		{
			public string sourcefile { get; set; }
			public int?   sourceline { get; set; }
			public int?   seqno      { get; set; }
			public string name       { get; set; }
			public string setting    { get; set; }
			public bool?  applied    { get; set; }
			public string error      { get; set; }
		}

		#endregion

		#region pg_show_all_settings

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_show_all_settings")]
		public ITable<pg_show_all_settingsResult> pg_show_all_settings()
		{
			return this.GetTable<pg_show_all_settingsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_show_all_settingsResult
		{
			public string name            { get; set; }
			public string setting         { get; set; }
			public string unit            { get; set; }
			public string category        { get; set; }
			public string short_desc      { get; set; }
			public string extra_desc      { get; set; }
			public string context         { get; set; }
			public string vartype         { get; set; }
			public string source          { get; set; }
			public string min_val         { get; set; }
			public string max_val         { get; set; }
			public Array  enumvals        { get; set; }
			public string boot_val        { get; set; }
			public string reset_val       { get; set; }
			public string sourcefile      { get; set; }
			public int?   sourceline      { get; set; }
			public bool?  pending_restart { get; set; }
		}

		#endregion

		#region pg_show_replication_origin_status

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_show_replication_origin_status")]
		public ITable<pg_show_replication_origin_statusResult> pg_show_replication_origin_status()
		{
			return this.GetTable<pg_show_replication_origin_statusResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_show_replication_origin_statusResult
		{
			public int?   local_id    { get; set; }
			public string external_id { get; set; }
			public string remote_lsn  { get; set; }
			public string local_lsn   { get; set; }
		}

		#endregion

		#region pg_stat_get_activity

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_stat_get_activity")]
		public ITable<pg_stat_get_activityResult> pg_stat_get_activity(int? pid)
		{
			return this.GetTable<pg_stat_get_activityResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				pid);
		}

		public partial class pg_stat_get_activityResult
		{
			public int?            datid            { get; set; }
			public int?            pid              { get; set; }
			public int?            usesysid         { get; set; }
			public string          application_name { get; set; }
			public string          state            { get; set; }
			public string          query            { get; set; }
			public string          wait_event_type  { get; set; }
			public string          wait_event       { get; set; }
			public DateTimeOffset? xact_start       { get; set; }
			public DateTimeOffset? query_start      { get; set; }
			public DateTimeOffset? backend_start    { get; set; }
			public DateTimeOffset? state_change     { get; set; }
			public NpgsqlInet?     client_addr      { get; set; }
			public string          client_hostname  { get; set; }
			public int?            client_port      { get; set; }
			public int?            backend_xid      { get; set; }
			public int?            backend_xmin     { get; set; }
			public string          backend_type     { get; set; }
			public bool?           ssl              { get; set; }
			public string          sslversion       { get; set; }
			public string          sslcipher        { get; set; }
			public int?            sslbits          { get; set; }
			public bool?           sslcompression   { get; set; }
			public string          sslclientdn      { get; set; }
		}

		#endregion

		#region pg_stat_get_backend_idset

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_stat_get_backend_idset")]
		public ITable<pg_stat_get_backend_idsetResult> pg_stat_get_backend_idset()
		{
			return this.GetTable<pg_stat_get_backend_idsetResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_stat_get_backend_idsetResult
		{
			public int? pg_stat_get_backend_idset { get; set; }
		}

		#endregion

		#region pg_stat_get_progress_info

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_stat_get_progress_info")]
		public ITable<pg_stat_get_progress_infoResult> pg_stat_get_progress_info(string cmdtype)
		{
			return this.GetTable<pg_stat_get_progress_infoResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				cmdtype);
		}

		public partial class pg_stat_get_progress_infoResult
		{
			public int?  pid     { get; set; }
			public int?  datid   { get; set; }
			public int?  relid   { get; set; }
			public long? param1  { get; set; }
			public long? param2  { get; set; }
			public long? param3  { get; set; }
			public long? param4  { get; set; }
			public long? param5  { get; set; }
			public long? param6  { get; set; }
			public long? param7  { get; set; }
			public long? param8  { get; set; }
			public long? param9  { get; set; }
			public long? param10 { get; set; }
		}

		#endregion

		#region pg_stat_get_wal_senders

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_stat_get_wal_senders")]
		public ITable<pg_stat_get_wal_sendersResult> pg_stat_get_wal_senders()
		{
			return this.GetTable<pg_stat_get_wal_sendersResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_stat_get_wal_sendersResult
		{
			public int?            pid           { get; set; }
			public string          state         { get; set; }
			public string          sent_lsn      { get; set; }
			public string          write_lsn     { get; set; }
			public string          flush_lsn     { get; set; }
			public string          replay_lsn    { get; set; }
			public NpgsqlTimeSpan? write_lag     { get; set; }
			public NpgsqlTimeSpan? flush_lag     { get; set; }
			public NpgsqlTimeSpan? replay_lag    { get; set; }
			public int?            sync_priority { get; set; }
			public string          sync_state    { get; set; }
		}

		#endregion

		#region pg_stop_backup

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_stop_backup")]
		public ITable<pg_stop_backupResult> pg_stop_backup(bool? exclusive, bool? wait_for_archive)
		{
			return this.GetTable<pg_stop_backupResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				exclusive,
				wait_for_archive);
		}

		public partial class pg_stop_backupResult
		{
			public string lsn        { get; set; }
			public string labelfile  { get; set; }
			public string spcmapfile { get; set; }
		}

		#endregion

		#region pg_tablespace_databases

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_tablespace_databases")]
		public ITable<pg_tablespace_databasesResult> pg_tablespace_databases(int? par5514)
		{
			return this.GetTable<pg_tablespace_databasesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par5514);
		}

		public partial class pg_tablespace_databasesResult
		{
			public int? pg_tablespace_databases { get; set; }
		}

		#endregion

		#region pg_timezone_abbrevs

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_timezone_abbrevs")]
		public ITable<pg_timezone_abbrevsResult> pg_timezone_abbrevs()
		{
			return this.GetTable<pg_timezone_abbrevsResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_timezone_abbrevsResult
		{
			public string          abbrev     { get; set; }
			public NpgsqlTimeSpan? utc_offset { get; set; }
			public bool?           is_dst     { get; set; }
		}

		#endregion

		#region pg_timezone_names

		[Sql.TableFunction(Schema="pg_catalog", Name="pg_timezone_names")]
		public ITable<pg_timezone_namesResult> pg_timezone_names()
		{
			return this.GetTable<pg_timezone_namesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod());
		}

		public partial class pg_timezone_namesResult
		{
			public string          name       { get; set; }
			public string          abbrev     { get; set; }
			public NpgsqlTimeSpan? utc_offset { get; set; }
			public bool?           is_dst     { get; set; }
		}

		#endregion

		#region regexp_matches

		[Sql.TableFunction(Schema="pg_catalog", Name="regexp_matches")]
		public ITable<regexp_matchesResult> regexp_matches(string par6004, string par6005, string par6006)
		{
			return this.GetTable<regexp_matchesResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par6004,
				par6005,
				par6006);
		}

		public partial class regexp_matchesResult
		{
			public Array regexp_matches { get; set; }
		}

		#endregion

		#region regexp_split_to_table

		[Sql.TableFunction(Schema="pg_catalog", Name="regexp_split_to_table")]
		public ITable<regexp_split_to_tableResult> regexp_split_to_table(string par6025, string par6026, string par6027)
		{
			return this.GetTable<regexp_split_to_tableResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par6025,
				par6026,
				par6027);
		}

		public partial class regexp_split_to_tableResult
		{
			public string regexp_split_to_table { get; set; }
		}

		#endregion

		#region ts_debug

		[Sql.TableFunction(Schema="pg_catalog", Name="ts_debug")]
		public ITable<ts_debugResult> ts_debug(string document)
		{
			return this.GetTable<ts_debugResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				document);
		}

		public partial class ts_debugResult
		{
			public string alias        { get; set; }
			public string description  { get; set; }
			public string token        { get; set; }
			public Array  dictionaries { get; set; }
			public string dictionary   { get; set; }
			public Array  lexemes      { get; set; }
		}

		#endregion

		#region ts_parse

		[Sql.TableFunction(Schema="pg_catalog", Name="ts_parse")]
		public ITable<ts_parseResult> ts_parse(string parser_name, string txt)
		{
			return this.GetTable<ts_parseResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				parser_name,
				txt);
		}

		public partial class ts_parseResult
		{
			public int?   tokid { get; set; }
			public string token { get; set; }
		}

		#endregion

		#region ts_stat

		[Sql.TableFunction(Schema="pg_catalog", Name="ts_stat")]
		public ITable<ts_statResult> ts_stat(string query, string weights)
		{
			return this.GetTable<ts_statResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				query,
				weights);
		}

		public partial class ts_statResult
		{
			public string word   { get; set; }
			public int?   ndoc   { get; set; }
			public int?   nentry { get; set; }
		}

		#endregion

		#region ts_token_type

		[Sql.TableFunction(Schema="pg_catalog", Name="ts_token_type")]
		public ITable<ts_token_typeResult> ts_token_type(string parser_name)
		{
			return this.GetTable<ts_token_typeResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				parser_name);
		}

		public partial class ts_token_typeResult
		{
			public int?   tokid       { get; set; }
			public string alias       { get; set; }
			public string description { get; set; }
		}

		#endregion

		#region txid_snapshot_xip

		[Sql.TableFunction(Schema="pg_catalog", Name="txid_snapshot_xip")]
		public ITable<txid_snapshot_xipResult> txid_snapshot_xip(object par7479)
		{
			return this.GetTable<txid_snapshot_xipResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				par7479);
		}

		public partial class txid_snapshot_xipResult
		{
			public long? txid_snapshot_xip { get; set; }
		}

		#endregion

		#region unnest

		[Sql.TableFunction(Schema="pg_catalog", Name="unnest")]
		public ITable<unnestResult> unnest(object tsvector)
		{
			return this.GetTable<unnestResult>(this, (MethodInfo)MethodBase.GetCurrentMethod(),
				tsvector);
		}

		public partial class unnestResult
		{
			public string lexeme    { get; set; }
			public Array  positions { get; set; }
			public Array  weights   { get; set; }
		}

		#endregion

		#endregion
	}

	public partial class pg_control_checkpointResult
	{
		public object checkpoint_lsn { get; set; }

		public object redo_lsn { get; set; }

		public string redo_wal_file { get; set; }

		public int? timeline_id { get; set; }

		public int? prev_timeline_id { get; set; }

		public bool? full_page_writes { get; set; }

		public string next_xid { get; set; }

		public int? next_oid { get; set; }

		public int? next_multixact_id { get; set; }

		public int? next_multi_offset { get; set; }

		public int? oldest_xid { get; set; }

		public int? oldest_xid_dbid { get; set; }

		public int? oldest_active_xid { get; set; }

		public int? oldest_multi_xid { get; set; }

		public int? oldest_multi_dbid { get; set; }

		public int? oldest_commit_ts_xid { get; set; }

		public int? newest_commit_ts_xid { get; set; }

		public DateTimeOffset? checkpoint_time { get; set; }
	}

	public partial class pg_control_initResult
	{
		public int? max_data_alignment { get; set; }

		public int? database_block_size { get; set; }

		public int? blocks_per_segment { get; set; }

		public int? wal_block_size { get; set; }

		public int? bytes_per_wal_segment { get; set; }

		public int? max_identifier_length { get; set; }

		public int? max_index_columns { get; set; }

		public int? max_toast_chunk_size { get; set; }

		public int? large_object_chunk_size { get; set; }

		public bool? float4_pass_by_value { get; set; }

		public bool? float8_pass_by_value { get; set; }

		public int? data_page_checksum_version { get; set; }
	}

	public partial class pg_control_recoveryResult
	{
		public object min_recovery_end_lsn { get; set; }

		public int? min_recovery_end_timeline { get; set; }

		public object backup_start_lsn { get; set; }

		public object backup_end_lsn { get; set; }

		public bool? end_of_backup_record_required { get; set; }
	}

	public partial class pg_control_systemResult
	{
		public int? pg_control_version { get; set; }

		public int? catalog_version_no { get; set; }

		public long? system_identifier { get; set; }

		public DateTimeOffset? pg_control_last_modified { get; set; }
	}

	public partial class pg_create_logical_replication_slotResult
	{
		public string slot_name { get; set; }

		public object lsn { get; set; }
	}

	public partial class pg_create_physical_replication_slotResult
	{
		public string slot_name { get; set; }

		public object lsn { get; set; }
	}

	public partial class pg_get_object_addressResult
	{
		public int? classid { get; set; }

		public int? objid { get; set; }

		public int? objsubid { get; set; }
	}

	public partial class pg_identify_objectResult
	{
		public string type { get; set; }

		public string schema { get; set; }

		public string name { get; set; }

		public string identity { get; set; }
	}

	public partial class pg_identify_object_as_addressResult
	{
		public string type { get; set; }

		public object object_names { get; set; }

		public object object_args { get; set; }
	}

	public partial class pg_last_committed_xactResult
	{
		public int? xid { get; set; }

		public DateTimeOffset? timestamp { get; set; }
	}

	public partial class pg_replication_slot_advanceResult
	{
		public string slot_name { get; set; }

		public object end_lsn { get; set; }
	}

	public partial class pg_sequence_parametersResult
	{
		public long? start_value { get; set; }

		public long? minimum_value { get; set; }

		public long? maximum_value { get; set; }

		public long? increment { get; set; }

		public bool? cycle_option { get; set; }

		public long? cache_size { get; set; }

		public int? data_type { get; set; }
	}

	public partial class pg_stat_fileResult
	{
		public long? size { get; set; }

		public DateTimeOffset? access { get; set; }

		public DateTimeOffset? modification { get; set; }

		public DateTimeOffset? change { get; set; }

		public DateTimeOffset? creation { get; set; }

		public bool? isdir { get; set; }
	}

	public partial class pg_stat_get_archiverResult
	{
		public long? archived_count { get; set; }

		public string last_archived_wal { get; set; }

		public DateTimeOffset? last_archived_time { get; set; }

		public long? failed_count { get; set; }

		public string last_failed_wal { get; set; }

		public DateTimeOffset? last_failed_time { get; set; }

		public DateTimeOffset? stats_reset { get; set; }
	}

	public partial class pg_stat_get_subscriptionResult
	{
		public int? subid { get; set; }

		public int? relid { get; set; }

		public int? pid { get; set; }

		public object received_lsn { get; set; }

		public DateTimeOffset? last_msg_send_time { get; set; }

		public DateTimeOffset? last_msg_receipt_time { get; set; }

		public object latest_end_lsn { get; set; }

		public DateTimeOffset? latest_end_time { get; set; }
	}

	public partial class pg_stat_get_wal_receiverResult
	{
		public int? pid { get; set; }

		public string status { get; set; }

		public object receive_start_lsn { get; set; }

		public int? receive_start_tli { get; set; }

		public object received_lsn { get; set; }

		public int? received_tli { get; set; }

		public DateTimeOffset? last_msg_send_time { get; set; }

		public DateTimeOffset? last_msg_receipt_time { get; set; }

		public object latest_end_lsn { get; set; }

		public DateTimeOffset? latest_end_time { get; set; }

		public string slot_name { get; set; }

		public string sender_host { get; set; }

		public int? sender_port { get; set; }

		public string conninfo { get; set; }
	}

	public partial class pg_walfile_name_offsetResult
	{
		public string file_name { get; set; }

		public int? file_offset { get; set; }
	}

	[Table("__EFMigrationsHistory")]
	public partial class __EFMigrationsHistory
	{
		[PrimaryKey, NotNull] public string MigrationId    { get; set; } // character varying(150)
		[Column,     NotNull] public string ProductVersion { get; set; } // character varying(32)
	}

	[Table("Article")]
	public partial class Article
	{
		[PrimaryKey, Identity   ] public int      Id         { get; set; } // integer
		[Column,     NotNull    ] public DateTime CreateTime { get; set; } // timestamp (6) without time zone
		[Column,     NotNull    ] public bool     IsDeleted  { get; set; } // boolean
		[Column,        Nullable] public string   Title      { get; set; } // character varying
		[Column,        Nullable] public string   Content    { get; set; } // text
		[Column,     NotNull    ] public int      TypeId     { get; set; } // integer
		[Column,     NotNull    ] public int      Status     { get; set; } // integer
		[Column,     NotNull    ] public int      UserId     { get; set; } // integer
		[Column,        Nullable] public byte[]   Timestamp  { get; set; } // bytea

		#region Associations

		/// <summary>
		/// FK_Comment_Article_ArticleId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="ArticleId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Comment> CommentArticleIds { get; set; }

		/// <summary>
		/// FK_Article_ArticleType_TypeId
		/// </summary>
		[Association(ThisKey="TypeId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Article_ArticleType_TypeId", BackReferenceName="ArticleTypeIds")]
		public ArticleType Type { get; set; }

		/// <summary>
		/// FK_Article_User_UserId
		/// </summary>
		[Association(ThisKey="UserId", OtherKey="Id", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_Article_User_UserId", BackReferenceName="ArticleUserIds")]
		public User User { get; set; }

		#endregion
	}

	[Table("ArticleType")]
	public partial class ArticleType
	{
		[PrimaryKey, Identity   ] public int      Id         { get; set; } // integer
		[Column,        Nullable] public string   Name       { get; set; } // character varying(512)
		[Column,        Nullable] public string   EditerName { get; set; } // character varying(512)
		[Column,     NotNull    ] public int      Status     { get; set; } // integer
		[Column,     NotNull    ] public bool     IsDeleted  { get; set; } // boolean
		[Column,     NotNull    ] public DateTime CreateTime { get; set; } // timestamp (6) without time zone

		#region Associations

		/// <summary>
		/// FK_Article_ArticleType_TypeId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="TypeId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Article> ArticleTypeIds { get; set; }

		#endregion
	}

	[Table("Comment")]
	public partial class Comment
	{
		[PrimaryKey, Identity   ] public int      Id         { get; set; } // integer
		[Column,     NotNull    ] public DateTime CreateTime { get; set; } // timestamp (6) without time zone
		[Column,     NotNull    ] public bool     IsDelete   { get; set; } // boolean
		[Column,        Nullable] public string   Creator    { get; set; } // character varying(256)
		[Column,        Nullable] public string   Content    { get; set; } // text
		[Column,        Nullable] public int?     ParentId   { get; set; } // integer
		[Column,     NotNull    ] public int      Status     { get; set; } // integer
		[Column,        Nullable] public int?     ArticleId  { get; set; } // integer
		[Column,        Nullable] public byte[]   Timestamp  { get; set; } // bytea

		#region Associations

		/// <summary>
		/// FK_Comment_Article_ArticleId
		/// </summary>
		[Association(ThisKey="ArticleId", OtherKey="Id", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_Comment_Article_ArticleId", BackReferenceName="CommentArticleIds")]
		public Article Article { get; set; }

		#endregion
	}

	[Table("Log")]
	public partial class Log
	{
		[PrimaryKey, Identity] public int    Id          { get; set; } // integer
		[Column,     Nullable] public string Application { get; set; } // character varying(64)
		[Column,     Nullable] public string Logged      { get; set; } // character varying(128)
		[Column,     Nullable] public string Level       { get; set; } // character varying(64)
		[Column,     Nullable] public string Message     { get; set; } // character varying(512)
		[Column,     Nullable] public string Logger      { get; set; } // character varying(256)
		[Column,     Nullable] public string CallSite    { get; set; } // character varying(512)
		[Column,     Nullable] public string Exception   { get; set; } // character varying(512)
	}

	[Table("User")]
	public partial class User
	{
		[PrimaryKey, Identity   ] public int      Id         { get; set; } // integer
		[Column,     NotNull    ] public DateTime CreateTime { get; set; } // timestamp (6) without time zone
		[Column,        Nullable] public string   Name       { get; set; } // character varying(256)
		[Column,        Nullable] public string   Password   { get; set; } // character varying(256)
		[Column,     NotNull    ] public int      Status     { get; set; } // integer
		[Column,        Nullable] public string   Mobile     { get; set; } // character varying(128)
		[Column,        Nullable] public string   MailBox    { get; set; } // character varying(256)
		[Column,        Nullable] public string   SaltValue  { get; set; } // character varying(256)
		[Column,        Nullable] public byte[]   Timestamp  { get; set; } // bytea

		#region Associations

		/// <summary>
		/// FK_Article_User_UserId_BackReference
		/// </summary>
		[Association(ThisKey="Id", OtherKey="UserId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Article> ArticleUserIds { get; set; }

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region abbrev

		[Sql.Function(Name="pg_catalog.abbrev", ServerSideOnly=true)]
		public static string abbrev(NpgsqlInet? par4)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abs

		[Sql.Function(Name="pg_catalog.abs", ServerSideOnly=true)]
		public static decimal? abs(decimal? par16)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstime

		[Sql.Function(Name="pg_catalog.abstime", ServerSideOnly=true)]
		public static object abstime(DateTime? par20)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimeeq

		[Sql.Function(Name="pg_catalog.abstimeeq", ServerSideOnly=true)]
		public static bool? abstimeeq(object par22, object par23)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimege

		[Sql.Function(Name="pg_catalog.abstimege", ServerSideOnly=true)]
		public static bool? abstimege(object par25, object par26)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimegt

		[Sql.Function(Name="pg_catalog.abstimegt", ServerSideOnly=true)]
		public static bool? abstimegt(object par28, object par29)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimein

		[Sql.Function(Name="pg_catalog.abstimein", ServerSideOnly=true)]
		public static object abstimein(object par31)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimele

		[Sql.Function(Name="pg_catalog.abstimele", ServerSideOnly=true)]
		public static bool? abstimele(object par33, object par34)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimelt

		[Sql.Function(Name="pg_catalog.abstimelt", ServerSideOnly=true)]
		public static bool? abstimelt(object par36, object par37)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimene

		[Sql.Function(Name="pg_catalog.abstimene", ServerSideOnly=true)]
		public static bool? abstimene(object par39, object par40)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimeout

		[Sql.Function(Name="pg_catalog.abstimeout", ServerSideOnly=true)]
		public static object abstimeout(object par42)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimerecv

		[Sql.Function(Name="pg_catalog.abstimerecv", ServerSideOnly=true)]
		public static object abstimerecv(object par44)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region abstimesend

		[Sql.Function(Name="pg_catalog.abstimesend", ServerSideOnly=true)]
		public static byte[] abstimesend(object par46)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region aclcontains

		[Sql.Function(Name="pg_catalog.aclcontains", ServerSideOnly=true)]
		public static bool? aclcontains(object par48, object par49)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region acldefault

		[Sql.Function(Name="pg_catalog.acldefault", ServerSideOnly=true)]
		public static object acldefault(object par51, int? par52)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region aclinsert

		[Sql.Function(Name="pg_catalog.aclinsert", ServerSideOnly=true)]
		public static object aclinsert(object par54, object par55)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region aclitemeq

		[Sql.Function(Name="pg_catalog.aclitemeq", ServerSideOnly=true)]
		public static bool? aclitemeq(object par57, object par58)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region aclitemin

		[Sql.Function(Name="pg_catalog.aclitemin", ServerSideOnly=true)]
		public static object aclitemin(object par60)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region aclitemout

		[Sql.Function(Name="pg_catalog.aclitemout", ServerSideOnly=true)]
		public static object aclitemout(object par62)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region aclremove

		[Sql.Function(Name="pg_catalog.aclremove", ServerSideOnly=true)]
		public static object aclremove(object par64, object par65)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region acos

		[Sql.Function(Name="pg_catalog.acos", ServerSideOnly=true)]
		public static double? acos(double? par67)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region acosd

		[Sql.Function(Name="pg_catalog.acosd", ServerSideOnly=true)]
		public static double? acosd(double? par69)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region age

		[Sql.Function(Name="pg_catalog.age", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? age(DateTime? par81)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region amvalidate

		[Sql.Function(Name="pg_catalog.amvalidate", ServerSideOnly=true)]
		public static bool? amvalidate(int? par83)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyarray_in

		[Sql.Function(Name="pg_catalog.anyarray_in", ServerSideOnly=true)]
		public static object anyarray_in(object par85)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyarray_out

		[Sql.Function(Name="pg_catalog.anyarray_out", ServerSideOnly=true)]
		public static object anyarray_out(object par87)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyarray_recv

		[Sql.Function(Name="pg_catalog.anyarray_recv", ServerSideOnly=true)]
		public static object anyarray_recv(object par89)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyarray_send

		[Sql.Function(Name="pg_catalog.anyarray_send", ServerSideOnly=true)]
		public static byte[] anyarray_send(object par91)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyelement_in

		[Sql.Function(Name="pg_catalog.anyelement_in", ServerSideOnly=true)]
		public static object anyelement_in(object par93)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyelement_out

		[Sql.Function(Name="pg_catalog.anyelement_out", ServerSideOnly=true)]
		public static object anyelement_out(object par95)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyenum_in

		[Sql.Function(Name="pg_catalog.anyenum_in", ServerSideOnly=true)]
		public static object anyenum_in(object par97)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyenum_out

		[Sql.Function(Name="pg_catalog.anyenum_out", ServerSideOnly=true)]
		public static object anyenum_out(object par99)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region any_in

		[Sql.Function(Name="pg_catalog.any_in", ServerSideOnly=true)]
		public static object any_in(object par101)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anynonarray_in

		[Sql.Function(Name="pg_catalog.anynonarray_in", ServerSideOnly=true)]
		public static object anynonarray_in(object par103)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anynonarray_out

		[Sql.Function(Name="pg_catalog.anynonarray_out", ServerSideOnly=true)]
		public static object anynonarray_out(object par105)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region any_out

		[Sql.Function(Name="pg_catalog.any_out", ServerSideOnly=true)]
		public static object any_out(object par107)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyrange_in

		[Sql.Function(Name="pg_catalog.anyrange_in", ServerSideOnly=true)]
		public static object anyrange_in(object par109, int? par110, int? par111)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anyrange_out

		[Sql.Function(Name="pg_catalog.anyrange_out", ServerSideOnly=true)]
		public static object anyrange_out(object par113)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region anytextcat

		[Sql.Function(Name="pg_catalog.anytextcat", ServerSideOnly=true)]
		public static string anytextcat(object par115, string par116)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region area

		[Sql.Function(Name="pg_catalog.area", ServerSideOnly=true)]
		public static double? area(NpgsqlPath? par122)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region areajoinsel

		[Sql.Function(Name="pg_catalog.areajoinsel", ServerSideOnly=true)]
		public static double? areajoinsel(object par124, int? par125, object par126, short? par127, object par128)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region areasel

		[Sql.Function(Name="pg_catalog.areasel", ServerSideOnly=true)]
		public static double? areasel(object par130, int? par131, object par132, int? par133)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_agg

		[Sql.Function(Name="pg_catalog.array_agg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static object array_agg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par137)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_agg_array_finalfn

		[Sql.Function(Name="pg_catalog.array_agg_array_finalfn", ServerSideOnly=true)]
		public static object array_agg_array_finalfn(object par139, object par140)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_agg_array_transfn

		[Sql.Function(Name="pg_catalog.array_agg_array_transfn", ServerSideOnly=true)]
		public static object array_agg_array_transfn(object par142, object par143)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_agg_finalfn

		[Sql.Function(Name="pg_catalog.array_agg_finalfn", ServerSideOnly=true)]
		public static object array_agg_finalfn(object par145, object par146)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_agg_transfn

		[Sql.Function(Name="pg_catalog.array_agg_transfn", ServerSideOnly=true)]
		public static object array_agg_transfn(object par148, object par149)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_append

		[Sql.Function(Name="pg_catalog.array_append", ServerSideOnly=true)]
		public static object array_append(object par151, object par152)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_cat

		[Sql.Function(Name="pg_catalog.array_cat", ServerSideOnly=true)]
		public static object array_cat(object par154, object par155)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region arraycontained

		[Sql.Function(Name="pg_catalog.arraycontained", ServerSideOnly=true)]
		public static bool? arraycontained(object par157, object par158)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region arraycontains

		[Sql.Function(Name="pg_catalog.arraycontains", ServerSideOnly=true)]
		public static bool? arraycontains(object par160, object par161)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region arraycontjoinsel

		[Sql.Function(Name="pg_catalog.arraycontjoinsel", ServerSideOnly=true)]
		public static double? arraycontjoinsel(object par163, int? par164, object par165, short? par166, object par167)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region arraycontsel

		[Sql.Function(Name="pg_catalog.arraycontsel", ServerSideOnly=true)]
		public static double? arraycontsel(object par169, int? par170, object par171, int? par172)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_dims

		[Sql.Function(Name="pg_catalog.array_dims", ServerSideOnly=true)]
		public static string array_dims(object par174)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_eq

		[Sql.Function(Name="pg_catalog.array_eq", ServerSideOnly=true)]
		public static bool? array_eq(object par176, object par177)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_fill

		[Sql.Function(Name="pg_catalog.array_fill", ServerSideOnly=true)]
		public static object array_fill(object par182, object par183, object par184)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_ge

		[Sql.Function(Name="pg_catalog.array_ge", ServerSideOnly=true)]
		public static bool? array_ge(object par186, object par187)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_gt

		[Sql.Function(Name="pg_catalog.array_gt", ServerSideOnly=true)]
		public static bool? array_gt(object par189, object par190)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_in

		[Sql.Function(Name="pg_catalog.array_in", ServerSideOnly=true)]
		public static object array_in(object par192, int? par193, int? par194)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_larger

		[Sql.Function(Name="pg_catalog.array_larger", ServerSideOnly=true)]
		public static object array_larger(object par196, object par197)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_le

		[Sql.Function(Name="pg_catalog.array_le", ServerSideOnly=true)]
		public static bool? array_le(object par199, object par200)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_length

		[Sql.Function(Name="pg_catalog.array_length", ServerSideOnly=true)]
		public static int? array_length(object par202, int? par203)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_lower

		[Sql.Function(Name="pg_catalog.array_lower", ServerSideOnly=true)]
		public static int? array_lower(object par205, int? par206)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_lt

		[Sql.Function(Name="pg_catalog.array_lt", ServerSideOnly=true)]
		public static bool? array_lt(object par208, object par209)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_ndims

		[Sql.Function(Name="pg_catalog.array_ndims", ServerSideOnly=true)]
		public static int? array_ndims(object par211)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_ne

		[Sql.Function(Name="pg_catalog.array_ne", ServerSideOnly=true)]
		public static bool? array_ne(object par213, object par214)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_out

		[Sql.Function(Name="pg_catalog.array_out", ServerSideOnly=true)]
		public static object array_out(object par216)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region arrayoverlap

		[Sql.Function(Name="pg_catalog.arrayoverlap", ServerSideOnly=true)]
		public static bool? arrayoverlap(object par218, object par219)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_position

		[Sql.Function(Name="pg_catalog.array_position", ServerSideOnly=true)]
		public static int? array_position(object par224, object par225, int? par226)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_positions

		[Sql.Function(Name="pg_catalog.array_positions", ServerSideOnly=true)]
		public static object array_positions(object par228, object par229)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_prepend

		[Sql.Function(Name="pg_catalog.array_prepend", ServerSideOnly=true)]
		public static object array_prepend(object par231, object par232)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_recv

		[Sql.Function(Name="pg_catalog.array_recv", ServerSideOnly=true)]
		public static object array_recv(object par234, int? par235, int? par236)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_remove

		[Sql.Function(Name="pg_catalog.array_remove", ServerSideOnly=true)]
		public static object array_remove(object par238, object par239)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_replace

		[Sql.Function(Name="pg_catalog.array_replace", ServerSideOnly=true)]
		public static object array_replace(object par241, object par242, object par243)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_send

		[Sql.Function(Name="pg_catalog.array_send", ServerSideOnly=true)]
		public static byte[] array_send(object par245)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_smaller

		[Sql.Function(Name="pg_catalog.array_smaller", ServerSideOnly=true)]
		public static object array_smaller(object par247, object par248)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_to_json

		[Sql.Function(Name="pg_catalog.array_to_json", ServerSideOnly=true)]
		public static string array_to_json(object par252, bool? par253)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_to_string

		[Sql.Function(Name="pg_catalog.array_to_string", ServerSideOnly=true)]
		public static string array_to_string(object par259, string par260)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_to_tsvector

		[Sql.Function(Name="pg_catalog.array_to_tsvector", ServerSideOnly=true)]
		public static object array_to_tsvector(object par262)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_typanalyze

		[Sql.Function(Name="pg_catalog.array_typanalyze", ServerSideOnly=true)]
		public static bool? array_typanalyze(object par264)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region array_upper

		[Sql.Function(Name="pg_catalog.array_upper", ServerSideOnly=true)]
		public static int? array_upper(object par266, int? par267)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ascii

		[Sql.Function(Name="pg_catalog.ascii", ServerSideOnly=true)]
		public static int? ascii(string par269)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ascii_to_mic

		[Sql.Function(Name="pg_catalog.ascii_to_mic", ServerSideOnly=true)]
		public static object ascii_to_mic(int? par270, int? par271, object par272, object par273, int? par274)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ascii_to_utf8

		[Sql.Function(Name="pg_catalog.ascii_to_utf8", ServerSideOnly=true)]
		public static object ascii_to_utf8(int? par275, int? par276, object par277, object par278, int? par279)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region asin

		[Sql.Function(Name="pg_catalog.asin", ServerSideOnly=true)]
		public static double? asin(double? par281)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region asind

		[Sql.Function(Name="pg_catalog.asind", ServerSideOnly=true)]
		public static double? asind(double? par283)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region atan

		[Sql.Function(Name="pg_catalog.atan", ServerSideOnly=true)]
		public static double? atan(double? par285)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region atan2

		[Sql.Function(Name="pg_catalog.atan2", ServerSideOnly=true)]
		public static double? atan2(double? par287, double? par288)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region atan2d

		[Sql.Function(Name="pg_catalog.atan2d", ServerSideOnly=true)]
		public static double? atan2d(double? par290, double? par291)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region atand

		[Sql.Function(Name="pg_catalog.atand", ServerSideOnly=true)]
		public static double? atand(double? par293)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region avg

		[Sql.Function(Name="pg_catalog.avg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static NpgsqlTimeSpan? avg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, NpgsqlTimeSpan?>> par307)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bernoulli

		[Sql.Function(Name="pg_catalog.bernoulli", ServerSideOnly=true)]
		public static object bernoulli(object par309)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region big5_to_euc_tw

		[Sql.Function(Name="pg_catalog.big5_to_euc_tw", ServerSideOnly=true)]
		public static object big5_to_euc_tw(int? par310, int? par311, object par312, object par313, int? par314)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region big5_to_mic

		[Sql.Function(Name="pg_catalog.big5_to_mic", ServerSideOnly=true)]
		public static object big5_to_mic(int? par315, int? par316, object par317, object par318, int? par319)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region big5_to_utf8

		[Sql.Function(Name="pg_catalog.big5_to_utf8", ServerSideOnly=true)]
		public static object big5_to_utf8(int? par320, int? par321, object par322, object par323, int? par324)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_create_empty_extension

		[Sql.Function(Name="pg_catalog.binary_upgrade_create_empty_extension", ServerSideOnly=true)]
		public static object binary_upgrade_create_empty_extension(string par325, string par326, bool? par327, string par328, object par329, object par330, object par331)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_missing_value

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_missing_value", ServerSideOnly=true)]
		public static object binary_upgrade_set_missing_value(int? par332, string par333, string par334)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_array_pg_type_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_array_pg_type_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_array_pg_type_oid(int? par335)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_heap_pg_class_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_heap_pg_class_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_heap_pg_class_oid(int? par336)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_index_pg_class_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_index_pg_class_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_index_pg_class_oid(int? par337)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_pg_authid_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_pg_authid_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_pg_authid_oid(int? par338)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_pg_enum_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_pg_enum_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_pg_enum_oid(int? par339)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_pg_type_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_pg_type_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_pg_type_oid(int? par340)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_toast_pg_class_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_toast_pg_class_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_toast_pg_class_oid(int? par341)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_next_toast_pg_type_oid

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_next_toast_pg_type_oid", ServerSideOnly=true)]
		public static object binary_upgrade_set_next_toast_pg_type_oid(int? par342)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region binary_upgrade_set_record_init_privs

		[Sql.Function(Name="pg_catalog.binary_upgrade_set_record_init_privs", ServerSideOnly=true)]
		public static object binary_upgrade_set_record_init_privs(bool? par343)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit

		[Sql.Function(Name="pg_catalog.bit", ServerSideOnly=true)]
		public static BitArray bit(long? par352, int? par353)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitand

		[Sql.Function(Name="pg_catalog.bitand", ServerSideOnly=true)]
		public static BitArray bitand(BitArray par355, BitArray par356)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit_and

		[Sql.Function(Name="pg_catalog.bit_and", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static BitArray bit_and<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, BitArray>> par364)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitcat

		[Sql.Function(Name="pg_catalog.bitcat", ServerSideOnly=true)]
		public static BitArray bitcat(BitArray par366, BitArray par367)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitcmp

		[Sql.Function(Name="pg_catalog.bitcmp", ServerSideOnly=true)]
		public static int? bitcmp(BitArray par369, BitArray par370)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region biteq

		[Sql.Function(Name="pg_catalog.biteq", ServerSideOnly=true)]
		public static bool? biteq(BitArray par372, BitArray par373)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitge

		[Sql.Function(Name="pg_catalog.bitge", ServerSideOnly=true)]
		public static bool? bitge(BitArray par375, BitArray par376)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitgt

		[Sql.Function(Name="pg_catalog.bitgt", ServerSideOnly=true)]
		public static bool? bitgt(BitArray par378, BitArray par379)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit_in

		[Sql.Function(Name="pg_catalog.bit_in", ServerSideOnly=true)]
		public static BitArray bit_in(object par381, int? par382, int? par383)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitle

		[Sql.Function(Name="pg_catalog.bitle", ServerSideOnly=true)]
		public static bool? bitle(BitArray par385, BitArray par386)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit_length

		[Sql.Function(Name="pg_catalog.bit_length", ServerSideOnly=true)]
		public static int? bit_length(BitArray par392)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitlt

		[Sql.Function(Name="pg_catalog.bitlt", ServerSideOnly=true)]
		public static bool? bitlt(BitArray par394, BitArray par395)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitne

		[Sql.Function(Name="pg_catalog.bitne", ServerSideOnly=true)]
		public static bool? bitne(BitArray par397, BitArray par398)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitnot

		[Sql.Function(Name="pg_catalog.bitnot", ServerSideOnly=true)]
		public static BitArray bitnot(BitArray par400)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitor

		[Sql.Function(Name="pg_catalog.bitor", ServerSideOnly=true)]
		public static BitArray bitor(BitArray par402, BitArray par403)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit_or

		[Sql.Function(Name="pg_catalog.bit_or", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static BitArray bit_or<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, BitArray>> par411)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit_out

		[Sql.Function(Name="pg_catalog.bit_out", ServerSideOnly=true)]
		public static object bit_out(BitArray par413)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit_recv

		[Sql.Function(Name="pg_catalog.bit_recv", ServerSideOnly=true)]
		public static BitArray bit_recv(object par415, int? par416, int? par417)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bit_send

		[Sql.Function(Name="pg_catalog.bit_send", ServerSideOnly=true)]
		public static byte[] bit_send(BitArray par419)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitshiftleft

		[Sql.Function(Name="pg_catalog.bitshiftleft", ServerSideOnly=true)]
		public static BitArray bitshiftleft(BitArray par421, int? par422)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitshiftright

		[Sql.Function(Name="pg_catalog.bitshiftright", ServerSideOnly=true)]
		public static BitArray bitshiftright(BitArray par424, int? par425)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bittypmodin

		[Sql.Function(Name="pg_catalog.bittypmodin", ServerSideOnly=true)]
		public static int? bittypmodin(object par427)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bittypmodout

		[Sql.Function(Name="pg_catalog.bittypmodout", ServerSideOnly=true)]
		public static object bittypmodout(int? par429)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bitxor

		[Sql.Function(Name="pg_catalog.bitxor", ServerSideOnly=true)]
		public static BitArray bitxor(BitArray par431, BitArray par432)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region @bool

		[Sql.Function(Name="pg_catalog.bool", ServerSideOnly=true)]
		public static bool? @bool(string par436)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bool_accum

		[Sql.Function(Name="pg_catalog.bool_accum", ServerSideOnly=true)]
		public static object bool_accum(object par438, bool? par439)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bool_accum_inv

		[Sql.Function(Name="pg_catalog.bool_accum_inv", ServerSideOnly=true)]
		public static object bool_accum_inv(object par441, bool? par442)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bool_alltrue

		[Sql.Function(Name="pg_catalog.bool_alltrue", ServerSideOnly=true)]
		public static bool? bool_alltrue(object par444)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bool_and

		[Sql.Function(Name="pg_catalog.bool_and", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static bool? bool_and<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, bool?>> par446)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region booland_statefunc

		[Sql.Function(Name="pg_catalog.booland_statefunc", ServerSideOnly=true)]
		public static bool? booland_statefunc(bool? par448, bool? par449)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bool_anytrue

		[Sql.Function(Name="pg_catalog.bool_anytrue", ServerSideOnly=true)]
		public static bool? bool_anytrue(object par451)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region booleq

		[Sql.Function(Name="pg_catalog.booleq", ServerSideOnly=true)]
		public static bool? booleq(bool? par453, bool? par454)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolge

		[Sql.Function(Name="pg_catalog.boolge", ServerSideOnly=true)]
		public static bool? boolge(bool? par456, bool? par457)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolgt

		[Sql.Function(Name="pg_catalog.boolgt", ServerSideOnly=true)]
		public static bool? boolgt(bool? par459, bool? par460)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolin

		[Sql.Function(Name="pg_catalog.boolin", ServerSideOnly=true)]
		public static bool? boolin(object par462)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolle

		[Sql.Function(Name="pg_catalog.boolle", ServerSideOnly=true)]
		public static bool? boolle(bool? par464, bool? par465)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boollt

		[Sql.Function(Name="pg_catalog.boollt", ServerSideOnly=true)]
		public static bool? boollt(bool? par467, bool? par468)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolne

		[Sql.Function(Name="pg_catalog.boolne", ServerSideOnly=true)]
		public static bool? boolne(bool? par470, bool? par471)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bool_or

		[Sql.Function(Name="pg_catalog.bool_or", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static bool? bool_or<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, bool?>> par473)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolor_statefunc

		[Sql.Function(Name="pg_catalog.boolor_statefunc", ServerSideOnly=true)]
		public static bool? boolor_statefunc(bool? par475, bool? par476)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolout

		[Sql.Function(Name="pg_catalog.boolout", ServerSideOnly=true)]
		public static object boolout(bool? par478)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolrecv

		[Sql.Function(Name="pg_catalog.boolrecv", ServerSideOnly=true)]
		public static bool? boolrecv(object par480)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region boolsend

		[Sql.Function(Name="pg_catalog.boolsend", ServerSideOnly=true)]
		public static byte[] boolsend(bool? par482)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bound_box

		[Sql.Function(Name="pg_catalog.bound_box", ServerSideOnly=true)]
		public static NpgsqlBox? bound_box(NpgsqlBox? par484, NpgsqlBox? par485)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box

		[Sql.Function(Name="pg_catalog.box", ServerSideOnly=true)]
		public static NpgsqlBox? box(NpgsqlPoint? par494)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_above

		[Sql.Function(Name="pg_catalog.box_above", ServerSideOnly=true)]
		public static bool? box_above(NpgsqlBox? par496, NpgsqlBox? par497)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_above_eq

		[Sql.Function(Name="pg_catalog.box_above_eq", ServerSideOnly=true)]
		public static bool? box_above_eq(NpgsqlBox? par499, NpgsqlBox? par500)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_add

		[Sql.Function(Name="pg_catalog.box_add", ServerSideOnly=true)]
		public static NpgsqlBox? box_add(NpgsqlBox? par502, NpgsqlPoint? par503)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_below

		[Sql.Function(Name="pg_catalog.box_below", ServerSideOnly=true)]
		public static bool? box_below(NpgsqlBox? par505, NpgsqlBox? par506)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_below_eq

		[Sql.Function(Name="pg_catalog.box_below_eq", ServerSideOnly=true)]
		public static bool? box_below_eq(NpgsqlBox? par508, NpgsqlBox? par509)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_center

		[Sql.Function(Name="pg_catalog.box_center", ServerSideOnly=true)]
		public static NpgsqlPoint? box_center(NpgsqlBox? par511)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_contain

		[Sql.Function(Name="pg_catalog.box_contain", ServerSideOnly=true)]
		public static bool? box_contain(NpgsqlBox? par513, NpgsqlBox? par514)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_contained

		[Sql.Function(Name="pg_catalog.box_contained", ServerSideOnly=true)]
		public static bool? box_contained(NpgsqlBox? par516, NpgsqlBox? par517)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_contain_pt

		[Sql.Function(Name="pg_catalog.box_contain_pt", ServerSideOnly=true)]
		public static bool? box_contain_pt(NpgsqlBox? par519, NpgsqlPoint? par520)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_distance

		[Sql.Function(Name="pg_catalog.box_distance", ServerSideOnly=true)]
		public static double? box_distance(NpgsqlBox? par522, NpgsqlBox? par523)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_div

		[Sql.Function(Name="pg_catalog.box_div", ServerSideOnly=true)]
		public static NpgsqlBox? box_div(NpgsqlBox? par525, NpgsqlPoint? par526)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_eq

		[Sql.Function(Name="pg_catalog.box_eq", ServerSideOnly=true)]
		public static bool? box_eq(NpgsqlBox? par528, NpgsqlBox? par529)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_ge

		[Sql.Function(Name="pg_catalog.box_ge", ServerSideOnly=true)]
		public static bool? box_ge(NpgsqlBox? par531, NpgsqlBox? par532)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_gt

		[Sql.Function(Name="pg_catalog.box_gt", ServerSideOnly=true)]
		public static bool? box_gt(NpgsqlBox? par534, NpgsqlBox? par535)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_in

		[Sql.Function(Name="pg_catalog.box_in", ServerSideOnly=true)]
		public static NpgsqlBox? box_in(object par537)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_intersect

		[Sql.Function(Name="pg_catalog.box_intersect", ServerSideOnly=true)]
		public static NpgsqlBox? box_intersect(NpgsqlBox? par539, NpgsqlBox? par540)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_le

		[Sql.Function(Name="pg_catalog.box_le", ServerSideOnly=true)]
		public static bool? box_le(NpgsqlBox? par542, NpgsqlBox? par543)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_left

		[Sql.Function(Name="pg_catalog.box_left", ServerSideOnly=true)]
		public static bool? box_left(NpgsqlBox? par545, NpgsqlBox? par546)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_lt

		[Sql.Function(Name="pg_catalog.box_lt", ServerSideOnly=true)]
		public static bool? box_lt(NpgsqlBox? par548, NpgsqlBox? par549)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_mul

		[Sql.Function(Name="pg_catalog.box_mul", ServerSideOnly=true)]
		public static NpgsqlBox? box_mul(NpgsqlBox? par551, NpgsqlPoint? par552)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_out

		[Sql.Function(Name="pg_catalog.box_out", ServerSideOnly=true)]
		public static object box_out(NpgsqlBox? par554)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_overabove

		[Sql.Function(Name="pg_catalog.box_overabove", ServerSideOnly=true)]
		public static bool? box_overabove(NpgsqlBox? par556, NpgsqlBox? par557)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_overbelow

		[Sql.Function(Name="pg_catalog.box_overbelow", ServerSideOnly=true)]
		public static bool? box_overbelow(NpgsqlBox? par559, NpgsqlBox? par560)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_overlap

		[Sql.Function(Name="pg_catalog.box_overlap", ServerSideOnly=true)]
		public static bool? box_overlap(NpgsqlBox? par562, NpgsqlBox? par563)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_overleft

		[Sql.Function(Name="pg_catalog.box_overleft", ServerSideOnly=true)]
		public static bool? box_overleft(NpgsqlBox? par565, NpgsqlBox? par566)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_overright

		[Sql.Function(Name="pg_catalog.box_overright", ServerSideOnly=true)]
		public static bool? box_overright(NpgsqlBox? par568, NpgsqlBox? par569)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_recv

		[Sql.Function(Name="pg_catalog.box_recv", ServerSideOnly=true)]
		public static NpgsqlBox? box_recv(object par571)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_right

		[Sql.Function(Name="pg_catalog.box_right", ServerSideOnly=true)]
		public static bool? box_right(NpgsqlBox? par573, NpgsqlBox? par574)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_same

		[Sql.Function(Name="pg_catalog.box_same", ServerSideOnly=true)]
		public static bool? box_same(NpgsqlBox? par576, NpgsqlBox? par577)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_send

		[Sql.Function(Name="pg_catalog.box_send", ServerSideOnly=true)]
		public static byte[] box_send(NpgsqlBox? par579)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region box_sub

		[Sql.Function(Name="pg_catalog.box_sub", ServerSideOnly=true)]
		public static NpgsqlBox? box_sub(NpgsqlBox? par581, NpgsqlPoint? par582)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar

		[Sql.Function(Name="pg_catalog.bpchar", ServerSideOnly=true)]
		public static string bpchar(object par590)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharcmp

		[Sql.Function(Name="pg_catalog.bpcharcmp", ServerSideOnly=true)]
		public static int? bpcharcmp(string par592, string par593)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchareq

		[Sql.Function(Name="pg_catalog.bpchareq", ServerSideOnly=true)]
		public static bool? bpchareq(string par595, string par596)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharge

		[Sql.Function(Name="pg_catalog.bpcharge", ServerSideOnly=true)]
		public static bool? bpcharge(string par598, string par599)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchargt

		[Sql.Function(Name="pg_catalog.bpchargt", ServerSideOnly=true)]
		public static bool? bpchargt(string par601, string par602)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchariclike

		[Sql.Function(Name="pg_catalog.bpchariclike", ServerSideOnly=true)]
		public static bool? bpchariclike(string par604, string par605)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharicnlike

		[Sql.Function(Name="pg_catalog.bpcharicnlike", ServerSideOnly=true)]
		public static bool? bpcharicnlike(string par607, string par608)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharicregexeq

		[Sql.Function(Name="pg_catalog.bpcharicregexeq", ServerSideOnly=true)]
		public static bool? bpcharicregexeq(string par610, string par611)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharicregexne

		[Sql.Function(Name="pg_catalog.bpcharicregexne", ServerSideOnly=true)]
		public static bool? bpcharicregexne(string par613, string par614)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharin

		[Sql.Function(Name="pg_catalog.bpcharin", ServerSideOnly=true)]
		public static string bpcharin(object par616, int? par617, int? par618)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar_larger

		[Sql.Function(Name="pg_catalog.bpchar_larger", ServerSideOnly=true)]
		public static string bpchar_larger(string par620, string par621)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharle

		[Sql.Function(Name="pg_catalog.bpcharle", ServerSideOnly=true)]
		public static bool? bpcharle(string par623, string par624)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharlike

		[Sql.Function(Name="pg_catalog.bpcharlike", ServerSideOnly=true)]
		public static bool? bpcharlike(string par626, string par627)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharlt

		[Sql.Function(Name="pg_catalog.bpcharlt", ServerSideOnly=true)]
		public static bool? bpcharlt(string par629, string par630)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharne

		[Sql.Function(Name="pg_catalog.bpcharne", ServerSideOnly=true)]
		public static bool? bpcharne(string par632, string par633)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharnlike

		[Sql.Function(Name="pg_catalog.bpcharnlike", ServerSideOnly=true)]
		public static bool? bpcharnlike(string par635, string par636)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharout

		[Sql.Function(Name="pg_catalog.bpcharout", ServerSideOnly=true)]
		public static object bpcharout(string par638)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar_pattern_ge

		[Sql.Function(Name="pg_catalog.bpchar_pattern_ge", ServerSideOnly=true)]
		public static bool? bpchar_pattern_ge(string par640, string par641)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar_pattern_gt

		[Sql.Function(Name="pg_catalog.bpchar_pattern_gt", ServerSideOnly=true)]
		public static bool? bpchar_pattern_gt(string par643, string par644)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar_pattern_le

		[Sql.Function(Name="pg_catalog.bpchar_pattern_le", ServerSideOnly=true)]
		public static bool? bpchar_pattern_le(string par646, string par647)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar_pattern_lt

		[Sql.Function(Name="pg_catalog.bpchar_pattern_lt", ServerSideOnly=true)]
		public static bool? bpchar_pattern_lt(string par649, string par650)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharrecv

		[Sql.Function(Name="pg_catalog.bpcharrecv", ServerSideOnly=true)]
		public static string bpcharrecv(object par652, int? par653, int? par654)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharregexeq

		[Sql.Function(Name="pg_catalog.bpcharregexeq", ServerSideOnly=true)]
		public static bool? bpcharregexeq(string par656, string par657)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharregexne

		[Sql.Function(Name="pg_catalog.bpcharregexne", ServerSideOnly=true)]
		public static bool? bpcharregexne(string par659, string par660)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpcharsend

		[Sql.Function(Name="pg_catalog.bpcharsend", ServerSideOnly=true)]
		public static byte[] bpcharsend(string par662)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar_smaller

		[Sql.Function(Name="pg_catalog.bpchar_smaller", ServerSideOnly=true)]
		public static string bpchar_smaller(string par664, string par665)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchar_sortsupport

		[Sql.Function(Name="pg_catalog.bpchar_sortsupport", ServerSideOnly=true)]
		public static object bpchar_sortsupport(object par666)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchartypmodin

		[Sql.Function(Name="pg_catalog.bpchartypmodin", ServerSideOnly=true)]
		public static int? bpchartypmodin(object par668)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bpchartypmodout

		[Sql.Function(Name="pg_catalog.bpchartypmodout", ServerSideOnly=true)]
		public static object bpchartypmodout(int? par670)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_desummarize_range

		[Sql.Function(Name="pg_catalog.brin_desummarize_range", ServerSideOnly=true)]
		public static object brin_desummarize_range(object par671, long? par672)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brinhandler

		[Sql.Function(Name="pg_catalog.brinhandler", ServerSideOnly=true)]
		public static object brinhandler(object par674)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_inclusion_add_value

		[Sql.Function(Name="pg_catalog.brin_inclusion_add_value", ServerSideOnly=true)]
		public static bool? brin_inclusion_add_value(object par676, object par677, object par678, object par679)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_inclusion_consistent

		[Sql.Function(Name="pg_catalog.brin_inclusion_consistent", ServerSideOnly=true)]
		public static bool? brin_inclusion_consistent(object par681, object par682, object par683)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_inclusion_opcinfo

		[Sql.Function(Name="pg_catalog.brin_inclusion_opcinfo", ServerSideOnly=true)]
		public static object brin_inclusion_opcinfo(object par685)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_inclusion_union

		[Sql.Function(Name="pg_catalog.brin_inclusion_union", ServerSideOnly=true)]
		public static bool? brin_inclusion_union(object par687, object par688, object par689)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_minmax_add_value

		[Sql.Function(Name="pg_catalog.brin_minmax_add_value", ServerSideOnly=true)]
		public static bool? brin_minmax_add_value(object par691, object par692, object par693, object par694)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_minmax_consistent

		[Sql.Function(Name="pg_catalog.brin_minmax_consistent", ServerSideOnly=true)]
		public static bool? brin_minmax_consistent(object par696, object par697, object par698)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_minmax_opcinfo

		[Sql.Function(Name="pg_catalog.brin_minmax_opcinfo", ServerSideOnly=true)]
		public static object brin_minmax_opcinfo(object par700)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_minmax_union

		[Sql.Function(Name="pg_catalog.brin_minmax_union", ServerSideOnly=true)]
		public static bool? brin_minmax_union(object par702, object par703, object par704)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_summarize_new_values

		[Sql.Function(Name="pg_catalog.brin_summarize_new_values", ServerSideOnly=true)]
		public static int? brin_summarize_new_values(object par706)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region brin_summarize_range

		[Sql.Function(Name="pg_catalog.brin_summarize_range", ServerSideOnly=true)]
		public static int? brin_summarize_range(object par708, long? par709)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region broadcast

		[Sql.Function(Name="pg_catalog.broadcast", ServerSideOnly=true)]
		public static NpgsqlInet? broadcast(NpgsqlInet? par711)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btabstimecmp

		[Sql.Function(Name="pg_catalog.btabstimecmp", ServerSideOnly=true)]
		public static int? btabstimecmp(object par713, object par714)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btarraycmp

		[Sql.Function(Name="pg_catalog.btarraycmp", ServerSideOnly=true)]
		public static int? btarraycmp(object par716, object par717)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btboolcmp

		[Sql.Function(Name="pg_catalog.btboolcmp", ServerSideOnly=true)]
		public static int? btboolcmp(bool? par719, bool? par720)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btbpchar_pattern_cmp

		[Sql.Function(Name="pg_catalog.btbpchar_pattern_cmp", ServerSideOnly=true)]
		public static int? btbpchar_pattern_cmp(string par722, string par723)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btbpchar_pattern_sortsupport

		[Sql.Function(Name="pg_catalog.btbpchar_pattern_sortsupport", ServerSideOnly=true)]
		public static object btbpchar_pattern_sortsupport(object par724)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btcharcmp

		[Sql.Function(Name="pg_catalog.btcharcmp", ServerSideOnly=true)]
		public static int? btcharcmp(object par726, object par727)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btfloat48cmp

		[Sql.Function(Name="pg_catalog.btfloat48cmp", ServerSideOnly=true)]
		public static int? btfloat48cmp(float? par729, double? par730)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btfloat4cmp

		[Sql.Function(Name="pg_catalog.btfloat4cmp", ServerSideOnly=true)]
		public static int? btfloat4cmp(float? par732, float? par733)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btfloat4sortsupport

		[Sql.Function(Name="pg_catalog.btfloat4sortsupport", ServerSideOnly=true)]
		public static object btfloat4sortsupport(object par734)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btfloat84cmp

		[Sql.Function(Name="pg_catalog.btfloat84cmp", ServerSideOnly=true)]
		public static int? btfloat84cmp(double? par736, float? par737)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btfloat8cmp

		[Sql.Function(Name="pg_catalog.btfloat8cmp", ServerSideOnly=true)]
		public static int? btfloat8cmp(double? par739, double? par740)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btfloat8sortsupport

		[Sql.Function(Name="pg_catalog.btfloat8sortsupport", ServerSideOnly=true)]
		public static object btfloat8sortsupport(object par741)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bthandler

		[Sql.Function(Name="pg_catalog.bthandler", ServerSideOnly=true)]
		public static object bthandler(object par743)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint24cmp

		[Sql.Function(Name="pg_catalog.btint24cmp", ServerSideOnly=true)]
		public static int? btint24cmp(short? par745, int? par746)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint28cmp

		[Sql.Function(Name="pg_catalog.btint28cmp", ServerSideOnly=true)]
		public static int? btint28cmp(short? par748, long? par749)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint2cmp

		[Sql.Function(Name="pg_catalog.btint2cmp", ServerSideOnly=true)]
		public static int? btint2cmp(short? par751, short? par752)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint2sortsupport

		[Sql.Function(Name="pg_catalog.btint2sortsupport", ServerSideOnly=true)]
		public static object btint2sortsupport(object par753)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint42cmp

		[Sql.Function(Name="pg_catalog.btint42cmp", ServerSideOnly=true)]
		public static int? btint42cmp(int? par755, short? par756)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint48cmp

		[Sql.Function(Name="pg_catalog.btint48cmp", ServerSideOnly=true)]
		public static int? btint48cmp(int? par758, long? par759)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint4cmp

		[Sql.Function(Name="pg_catalog.btint4cmp", ServerSideOnly=true)]
		public static int? btint4cmp(int? par761, int? par762)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint4sortsupport

		[Sql.Function(Name="pg_catalog.btint4sortsupport", ServerSideOnly=true)]
		public static object btint4sortsupport(object par763)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint82cmp

		[Sql.Function(Name="pg_catalog.btint82cmp", ServerSideOnly=true)]
		public static int? btint82cmp(long? par765, short? par766)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint84cmp

		[Sql.Function(Name="pg_catalog.btint84cmp", ServerSideOnly=true)]
		public static int? btint84cmp(long? par768, int? par769)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint8cmp

		[Sql.Function(Name="pg_catalog.btint8cmp", ServerSideOnly=true)]
		public static int? btint8cmp(long? par771, long? par772)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btint8sortsupport

		[Sql.Function(Name="pg_catalog.btint8sortsupport", ServerSideOnly=true)]
		public static object btint8sortsupport(object par773)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btnamecmp

		[Sql.Function(Name="pg_catalog.btnamecmp", ServerSideOnly=true)]
		public static int? btnamecmp(string par775, string par776)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btnamesortsupport

		[Sql.Function(Name="pg_catalog.btnamesortsupport", ServerSideOnly=true)]
		public static object btnamesortsupport(object par777)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btoidcmp

		[Sql.Function(Name="pg_catalog.btoidcmp", ServerSideOnly=true)]
		public static int? btoidcmp(int? par779, int? par780)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btoidsortsupport

		[Sql.Function(Name="pg_catalog.btoidsortsupport", ServerSideOnly=true)]
		public static object btoidsortsupport(object par781)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btoidvectorcmp

		[Sql.Function(Name="pg_catalog.btoidvectorcmp", ServerSideOnly=true)]
		public static int? btoidvectorcmp(object par783, object par784)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btrecordcmp

		[Sql.Function(Name="pg_catalog.btrecordcmp", ServerSideOnly=true)]
		public static int? btrecordcmp(object par786, object par787)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btrecordimagecmp

		[Sql.Function(Name="pg_catalog.btrecordimagecmp", ServerSideOnly=true)]
		public static int? btrecordimagecmp(object par789, object par790)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btreltimecmp

		[Sql.Function(Name="pg_catalog.btreltimecmp", ServerSideOnly=true)]
		public static int? btreltimecmp(object par792, object par793)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region btrim

		[Sql.Function(Name="pg_catalog.btrim", ServerSideOnly=true)]
		public static string btrim(string par801)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bttextcmp

		[Sql.Function(Name="pg_catalog.bttextcmp", ServerSideOnly=true)]
		public static int? bttextcmp(string par803, string par804)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bttext_pattern_cmp

		[Sql.Function(Name="pg_catalog.bttext_pattern_cmp", ServerSideOnly=true)]
		public static int? bttext_pattern_cmp(string par806, string par807)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bttext_pattern_sortsupport

		[Sql.Function(Name="pg_catalog.bttext_pattern_sortsupport", ServerSideOnly=true)]
		public static object bttext_pattern_sortsupport(object par808)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bttextsortsupport

		[Sql.Function(Name="pg_catalog.bttextsortsupport", ServerSideOnly=true)]
		public static object bttextsortsupport(object par809)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bttidcmp

		[Sql.Function(Name="pg_catalog.bttidcmp", ServerSideOnly=true)]
		public static int? bttidcmp(object par811, object par812)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bttintervalcmp

		[Sql.Function(Name="pg_catalog.bttintervalcmp", ServerSideOnly=true)]
		public static int? bttintervalcmp(object par814, object par815)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteacat

		[Sql.Function(Name="pg_catalog.byteacat", ServerSideOnly=true)]
		public static byte[] byteacat(byte[] par817, byte[] par818)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteacmp

		[Sql.Function(Name="pg_catalog.byteacmp", ServerSideOnly=true)]
		public static int? byteacmp(byte[] par820, byte[] par821)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteaeq

		[Sql.Function(Name="pg_catalog.byteaeq", ServerSideOnly=true)]
		public static bool? byteaeq(byte[] par823, byte[] par824)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteage

		[Sql.Function(Name="pg_catalog.byteage", ServerSideOnly=true)]
		public static bool? byteage(byte[] par826, byte[] par827)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteagt

		[Sql.Function(Name="pg_catalog.byteagt", ServerSideOnly=true)]
		public static bool? byteagt(byte[] par829, byte[] par830)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteain

		[Sql.Function(Name="pg_catalog.byteain", ServerSideOnly=true)]
		public static byte[] byteain(object par832)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteale

		[Sql.Function(Name="pg_catalog.byteale", ServerSideOnly=true)]
		public static bool? byteale(byte[] par834, byte[] par835)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bytealike

		[Sql.Function(Name="pg_catalog.bytealike", ServerSideOnly=true)]
		public static bool? bytealike(byte[] par837, byte[] par838)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bytealt

		[Sql.Function(Name="pg_catalog.bytealt", ServerSideOnly=true)]
		public static bool? bytealt(byte[] par840, byte[] par841)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteane

		[Sql.Function(Name="pg_catalog.byteane", ServerSideOnly=true)]
		public static bool? byteane(byte[] par843, byte[] par844)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteanlike

		[Sql.Function(Name="pg_catalog.byteanlike", ServerSideOnly=true)]
		public static bool? byteanlike(byte[] par846, byte[] par847)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteaout

		[Sql.Function(Name="pg_catalog.byteaout", ServerSideOnly=true)]
		public static object byteaout(byte[] par849)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bytearecv

		[Sql.Function(Name="pg_catalog.bytearecv", ServerSideOnly=true)]
		public static byte[] bytearecv(object par851)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region byteasend

		[Sql.Function(Name="pg_catalog.byteasend", ServerSideOnly=true)]
		public static byte[] byteasend(byte[] par853)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bytea_sortsupport

		[Sql.Function(Name="pg_catalog.bytea_sortsupport", ServerSideOnly=true)]
		public static object bytea_sortsupport(object par854)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bytea_string_agg_finalfn

		[Sql.Function(Name="pg_catalog.bytea_string_agg_finalfn", ServerSideOnly=true)]
		public static byte[] bytea_string_agg_finalfn(object par856)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region bytea_string_agg_transfn

		[Sql.Function(Name="pg_catalog.bytea_string_agg_transfn", ServerSideOnly=true)]
		public static object bytea_string_agg_transfn(object par858, byte[] par859, byte[] par860)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cardinality

		[Sql.Function(Name="pg_catalog.cardinality", ServerSideOnly=true)]
		public static int? cardinality(object par862)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_cmp

		[Sql.Function(Name="pg_catalog.cash_cmp", ServerSideOnly=true)]
		public static int? cash_cmp(decimal? par864, decimal? par865)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_div_cash

		[Sql.Function(Name="pg_catalog.cash_div_cash", ServerSideOnly=true)]
		public static double? cash_div_cash(decimal? par867, decimal? par868)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_div_flt4

		[Sql.Function(Name="pg_catalog.cash_div_flt4", ServerSideOnly=true)]
		public static decimal? cash_div_flt4(decimal? par870, float? par871)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_div_flt8

		[Sql.Function(Name="pg_catalog.cash_div_flt8", ServerSideOnly=true)]
		public static decimal? cash_div_flt8(decimal? par873, double? par874)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_div_int2

		[Sql.Function(Name="pg_catalog.cash_div_int2", ServerSideOnly=true)]
		public static decimal? cash_div_int2(decimal? par876, short? par877)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_div_int4

		[Sql.Function(Name="pg_catalog.cash_div_int4", ServerSideOnly=true)]
		public static decimal? cash_div_int4(decimal? par879, int? par880)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_div_int8

		[Sql.Function(Name="pg_catalog.cash_div_int8", ServerSideOnly=true)]
		public static decimal? cash_div_int8(decimal? par882, long? par883)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_eq

		[Sql.Function(Name="pg_catalog.cash_eq", ServerSideOnly=true)]
		public static bool? cash_eq(decimal? par885, decimal? par886)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_ge

		[Sql.Function(Name="pg_catalog.cash_ge", ServerSideOnly=true)]
		public static bool? cash_ge(decimal? par888, decimal? par889)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_gt

		[Sql.Function(Name="pg_catalog.cash_gt", ServerSideOnly=true)]
		public static bool? cash_gt(decimal? par891, decimal? par892)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_in

		[Sql.Function(Name="pg_catalog.cash_in", ServerSideOnly=true)]
		public static decimal? cash_in(object par894)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cashlarger

		[Sql.Function(Name="pg_catalog.cashlarger", ServerSideOnly=true)]
		public static decimal? cashlarger(decimal? par896, decimal? par897)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_le

		[Sql.Function(Name="pg_catalog.cash_le", ServerSideOnly=true)]
		public static bool? cash_le(decimal? par899, decimal? par900)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_lt

		[Sql.Function(Name="pg_catalog.cash_lt", ServerSideOnly=true)]
		public static bool? cash_lt(decimal? par902, decimal? par903)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_mi

		[Sql.Function(Name="pg_catalog.cash_mi", ServerSideOnly=true)]
		public static decimal? cash_mi(decimal? par905, decimal? par906)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_mul_flt4

		[Sql.Function(Name="pg_catalog.cash_mul_flt4", ServerSideOnly=true)]
		public static decimal? cash_mul_flt4(decimal? par908, float? par909)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_mul_flt8

		[Sql.Function(Name="pg_catalog.cash_mul_flt8", ServerSideOnly=true)]
		public static decimal? cash_mul_flt8(decimal? par911, double? par912)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_mul_int2

		[Sql.Function(Name="pg_catalog.cash_mul_int2", ServerSideOnly=true)]
		public static decimal? cash_mul_int2(decimal? par914, short? par915)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_mul_int4

		[Sql.Function(Name="pg_catalog.cash_mul_int4", ServerSideOnly=true)]
		public static decimal? cash_mul_int4(decimal? par917, int? par918)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_mul_int8

		[Sql.Function(Name="pg_catalog.cash_mul_int8", ServerSideOnly=true)]
		public static decimal? cash_mul_int8(decimal? par920, long? par921)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_ne

		[Sql.Function(Name="pg_catalog.cash_ne", ServerSideOnly=true)]
		public static bool? cash_ne(decimal? par923, decimal? par924)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_out

		[Sql.Function(Name="pg_catalog.cash_out", ServerSideOnly=true)]
		public static object cash_out(decimal? par926)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_pl

		[Sql.Function(Name="pg_catalog.cash_pl", ServerSideOnly=true)]
		public static decimal? cash_pl(decimal? par928, decimal? par929)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_recv

		[Sql.Function(Name="pg_catalog.cash_recv", ServerSideOnly=true)]
		public static decimal? cash_recv(object par931)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_send

		[Sql.Function(Name="pg_catalog.cash_send", ServerSideOnly=true)]
		public static byte[] cash_send(decimal? par933)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cashsmaller

		[Sql.Function(Name="pg_catalog.cashsmaller", ServerSideOnly=true)]
		public static decimal? cashsmaller(decimal? par935, decimal? par936)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cash_words

		[Sql.Function(Name="pg_catalog.cash_words", ServerSideOnly=true)]
		public static string cash_words(decimal? par938)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cbrt

		[Sql.Function(Name="pg_catalog.cbrt", ServerSideOnly=true)]
		public static double? cbrt(double? par940)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ceil

		[Sql.Function(Name="pg_catalog.ceil", ServerSideOnly=true)]
		public static double? ceil(double? par944)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ceiling

		[Sql.Function(Name="pg_catalog.ceiling", ServerSideOnly=true)]
		public static double? ceiling(double? par948)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region center

		[Sql.Function(Name="pg_catalog.center", ServerSideOnly=true)]
		public static NpgsqlPoint? center(NpgsqlCircle? par952)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region @char

		[Sql.Function(Name="pg_catalog.char", ServerSideOnly=true)]
		public static object @char(string par956)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region character_length

		[Sql.Function(Name="pg_catalog.character_length", ServerSideOnly=true)]
		public static int? character_length(string par960)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region chareq

		[Sql.Function(Name="pg_catalog.chareq", ServerSideOnly=true)]
		public static bool? chareq(object par962, object par963)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charge

		[Sql.Function(Name="pg_catalog.charge", ServerSideOnly=true)]
		public static bool? charge(object par965, object par966)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region chargt

		[Sql.Function(Name="pg_catalog.chargt", ServerSideOnly=true)]
		public static bool? chargt(object par968, object par969)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charin

		[Sql.Function(Name="pg_catalog.charin", ServerSideOnly=true)]
		public static object charin(object par971)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charle

		[Sql.Function(Name="pg_catalog.charle", ServerSideOnly=true)]
		public static bool? charle(object par973, object par974)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region char_length

		[Sql.Function(Name="pg_catalog.char_length", ServerSideOnly=true)]
		public static int? char_length(string par978)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charlt

		[Sql.Function(Name="pg_catalog.charlt", ServerSideOnly=true)]
		public static bool? charlt(object par980, object par981)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charne

		[Sql.Function(Name="pg_catalog.charne", ServerSideOnly=true)]
		public static bool? charne(object par983, object par984)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charout

		[Sql.Function(Name="pg_catalog.charout", ServerSideOnly=true)]
		public static object charout(object par986)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charrecv

		[Sql.Function(Name="pg_catalog.charrecv", ServerSideOnly=true)]
		public static object charrecv(object par988)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region charsend

		[Sql.Function(Name="pg_catalog.charsend", ServerSideOnly=true)]
		public static byte[] charsend(object par990)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region chr

		[Sql.Function(Name="pg_catalog.chr", ServerSideOnly=true)]
		public static string chr(int? par992)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cideq

		[Sql.Function(Name="pg_catalog.cideq", ServerSideOnly=true)]
		public static bool? cideq(object par994, object par995)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidin

		[Sql.Function(Name="pg_catalog.cidin", ServerSideOnly=true)]
		public static object cidin(object par997)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidout

		[Sql.Function(Name="pg_catalog.cidout", ServerSideOnly=true)]
		public static object cidout(object par999)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidr

		[Sql.Function(Name="pg_catalog.cidr", ServerSideOnly=true)]
		public static NpgsqlInet? cidr(NpgsqlInet? par1001)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidrecv

		[Sql.Function(Name="pg_catalog.cidrecv", ServerSideOnly=true)]
		public static object cidrecv(object par1003)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidr_in

		[Sql.Function(Name="pg_catalog.cidr_in", ServerSideOnly=true)]
		public static NpgsqlInet? cidr_in(object par1005)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidr_out

		[Sql.Function(Name="pg_catalog.cidr_out", ServerSideOnly=true)]
		public static object cidr_out(NpgsqlInet? par1007)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidr_recv

		[Sql.Function(Name="pg_catalog.cidr_recv", ServerSideOnly=true)]
		public static NpgsqlInet? cidr_recv(object par1009)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidr_send

		[Sql.Function(Name="pg_catalog.cidr_send", ServerSideOnly=true)]
		public static byte[] cidr_send(NpgsqlInet? par1011)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cidsend

		[Sql.Function(Name="pg_catalog.cidsend", ServerSideOnly=true)]
		public static byte[] cidsend(object par1013)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle

		[Sql.Function(Name="pg_catalog.circle", ServerSideOnly=true)]
		public static NpgsqlCircle? circle(NpgsqlBox? par1020)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_above

		[Sql.Function(Name="pg_catalog.circle_above", ServerSideOnly=true)]
		public static bool? circle_above(NpgsqlCircle? par1022, NpgsqlCircle? par1023)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_add_pt

		[Sql.Function(Name="pg_catalog.circle_add_pt", ServerSideOnly=true)]
		public static NpgsqlCircle? circle_add_pt(NpgsqlCircle? par1025, NpgsqlPoint? par1026)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_below

		[Sql.Function(Name="pg_catalog.circle_below", ServerSideOnly=true)]
		public static bool? circle_below(NpgsqlCircle? par1028, NpgsqlCircle? par1029)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_center

		[Sql.Function(Name="pg_catalog.circle_center", ServerSideOnly=true)]
		public static NpgsqlPoint? circle_center(NpgsqlCircle? par1031)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_contain

		[Sql.Function(Name="pg_catalog.circle_contain", ServerSideOnly=true)]
		public static bool? circle_contain(NpgsqlCircle? par1033, NpgsqlCircle? par1034)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_contained

		[Sql.Function(Name="pg_catalog.circle_contained", ServerSideOnly=true)]
		public static bool? circle_contained(NpgsqlCircle? par1036, NpgsqlCircle? par1037)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_contain_pt

		[Sql.Function(Name="pg_catalog.circle_contain_pt", ServerSideOnly=true)]
		public static bool? circle_contain_pt(NpgsqlCircle? par1039, NpgsqlPoint? par1040)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_distance

		[Sql.Function(Name="pg_catalog.circle_distance", ServerSideOnly=true)]
		public static double? circle_distance(NpgsqlCircle? par1042, NpgsqlCircle? par1043)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_div_pt

		[Sql.Function(Name="pg_catalog.circle_div_pt", ServerSideOnly=true)]
		public static NpgsqlCircle? circle_div_pt(NpgsqlCircle? par1045, NpgsqlPoint? par1046)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_eq

		[Sql.Function(Name="pg_catalog.circle_eq", ServerSideOnly=true)]
		public static bool? circle_eq(NpgsqlCircle? par1048, NpgsqlCircle? par1049)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_ge

		[Sql.Function(Name="pg_catalog.circle_ge", ServerSideOnly=true)]
		public static bool? circle_ge(NpgsqlCircle? par1051, NpgsqlCircle? par1052)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_gt

		[Sql.Function(Name="pg_catalog.circle_gt", ServerSideOnly=true)]
		public static bool? circle_gt(NpgsqlCircle? par1054, NpgsqlCircle? par1055)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_in

		[Sql.Function(Name="pg_catalog.circle_in", ServerSideOnly=true)]
		public static NpgsqlCircle? circle_in(object par1057)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_le

		[Sql.Function(Name="pg_catalog.circle_le", ServerSideOnly=true)]
		public static bool? circle_le(NpgsqlCircle? par1059, NpgsqlCircle? par1060)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_left

		[Sql.Function(Name="pg_catalog.circle_left", ServerSideOnly=true)]
		public static bool? circle_left(NpgsqlCircle? par1062, NpgsqlCircle? par1063)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_lt

		[Sql.Function(Name="pg_catalog.circle_lt", ServerSideOnly=true)]
		public static bool? circle_lt(NpgsqlCircle? par1065, NpgsqlCircle? par1066)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_mul_pt

		[Sql.Function(Name="pg_catalog.circle_mul_pt", ServerSideOnly=true)]
		public static NpgsqlCircle? circle_mul_pt(NpgsqlCircle? par1068, NpgsqlPoint? par1069)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_ne

		[Sql.Function(Name="pg_catalog.circle_ne", ServerSideOnly=true)]
		public static bool? circle_ne(NpgsqlCircle? par1071, NpgsqlCircle? par1072)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_out

		[Sql.Function(Name="pg_catalog.circle_out", ServerSideOnly=true)]
		public static object circle_out(NpgsqlCircle? par1074)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_overabove

		[Sql.Function(Name="pg_catalog.circle_overabove", ServerSideOnly=true)]
		public static bool? circle_overabove(NpgsqlCircle? par1076, NpgsqlCircle? par1077)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_overbelow

		[Sql.Function(Name="pg_catalog.circle_overbelow", ServerSideOnly=true)]
		public static bool? circle_overbelow(NpgsqlCircle? par1079, NpgsqlCircle? par1080)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_overlap

		[Sql.Function(Name="pg_catalog.circle_overlap", ServerSideOnly=true)]
		public static bool? circle_overlap(NpgsqlCircle? par1082, NpgsqlCircle? par1083)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_overleft

		[Sql.Function(Name="pg_catalog.circle_overleft", ServerSideOnly=true)]
		public static bool? circle_overleft(NpgsqlCircle? par1085, NpgsqlCircle? par1086)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_overright

		[Sql.Function(Name="pg_catalog.circle_overright", ServerSideOnly=true)]
		public static bool? circle_overright(NpgsqlCircle? par1088, NpgsqlCircle? par1089)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_recv

		[Sql.Function(Name="pg_catalog.circle_recv", ServerSideOnly=true)]
		public static NpgsqlCircle? circle_recv(object par1091)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_right

		[Sql.Function(Name="pg_catalog.circle_right", ServerSideOnly=true)]
		public static bool? circle_right(NpgsqlCircle? par1093, NpgsqlCircle? par1094)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_same

		[Sql.Function(Name="pg_catalog.circle_same", ServerSideOnly=true)]
		public static bool? circle_same(NpgsqlCircle? par1096, NpgsqlCircle? par1097)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_send

		[Sql.Function(Name="pg_catalog.circle_send", ServerSideOnly=true)]
		public static byte[] circle_send(NpgsqlCircle? par1099)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region circle_sub_pt

		[Sql.Function(Name="pg_catalog.circle_sub_pt", ServerSideOnly=true)]
		public static NpgsqlCircle? circle_sub_pt(NpgsqlCircle? par1101, NpgsqlPoint? par1102)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region clock_timestamp

		[Sql.Function(Name="pg_catalog.clock_timestamp", ServerSideOnly=true)]
		public static DateTimeOffset? clock_timestamp()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_lb

		[Sql.Function(Name="pg_catalog.close_lb", ServerSideOnly=true)]
		public static NpgsqlPoint? close_lb(NpgsqlLine? par1105, NpgsqlBox? par1106)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_ls

		[Sql.Function(Name="pg_catalog.close_ls", ServerSideOnly=true)]
		public static NpgsqlPoint? close_ls(NpgsqlLine? par1108, NpgsqlLSeg? par1109)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_lseg

		[Sql.Function(Name="pg_catalog.close_lseg", ServerSideOnly=true)]
		public static NpgsqlPoint? close_lseg(NpgsqlLSeg? par1111, NpgsqlLSeg? par1112)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_pb

		[Sql.Function(Name="pg_catalog.close_pb", ServerSideOnly=true)]
		public static NpgsqlPoint? close_pb(NpgsqlPoint? par1114, NpgsqlBox? par1115)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_pl

		[Sql.Function(Name="pg_catalog.close_pl", ServerSideOnly=true)]
		public static NpgsqlPoint? close_pl(NpgsqlPoint? par1117, NpgsqlLine? par1118)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_ps

		[Sql.Function(Name="pg_catalog.close_ps", ServerSideOnly=true)]
		public static NpgsqlPoint? close_ps(NpgsqlPoint? par1120, NpgsqlLSeg? par1121)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_sb

		[Sql.Function(Name="pg_catalog.close_sb", ServerSideOnly=true)]
		public static NpgsqlPoint? close_sb(NpgsqlLSeg? par1123, NpgsqlBox? par1124)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region close_sl

		[Sql.Function(Name="pg_catalog.close_sl", ServerSideOnly=true)]
		public static NpgsqlPoint? close_sl(NpgsqlLSeg? par1126, NpgsqlLine? par1127)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region col_description

		[Sql.Function(Name="pg_catalog.col_description", ServerSideOnly=true)]
		public static string col_description(int? par1129, int? par1130)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region concat

		[Sql.Function(Name="pg_catalog.concat", ServerSideOnly=true)]
		public static string concat(object par1132)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region concat_ws

		[Sql.Function(Name="pg_catalog.concat_ws", ServerSideOnly=true)]
		public static string concat_ws(string par1134, object par1135)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region contjoinsel

		[Sql.Function(Name="pg_catalog.contjoinsel", ServerSideOnly=true)]
		public static double? contjoinsel(object par1137, int? par1138, object par1139, short? par1140, object par1141)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region contsel

		[Sql.Function(Name="pg_catalog.contsel", ServerSideOnly=true)]
		public static double? contsel(object par1143, int? par1144, object par1145, int? par1146)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region convert

		[Sql.Function(Name="pg_catalog.convert", ServerSideOnly=true)]
		public static byte[] convert(byte[] par1148, string par1149, string par1150)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region convert_from

		[Sql.Function(Name="pg_catalog.convert_from", ServerSideOnly=true)]
		public static string convert_from(byte[] par1152, string par1153)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region convert_to

		[Sql.Function(Name="pg_catalog.convert_to", ServerSideOnly=true)]
		public static byte[] convert_to(string par1155, string par1156)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region corr

		[Sql.Function(Name="pg_catalog.corr", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? corr<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par1158, Expression<Func<TSource, double?>> par1159)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cos

		[Sql.Function(Name="pg_catalog.cos", ServerSideOnly=true)]
		public static double? cos(double? par1161)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cosd

		[Sql.Function(Name="pg_catalog.cosd", ServerSideOnly=true)]
		public static double? cosd(double? par1163)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cot

		[Sql.Function(Name="pg_catalog.cot", ServerSideOnly=true)]
		public static double? cot(double? par1165)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cotd

		[Sql.Function(Name="pg_catalog.cotd", ServerSideOnly=true)]
		public static double? cotd(double? par1167)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region count

		[Sql.Function(Name="pg_catalog.count", ServerSideOnly=true, IsAggregate = true)]
		public static long? count<TSource>(this IEnumerable<TSource> src)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region covar_pop

		[Sql.Function(Name="pg_catalog.covar_pop", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? covar_pop<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par1172, Expression<Func<TSource, double?>> par1173)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region covar_samp

		[Sql.Function(Name="pg_catalog.covar_samp", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? covar_samp<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par1175, Expression<Func<TSource, double?>> par1176)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cstring_in

		[Sql.Function(Name="pg_catalog.cstring_in", ServerSideOnly=true)]
		public static object cstring_in(object par1178)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cstring_out

		[Sql.Function(Name="pg_catalog.cstring_out", ServerSideOnly=true)]
		public static object cstring_out(object par1180)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cstring_recv

		[Sql.Function(Name="pg_catalog.cstring_recv", ServerSideOnly=true)]
		public static object cstring_recv(object par1182)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cstring_send

		[Sql.Function(Name="pg_catalog.cstring_send", ServerSideOnly=true)]
		public static byte[] cstring_send(object par1184)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cume_dist

		[Sql.Function(Name="pg_catalog.cume_dist", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static double? cume_dist<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par1187)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cume_dist_final

		[Sql.Function(Name="pg_catalog.cume_dist_final", ServerSideOnly=true)]
		public static double? cume_dist_final(object par1189, object par1190)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region current_database

		[Sql.Function(Name="pg_catalog.current_database", ServerSideOnly=true)]
		public static string current_database()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region current_query

		[Sql.Function(Name="pg_catalog.current_query", ServerSideOnly=true)]
		public static string current_query()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region current_schema

		[Sql.Function(Name="pg_catalog.current_schema", ServerSideOnly=true)]
		public static string current_schema()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region current_schemas

		[Sql.Function(Name="pg_catalog.current_schemas", ServerSideOnly=true)]
		public static object current_schemas(bool? par1195)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region current_setting

		[Sql.Function(Name="pg_catalog.current_setting", ServerSideOnly=true)]
		public static string current_setting(string par1199, bool? par1200)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region current_user

		[Sql.Function(Name="pg_catalog.current_user", ServerSideOnly=true)]
		public static string current_user()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region currtid

		[Sql.Function(Name="pg_catalog.currtid", ServerSideOnly=true)]
		public static object currtid(int? par1203, object par1204)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region currtid2

		[Sql.Function(Name="pg_catalog.currtid2", ServerSideOnly=true)]
		public static object currtid2(string par1206, object par1207)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region currval

		[Sql.Function(Name="pg_catalog.currval", ServerSideOnly=true)]
		public static long? currval(object par1209)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cursor_to_xml

		[Sql.Function(Name="pg_catalog.cursor_to_xml", ServerSideOnly=true)]
		public static string cursor_to_xml(object cursor, int? count, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region cursor_to_xmlschema

		[Sql.Function(Name="pg_catalog.cursor_to_xmlschema", ServerSideOnly=true)]
		public static string cursor_to_xmlschema(object cursor, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region database_to_xml

		[Sql.Function(Name="pg_catalog.database_to_xml", ServerSideOnly=true)]
		public static string database_to_xml(bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region database_to_xml_and_xmlschema

		[Sql.Function(Name="pg_catalog.database_to_xml_and_xmlschema", ServerSideOnly=true)]
		public static string database_to_xml_and_xmlschema(bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region database_to_xmlschema

		[Sql.Function(Name="pg_catalog.database_to_xmlschema", ServerSideOnly=true)]
		public static string database_to_xmlschema(bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date

		[Sql.Function(Name="pg_catalog.date", ServerSideOnly=true)]
		public static NpgsqlDate? date(DateTime? par1220)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_cmp

		[Sql.Function(Name="pg_catalog.date_cmp", ServerSideOnly=true)]
		public static int? date_cmp(NpgsqlDate? par1222, NpgsqlDate? par1223)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_cmp_timestamp

		[Sql.Function(Name="pg_catalog.date_cmp_timestamp", ServerSideOnly=true)]
		public static int? date_cmp_timestamp(NpgsqlDate? par1225, DateTime? par1226)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_cmp_timestamptz

		[Sql.Function(Name="pg_catalog.date_cmp_timestamptz", ServerSideOnly=true)]
		public static int? date_cmp_timestamptz(NpgsqlDate? par1228, DateTimeOffset? par1229)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_eq

		[Sql.Function(Name="pg_catalog.date_eq", ServerSideOnly=true)]
		public static bool? date_eq(NpgsqlDate? par1231, NpgsqlDate? par1232)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_eq_timestamp

		[Sql.Function(Name="pg_catalog.date_eq_timestamp", ServerSideOnly=true)]
		public static bool? date_eq_timestamp(NpgsqlDate? par1234, DateTime? par1235)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_eq_timestamptz

		[Sql.Function(Name="pg_catalog.date_eq_timestamptz", ServerSideOnly=true)]
		public static bool? date_eq_timestamptz(NpgsqlDate? par1237, DateTimeOffset? par1238)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_ge

		[Sql.Function(Name="pg_catalog.date_ge", ServerSideOnly=true)]
		public static bool? date_ge(NpgsqlDate? par1240, NpgsqlDate? par1241)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_ge_timestamp

		[Sql.Function(Name="pg_catalog.date_ge_timestamp", ServerSideOnly=true)]
		public static bool? date_ge_timestamp(NpgsqlDate? par1243, DateTime? par1244)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_ge_timestamptz

		[Sql.Function(Name="pg_catalog.date_ge_timestamptz", ServerSideOnly=true)]
		public static bool? date_ge_timestamptz(NpgsqlDate? par1246, DateTimeOffset? par1247)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_gt

		[Sql.Function(Name="pg_catalog.date_gt", ServerSideOnly=true)]
		public static bool? date_gt(NpgsqlDate? par1249, NpgsqlDate? par1250)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_gt_timestamp

		[Sql.Function(Name="pg_catalog.date_gt_timestamp", ServerSideOnly=true)]
		public static bool? date_gt_timestamp(NpgsqlDate? par1252, DateTime? par1253)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_gt_timestamptz

		[Sql.Function(Name="pg_catalog.date_gt_timestamptz", ServerSideOnly=true)]
		public static bool? date_gt_timestamptz(NpgsqlDate? par1255, DateTimeOffset? par1256)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_in

		[Sql.Function(Name="pg_catalog.date_in", ServerSideOnly=true)]
		public static NpgsqlDate? date_in(object par1258)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_larger

		[Sql.Function(Name="pg_catalog.date_larger", ServerSideOnly=true)]
		public static NpgsqlDate? date_larger(NpgsqlDate? par1260, NpgsqlDate? par1261)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_le

		[Sql.Function(Name="pg_catalog.date_le", ServerSideOnly=true)]
		public static bool? date_le(NpgsqlDate? par1263, NpgsqlDate? par1264)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_le_timestamp

		[Sql.Function(Name="pg_catalog.date_le_timestamp", ServerSideOnly=true)]
		public static bool? date_le_timestamp(NpgsqlDate? par1266, DateTime? par1267)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_le_timestamptz

		[Sql.Function(Name="pg_catalog.date_le_timestamptz", ServerSideOnly=true)]
		public static bool? date_le_timestamptz(NpgsqlDate? par1269, DateTimeOffset? par1270)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_lt

		[Sql.Function(Name="pg_catalog.date_lt", ServerSideOnly=true)]
		public static bool? date_lt(NpgsqlDate? par1272, NpgsqlDate? par1273)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_lt_timestamp

		[Sql.Function(Name="pg_catalog.date_lt_timestamp", ServerSideOnly=true)]
		public static bool? date_lt_timestamp(NpgsqlDate? par1275, DateTime? par1276)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_lt_timestamptz

		[Sql.Function(Name="pg_catalog.date_lt_timestamptz", ServerSideOnly=true)]
		public static bool? date_lt_timestamptz(NpgsqlDate? par1278, DateTimeOffset? par1279)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_mi

		[Sql.Function(Name="pg_catalog.date_mi", ServerSideOnly=true)]
		public static int? date_mi(NpgsqlDate? par1281, NpgsqlDate? par1282)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_mii

		[Sql.Function(Name="pg_catalog.date_mii", ServerSideOnly=true)]
		public static NpgsqlDate? date_mii(NpgsqlDate? par1284, int? par1285)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_mi_interval

		[Sql.Function(Name="pg_catalog.date_mi_interval", ServerSideOnly=true)]
		public static DateTime? date_mi_interval(NpgsqlDate? par1287, NpgsqlTimeSpan? par1288)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_ne

		[Sql.Function(Name="pg_catalog.date_ne", ServerSideOnly=true)]
		public static bool? date_ne(NpgsqlDate? par1290, NpgsqlDate? par1291)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_ne_timestamp

		[Sql.Function(Name="pg_catalog.date_ne_timestamp", ServerSideOnly=true)]
		public static bool? date_ne_timestamp(NpgsqlDate? par1293, DateTime? par1294)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_ne_timestamptz

		[Sql.Function(Name="pg_catalog.date_ne_timestamptz", ServerSideOnly=true)]
		public static bool? date_ne_timestamptz(NpgsqlDate? par1296, DateTimeOffset? par1297)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_out

		[Sql.Function(Name="pg_catalog.date_out", ServerSideOnly=true)]
		public static object date_out(NpgsqlDate? par1299)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_part

		[Sql.Function(Name="pg_catalog.date_part", ServerSideOnly=true)]
		public static double? date_part(string par1322, DateTime? par1323)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_pli

		[Sql.Function(Name="pg_catalog.date_pli", ServerSideOnly=true)]
		public static NpgsqlDate? date_pli(NpgsqlDate? par1325, int? par1326)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_pl_interval

		[Sql.Function(Name="pg_catalog.date_pl_interval", ServerSideOnly=true)]
		public static DateTime? date_pl_interval(NpgsqlDate? par1328, NpgsqlTimeSpan? par1329)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region daterange

		[Sql.Function(Name="pg_catalog.daterange", ServerSideOnly=true)]
		public static object daterange(NpgsqlDate? par1334, NpgsqlDate? par1335, string par1336)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region daterange_canonical

		[Sql.Function(Name="pg_catalog.daterange_canonical", ServerSideOnly=true)]
		public static object daterange_canonical(object par1338)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region daterange_subdiff

		[Sql.Function(Name="pg_catalog.daterange_subdiff", ServerSideOnly=true)]
		public static double? daterange_subdiff(NpgsqlDate? par1340, NpgsqlDate? par1341)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_recv

		[Sql.Function(Name="pg_catalog.date_recv", ServerSideOnly=true)]
		public static NpgsqlDate? date_recv(object par1343)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_send

		[Sql.Function(Name="pg_catalog.date_send", ServerSideOnly=true)]
		public static byte[] date_send(NpgsqlDate? par1345)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_smaller

		[Sql.Function(Name="pg_catalog.date_smaller", ServerSideOnly=true)]
		public static NpgsqlDate? date_smaller(NpgsqlDate? par1347, NpgsqlDate? par1348)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_sortsupport

		[Sql.Function(Name="pg_catalog.date_sortsupport", ServerSideOnly=true)]
		public static object date_sortsupport(object par1349)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region datetime_pl

		[Sql.Function(Name="pg_catalog.datetime_pl", ServerSideOnly=true)]
		public static DateTime? datetime_pl(NpgsqlDate? par1351, TimeSpan? par1352)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region datetimetz_pl

		[Sql.Function(Name="pg_catalog.datetimetz_pl", ServerSideOnly=true)]
		public static DateTimeOffset? datetimetz_pl(NpgsqlDate? par1354, DateTimeOffset? par1355)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region date_trunc

		[Sql.Function(Name="pg_catalog.date_trunc", ServerSideOnly=true)]
		public static DateTime? date_trunc(string par1363, DateTime? par1364)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dcbrt

		[Sql.Function(Name="pg_catalog.dcbrt", ServerSideOnly=true)]
		public static double? dcbrt(double? par1366)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region decode

		[Sql.Function(Name="pg_catalog.decode", ServerSideOnly=true)]
		public static byte[] decode(string par1368, string par1369)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region degrees

		[Sql.Function(Name="pg_catalog.degrees", ServerSideOnly=true)]
		public static double? degrees(double? par1371)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dense_rank

		[Sql.Function(Name="pg_catalog.dense_rank", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static long? dense_rank<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par1374)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dense_rank_final

		[Sql.Function(Name="pg_catalog.dense_rank_final", ServerSideOnly=true)]
		public static long? dense_rank_final(object par1376, object par1377)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dexp

		[Sql.Function(Name="pg_catalog.dexp", ServerSideOnly=true)]
		public static double? dexp(double? par1379)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region diagonal

		[Sql.Function(Name="pg_catalog.diagonal", ServerSideOnly=true)]
		public static NpgsqlLSeg? diagonal(NpgsqlBox? par1381)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region diameter

		[Sql.Function(Name="pg_catalog.diameter", ServerSideOnly=true)]
		public static double? diameter(NpgsqlCircle? par1383)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dispell_init

		[Sql.Function(Name="pg_catalog.dispell_init", ServerSideOnly=true)]
		public static object dispell_init(object par1385)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dispell_lexize

		[Sql.Function(Name="pg_catalog.dispell_lexize", ServerSideOnly=true)]
		public static object dispell_lexize(object par1387, object par1388, object par1389, object par1390)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_cpoint

		[Sql.Function(Name="pg_catalog.dist_cpoint", ServerSideOnly=true)]
		public static double? dist_cpoint(NpgsqlCircle? par1392, NpgsqlPoint? par1393)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_cpoly

		[Sql.Function(Name="pg_catalog.dist_cpoly", ServerSideOnly=true)]
		public static double? dist_cpoly(NpgsqlCircle? par1395, NpgsqlPolygon? par1396)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_lb

		[Sql.Function(Name="pg_catalog.dist_lb", ServerSideOnly=true)]
		public static double? dist_lb(NpgsqlLine? par1398, NpgsqlBox? par1399)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_pb

		[Sql.Function(Name="pg_catalog.dist_pb", ServerSideOnly=true)]
		public static double? dist_pb(NpgsqlPoint? par1401, NpgsqlBox? par1402)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_pc

		[Sql.Function(Name="pg_catalog.dist_pc", ServerSideOnly=true)]
		public static double? dist_pc(NpgsqlPoint? par1404, NpgsqlCircle? par1405)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_pl

		[Sql.Function(Name="pg_catalog.dist_pl", ServerSideOnly=true)]
		public static double? dist_pl(NpgsqlPoint? par1407, NpgsqlLine? par1408)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_polyp

		[Sql.Function(Name="pg_catalog.dist_polyp", ServerSideOnly=true)]
		public static double? dist_polyp(NpgsqlPolygon? par1410, NpgsqlPoint? par1411)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_ppath

		[Sql.Function(Name="pg_catalog.dist_ppath", ServerSideOnly=true)]
		public static double? dist_ppath(NpgsqlPoint? par1413, NpgsqlPath? par1414)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_ppoly

		[Sql.Function(Name="pg_catalog.dist_ppoly", ServerSideOnly=true)]
		public static double? dist_ppoly(NpgsqlPoint? par1416, NpgsqlPolygon? par1417)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_ps

		[Sql.Function(Name="pg_catalog.dist_ps", ServerSideOnly=true)]
		public static double? dist_ps(NpgsqlPoint? par1419, NpgsqlLSeg? par1420)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_sb

		[Sql.Function(Name="pg_catalog.dist_sb", ServerSideOnly=true)]
		public static double? dist_sb(NpgsqlLSeg? par1422, NpgsqlBox? par1423)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dist_sl

		[Sql.Function(Name="pg_catalog.dist_sl", ServerSideOnly=true)]
		public static double? dist_sl(NpgsqlLSeg? par1425, NpgsqlLine? par1426)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region div

		[Sql.Function(Name="pg_catalog.div", ServerSideOnly=true)]
		public static decimal? div(decimal? par1428, decimal? par1429)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dlog10

		[Sql.Function(Name="pg_catalog.dlog10", ServerSideOnly=true)]
		public static double? dlog10(double? par1431)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dlog1

		[Sql.Function(Name="pg_catalog.dlog1", ServerSideOnly=true)]
		public static double? dlog1(double? par1433)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region domain_in

		[Sql.Function(Name="pg_catalog.domain_in", ServerSideOnly=true)]
		public static object domain_in(object par1435, int? par1436, int? par1437)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region domain_recv

		[Sql.Function(Name="pg_catalog.domain_recv", ServerSideOnly=true)]
		public static object domain_recv(object par1439, int? par1440, int? par1441)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dpow

		[Sql.Function(Name="pg_catalog.dpow", ServerSideOnly=true)]
		public static double? dpow(double? par1443, double? par1444)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dround

		[Sql.Function(Name="pg_catalog.dround", ServerSideOnly=true)]
		public static double? dround(double? par1446)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dsimple_init

		[Sql.Function(Name="pg_catalog.dsimple_init", ServerSideOnly=true)]
		public static object dsimple_init(object par1448)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dsimple_lexize

		[Sql.Function(Name="pg_catalog.dsimple_lexize", ServerSideOnly=true)]
		public static object dsimple_lexize(object par1450, object par1451, object par1452, object par1453)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dsnowball_init

		[Sql.Function(Name="pg_catalog.dsnowball_init", ServerSideOnly=true)]
		public static object dsnowball_init(object par1455)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dsnowball_lexize

		[Sql.Function(Name="pg_catalog.dsnowball_lexize", ServerSideOnly=true)]
		public static object dsnowball_lexize(object par1457, object par1458, object par1459, object par1460)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dsqrt

		[Sql.Function(Name="pg_catalog.dsqrt", ServerSideOnly=true)]
		public static double? dsqrt(double? par1462)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dsynonym_init

		[Sql.Function(Name="pg_catalog.dsynonym_init", ServerSideOnly=true)]
		public static object dsynonym_init(object par1464)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dsynonym_lexize

		[Sql.Function(Name="pg_catalog.dsynonym_lexize", ServerSideOnly=true)]
		public static object dsynonym_lexize(object par1466, object par1467, object par1468, object par1469)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region dtrunc

		[Sql.Function(Name="pg_catalog.dtrunc", ServerSideOnly=true)]
		public static double? dtrunc(double? par1471)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region elem_contained_by_range

		[Sql.Function(Name="pg_catalog.elem_contained_by_range", ServerSideOnly=true)]
		public static bool? elem_contained_by_range(object par1473, object par1474)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region encode

		[Sql.Function(Name="pg_catalog.encode", ServerSideOnly=true)]
		public static string encode(byte[] par1476, string par1477)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_cmp

		[Sql.Function(Name="pg_catalog.enum_cmp", ServerSideOnly=true)]
		public static int? enum_cmp(object par1479, object par1480)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_eq

		[Sql.Function(Name="pg_catalog.enum_eq", ServerSideOnly=true)]
		public static bool? enum_eq(object par1482, object par1483)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_first

		[Sql.Function(Name="pg_catalog.enum_first", ServerSideOnly=true)]
		public static object enum_first(object par1485)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_ge

		[Sql.Function(Name="pg_catalog.enum_ge", ServerSideOnly=true)]
		public static bool? enum_ge(object par1487, object par1488)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_gt

		[Sql.Function(Name="pg_catalog.enum_gt", ServerSideOnly=true)]
		public static bool? enum_gt(object par1490, object par1491)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_in

		[Sql.Function(Name="pg_catalog.enum_in", ServerSideOnly=true)]
		public static object enum_in(object par1493, int? par1494)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_larger

		[Sql.Function(Name="pg_catalog.enum_larger", ServerSideOnly=true)]
		public static object enum_larger(object par1496, object par1497)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_last

		[Sql.Function(Name="pg_catalog.enum_last", ServerSideOnly=true)]
		public static object enum_last(object par1499)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_le

		[Sql.Function(Name="pg_catalog.enum_le", ServerSideOnly=true)]
		public static bool? enum_le(object par1501, object par1502)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_lt

		[Sql.Function(Name="pg_catalog.enum_lt", ServerSideOnly=true)]
		public static bool? enum_lt(object par1504, object par1505)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_ne

		[Sql.Function(Name="pg_catalog.enum_ne", ServerSideOnly=true)]
		public static bool? enum_ne(object par1507, object par1508)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_out

		[Sql.Function(Name="pg_catalog.enum_out", ServerSideOnly=true)]
		public static object enum_out(object par1510)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_range

		[Sql.Function(Name="pg_catalog.enum_range", ServerSideOnly=true)]
		public static object enum_range(object par1515)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_recv

		[Sql.Function(Name="pg_catalog.enum_recv", ServerSideOnly=true)]
		public static object enum_recv(object par1517, int? par1518)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_send

		[Sql.Function(Name="pg_catalog.enum_send", ServerSideOnly=true)]
		public static byte[] enum_send(object par1520)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region enum_smaller

		[Sql.Function(Name="pg_catalog.enum_smaller", ServerSideOnly=true)]
		public static object enum_smaller(object par1522, object par1523)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region eqjoinsel

		[Sql.Function(Name="pg_catalog.eqjoinsel", ServerSideOnly=true)]
		public static double? eqjoinsel(object par1525, int? par1526, object par1527, short? par1528, object par1529)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region eqsel

		[Sql.Function(Name="pg_catalog.eqsel", ServerSideOnly=true)]
		public static double? eqsel(object par1531, int? par1532, object par1533, int? par1534)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_cn_to_mic

		[Sql.Function(Name="pg_catalog.euc_cn_to_mic", ServerSideOnly=true)]
		public static object euc_cn_to_mic(int? par1535, int? par1536, object par1537, object par1538, int? par1539)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_cn_to_utf8

		[Sql.Function(Name="pg_catalog.euc_cn_to_utf8", ServerSideOnly=true)]
		public static object euc_cn_to_utf8(int? par1540, int? par1541, object par1542, object par1543, int? par1544)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_jis_2004_to_shift_jis_2004

		[Sql.Function(Name="pg_catalog.euc_jis_2004_to_shift_jis_2004", ServerSideOnly=true)]
		public static object euc_jis_2004_to_shift_jis_2004(int? par1545, int? par1546, object par1547, object par1548, int? par1549)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_jis_2004_to_utf8

		[Sql.Function(Name="pg_catalog.euc_jis_2004_to_utf8", ServerSideOnly=true)]
		public static object euc_jis_2004_to_utf8(int? par1550, int? par1551, object par1552, object par1553, int? par1554)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_jp_to_mic

		[Sql.Function(Name="pg_catalog.euc_jp_to_mic", ServerSideOnly=true)]
		public static object euc_jp_to_mic(int? par1555, int? par1556, object par1557, object par1558, int? par1559)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_jp_to_sjis

		[Sql.Function(Name="pg_catalog.euc_jp_to_sjis", ServerSideOnly=true)]
		public static object euc_jp_to_sjis(int? par1560, int? par1561, object par1562, object par1563, int? par1564)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_jp_to_utf8

		[Sql.Function(Name="pg_catalog.euc_jp_to_utf8", ServerSideOnly=true)]
		public static object euc_jp_to_utf8(int? par1565, int? par1566, object par1567, object par1568, int? par1569)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_kr_to_mic

		[Sql.Function(Name="pg_catalog.euc_kr_to_mic", ServerSideOnly=true)]
		public static object euc_kr_to_mic(int? par1570, int? par1571, object par1572, object par1573, int? par1574)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_kr_to_utf8

		[Sql.Function(Name="pg_catalog.euc_kr_to_utf8", ServerSideOnly=true)]
		public static object euc_kr_to_utf8(int? par1575, int? par1576, object par1577, object par1578, int? par1579)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_tw_to_big5

		[Sql.Function(Name="pg_catalog.euc_tw_to_big5", ServerSideOnly=true)]
		public static object euc_tw_to_big5(int? par1580, int? par1581, object par1582, object par1583, int? par1584)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_tw_to_mic

		[Sql.Function(Name="pg_catalog.euc_tw_to_mic", ServerSideOnly=true)]
		public static object euc_tw_to_mic(int? par1585, int? par1586, object par1587, object par1588, int? par1589)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region euc_tw_to_utf8

		[Sql.Function(Name="pg_catalog.euc_tw_to_utf8", ServerSideOnly=true)]
		public static object euc_tw_to_utf8(int? par1590, int? par1591, object par1592, object par1593, int? par1594)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region event_trigger_in

		[Sql.Function(Name="pg_catalog.event_trigger_in", ServerSideOnly=true)]
		public static object event_trigger_in(object par1596)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region event_trigger_out

		[Sql.Function(Name="pg_catalog.event_trigger_out", ServerSideOnly=true)]
		public static object event_trigger_out(object par1598)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region every

		[Sql.Function(Name="pg_catalog.every", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static bool? every<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, bool?>> par1600)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region exp

		[Sql.Function(Name="pg_catalog.exp", ServerSideOnly=true)]
		public static decimal? exp(decimal? par1604)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region factorial

		[Sql.Function(Name="pg_catalog.factorial", ServerSideOnly=true)]
		public static decimal? factorial(long? par1606)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region family

		[Sql.Function(Name="pg_catalog.family", ServerSideOnly=true)]
		public static int? family(NpgsqlInet? par1608)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region fdw_handler_in

		[Sql.Function(Name="pg_catalog.fdw_handler_in", ServerSideOnly=true)]
		public static object fdw_handler_in(object par1610)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region fdw_handler_out

		[Sql.Function(Name="pg_catalog.fdw_handler_out", ServerSideOnly=true)]
		public static object fdw_handler_out(object par1612)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region first_value

		[Sql.Function(Name="pg_catalog.first_value", ServerSideOnly=true)]
		public static object first_value(object par1614)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4

		[Sql.Function(Name="pg_catalog.float4", ServerSideOnly=true)]
		public static float? float4(long? par1626)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48div

		[Sql.Function(Name="pg_catalog.float48div", ServerSideOnly=true)]
		public static double? float48div(float? par1628, double? par1629)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48eq

		[Sql.Function(Name="pg_catalog.float48eq", ServerSideOnly=true)]
		public static bool? float48eq(float? par1631, double? par1632)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48ge

		[Sql.Function(Name="pg_catalog.float48ge", ServerSideOnly=true)]
		public static bool? float48ge(float? par1634, double? par1635)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48gt

		[Sql.Function(Name="pg_catalog.float48gt", ServerSideOnly=true)]
		public static bool? float48gt(float? par1637, double? par1638)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48le

		[Sql.Function(Name="pg_catalog.float48le", ServerSideOnly=true)]
		public static bool? float48le(float? par1640, double? par1641)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48lt

		[Sql.Function(Name="pg_catalog.float48lt", ServerSideOnly=true)]
		public static bool? float48lt(float? par1643, double? par1644)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48mi

		[Sql.Function(Name="pg_catalog.float48mi", ServerSideOnly=true)]
		public static double? float48mi(float? par1646, double? par1647)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48mul

		[Sql.Function(Name="pg_catalog.float48mul", ServerSideOnly=true)]
		public static double? float48mul(float? par1649, double? par1650)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48ne

		[Sql.Function(Name="pg_catalog.float48ne", ServerSideOnly=true)]
		public static bool? float48ne(float? par1652, double? par1653)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float48pl

		[Sql.Function(Name="pg_catalog.float48pl", ServerSideOnly=true)]
		public static double? float48pl(float? par1655, double? par1656)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4abs

		[Sql.Function(Name="pg_catalog.float4abs", ServerSideOnly=true)]
		public static float? float4abs(float? par1658)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4_accum

		[Sql.Function(Name="pg_catalog.float4_accum", ServerSideOnly=true)]
		public static object float4_accum(object par1660, float? par1661)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4div

		[Sql.Function(Name="pg_catalog.float4div", ServerSideOnly=true)]
		public static float? float4div(float? par1663, float? par1664)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4eq

		[Sql.Function(Name="pg_catalog.float4eq", ServerSideOnly=true)]
		public static bool? float4eq(float? par1666, float? par1667)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4ge

		[Sql.Function(Name="pg_catalog.float4ge", ServerSideOnly=true)]
		public static bool? float4ge(float? par1669, float? par1670)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4gt

		[Sql.Function(Name="pg_catalog.float4gt", ServerSideOnly=true)]
		public static bool? float4gt(float? par1672, float? par1673)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4in

		[Sql.Function(Name="pg_catalog.float4in", ServerSideOnly=true)]
		public static float? float4in(object par1675)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4larger

		[Sql.Function(Name="pg_catalog.float4larger", ServerSideOnly=true)]
		public static float? float4larger(float? par1677, float? par1678)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4le

		[Sql.Function(Name="pg_catalog.float4le", ServerSideOnly=true)]
		public static bool? float4le(float? par1680, float? par1681)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4lt

		[Sql.Function(Name="pg_catalog.float4lt", ServerSideOnly=true)]
		public static bool? float4lt(float? par1683, float? par1684)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4mi

		[Sql.Function(Name="pg_catalog.float4mi", ServerSideOnly=true)]
		public static float? float4mi(float? par1686, float? par1687)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4mul

		[Sql.Function(Name="pg_catalog.float4mul", ServerSideOnly=true)]
		public static float? float4mul(float? par1689, float? par1690)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4ne

		[Sql.Function(Name="pg_catalog.float4ne", ServerSideOnly=true)]
		public static bool? float4ne(float? par1692, float? par1693)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4out

		[Sql.Function(Name="pg_catalog.float4out", ServerSideOnly=true)]
		public static object float4out(float? par1695)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4pl

		[Sql.Function(Name="pg_catalog.float4pl", ServerSideOnly=true)]
		public static float? float4pl(float? par1697, float? par1698)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4recv

		[Sql.Function(Name="pg_catalog.float4recv", ServerSideOnly=true)]
		public static float? float4recv(object par1700)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4send

		[Sql.Function(Name="pg_catalog.float4send", ServerSideOnly=true)]
		public static byte[] float4send(float? par1702)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4smaller

		[Sql.Function(Name="pg_catalog.float4smaller", ServerSideOnly=true)]
		public static float? float4smaller(float? par1704, float? par1705)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4um

		[Sql.Function(Name="pg_catalog.float4um", ServerSideOnly=true)]
		public static float? float4um(float? par1707)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float4up

		[Sql.Function(Name="pg_catalog.float4up", ServerSideOnly=true)]
		public static float? float4up(float? par1709)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8

		[Sql.Function(Name="pg_catalog.float8", ServerSideOnly=true)]
		public static double? float8(long? par1721)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84div

		[Sql.Function(Name="pg_catalog.float84div", ServerSideOnly=true)]
		public static double? float84div(double? par1723, float? par1724)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84eq

		[Sql.Function(Name="pg_catalog.float84eq", ServerSideOnly=true)]
		public static bool? float84eq(double? par1726, float? par1727)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84ge

		[Sql.Function(Name="pg_catalog.float84ge", ServerSideOnly=true)]
		public static bool? float84ge(double? par1729, float? par1730)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84gt

		[Sql.Function(Name="pg_catalog.float84gt", ServerSideOnly=true)]
		public static bool? float84gt(double? par1732, float? par1733)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84le

		[Sql.Function(Name="pg_catalog.float84le", ServerSideOnly=true)]
		public static bool? float84le(double? par1735, float? par1736)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84lt

		[Sql.Function(Name="pg_catalog.float84lt", ServerSideOnly=true)]
		public static bool? float84lt(double? par1738, float? par1739)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84mi

		[Sql.Function(Name="pg_catalog.float84mi", ServerSideOnly=true)]
		public static double? float84mi(double? par1741, float? par1742)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84mul

		[Sql.Function(Name="pg_catalog.float84mul", ServerSideOnly=true)]
		public static double? float84mul(double? par1744, float? par1745)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84ne

		[Sql.Function(Name="pg_catalog.float84ne", ServerSideOnly=true)]
		public static bool? float84ne(double? par1747, float? par1748)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float84pl

		[Sql.Function(Name="pg_catalog.float84pl", ServerSideOnly=true)]
		public static double? float84pl(double? par1750, float? par1751)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8abs

		[Sql.Function(Name="pg_catalog.float8abs", ServerSideOnly=true)]
		public static double? float8abs(double? par1753)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_accum

		[Sql.Function(Name="pg_catalog.float8_accum", ServerSideOnly=true)]
		public static object float8_accum(object par1755, double? par1756)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_avg

		[Sql.Function(Name="pg_catalog.float8_avg", ServerSideOnly=true)]
		public static double? float8_avg(object par1758)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_combine

		[Sql.Function(Name="pg_catalog.float8_combine", ServerSideOnly=true)]
		public static object float8_combine(object par1760, object par1761)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_corr

		[Sql.Function(Name="pg_catalog.float8_corr", ServerSideOnly=true)]
		public static double? float8_corr(object par1763)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_covar_pop

		[Sql.Function(Name="pg_catalog.float8_covar_pop", ServerSideOnly=true)]
		public static double? float8_covar_pop(object par1765)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_covar_samp

		[Sql.Function(Name="pg_catalog.float8_covar_samp", ServerSideOnly=true)]
		public static double? float8_covar_samp(object par1767)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8div

		[Sql.Function(Name="pg_catalog.float8div", ServerSideOnly=true)]
		public static double? float8div(double? par1769, double? par1770)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8eq

		[Sql.Function(Name="pg_catalog.float8eq", ServerSideOnly=true)]
		public static bool? float8eq(double? par1772, double? par1773)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8ge

		[Sql.Function(Name="pg_catalog.float8ge", ServerSideOnly=true)]
		public static bool? float8ge(double? par1775, double? par1776)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8gt

		[Sql.Function(Name="pg_catalog.float8gt", ServerSideOnly=true)]
		public static bool? float8gt(double? par1778, double? par1779)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8in

		[Sql.Function(Name="pg_catalog.float8in", ServerSideOnly=true)]
		public static double? float8in(object par1781)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8larger

		[Sql.Function(Name="pg_catalog.float8larger", ServerSideOnly=true)]
		public static double? float8larger(double? par1783, double? par1784)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8le

		[Sql.Function(Name="pg_catalog.float8le", ServerSideOnly=true)]
		public static bool? float8le(double? par1786, double? par1787)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8lt

		[Sql.Function(Name="pg_catalog.float8lt", ServerSideOnly=true)]
		public static bool? float8lt(double? par1789, double? par1790)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8mi

		[Sql.Function(Name="pg_catalog.float8mi", ServerSideOnly=true)]
		public static double? float8mi(double? par1792, double? par1793)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8mul

		[Sql.Function(Name="pg_catalog.float8mul", ServerSideOnly=true)]
		public static double? float8mul(double? par1795, double? par1796)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8ne

		[Sql.Function(Name="pg_catalog.float8ne", ServerSideOnly=true)]
		public static bool? float8ne(double? par1798, double? par1799)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8out

		[Sql.Function(Name="pg_catalog.float8out", ServerSideOnly=true)]
		public static object float8out(double? par1801)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8pl

		[Sql.Function(Name="pg_catalog.float8pl", ServerSideOnly=true)]
		public static double? float8pl(double? par1803, double? par1804)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8recv

		[Sql.Function(Name="pg_catalog.float8recv", ServerSideOnly=true)]
		public static double? float8recv(object par1806)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_accum

		[Sql.Function(Name="pg_catalog.float8_regr_accum", ServerSideOnly=true)]
		public static object float8_regr_accum(object par1808, double? par1809, double? par1810)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_avgx

		[Sql.Function(Name="pg_catalog.float8_regr_avgx", ServerSideOnly=true)]
		public static double? float8_regr_avgx(object par1812)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_avgy

		[Sql.Function(Name="pg_catalog.float8_regr_avgy", ServerSideOnly=true)]
		public static double? float8_regr_avgy(object par1814)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_combine

		[Sql.Function(Name="pg_catalog.float8_regr_combine", ServerSideOnly=true)]
		public static object float8_regr_combine(object par1816, object par1817)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_intercept

		[Sql.Function(Name="pg_catalog.float8_regr_intercept", ServerSideOnly=true)]
		public static double? float8_regr_intercept(object par1819)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_r2

		[Sql.Function(Name="pg_catalog.float8_regr_r2", ServerSideOnly=true)]
		public static double? float8_regr_r2(object par1821)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_slope

		[Sql.Function(Name="pg_catalog.float8_regr_slope", ServerSideOnly=true)]
		public static double? float8_regr_slope(object par1823)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_sxx

		[Sql.Function(Name="pg_catalog.float8_regr_sxx", ServerSideOnly=true)]
		public static double? float8_regr_sxx(object par1825)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_sxy

		[Sql.Function(Name="pg_catalog.float8_regr_sxy", ServerSideOnly=true)]
		public static double? float8_regr_sxy(object par1827)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_regr_syy

		[Sql.Function(Name="pg_catalog.float8_regr_syy", ServerSideOnly=true)]
		public static double? float8_regr_syy(object par1829)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8send

		[Sql.Function(Name="pg_catalog.float8send", ServerSideOnly=true)]
		public static byte[] float8send(double? par1831)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8smaller

		[Sql.Function(Name="pg_catalog.float8smaller", ServerSideOnly=true)]
		public static double? float8smaller(double? par1833, double? par1834)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_stddev_pop

		[Sql.Function(Name="pg_catalog.float8_stddev_pop", ServerSideOnly=true)]
		public static double? float8_stddev_pop(object par1836)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_stddev_samp

		[Sql.Function(Name="pg_catalog.float8_stddev_samp", ServerSideOnly=true)]
		public static double? float8_stddev_samp(object par1838)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8um

		[Sql.Function(Name="pg_catalog.float8um", ServerSideOnly=true)]
		public static double? float8um(double? par1840)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8up

		[Sql.Function(Name="pg_catalog.float8up", ServerSideOnly=true)]
		public static double? float8up(double? par1842)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_var_pop

		[Sql.Function(Name="pg_catalog.float8_var_pop", ServerSideOnly=true)]
		public static double? float8_var_pop(object par1844)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region float8_var_samp

		[Sql.Function(Name="pg_catalog.float8_var_samp", ServerSideOnly=true)]
		public static double? float8_var_samp(object par1846)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region floor

		[Sql.Function(Name="pg_catalog.floor", ServerSideOnly=true)]
		public static double? floor(double? par1850)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region flt4_mul_cash

		[Sql.Function(Name="pg_catalog.flt4_mul_cash", ServerSideOnly=true)]
		public static decimal? flt4_mul_cash(float? par1852, decimal? par1853)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region flt8_mul_cash

		[Sql.Function(Name="pg_catalog.flt8_mul_cash", ServerSideOnly=true)]
		public static decimal? flt8_mul_cash(double? par1855, decimal? par1856)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region fmgr_c_validator

		[Sql.Function(Name="pg_catalog.fmgr_c_validator", ServerSideOnly=true)]
		public static object fmgr_c_validator(int? par1857)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region fmgr_internal_validator

		[Sql.Function(Name="pg_catalog.fmgr_internal_validator", ServerSideOnly=true)]
		public static object fmgr_internal_validator(int? par1858)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region fmgr_sql_validator

		[Sql.Function(Name="pg_catalog.fmgr_sql_validator", ServerSideOnly=true)]
		public static object fmgr_sql_validator(int? par1859)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region format

		[Sql.Function(Name="pg_catalog.format", ServerSideOnly=true)]
		public static string format(string par1864)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region format_type

		[Sql.Function(Name="pg_catalog.format_type", ServerSideOnly=true)]
		public static string format_type(int? par1866, int? par1867)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gb18030_to_utf8

		[Sql.Function(Name="pg_catalog.gb18030_to_utf8", ServerSideOnly=true)]
		public static object gb18030_to_utf8(int? par1868, int? par1869, object par1870, object par1871, int? par1872)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gbk_to_utf8

		[Sql.Function(Name="pg_catalog.gbk_to_utf8", ServerSideOnly=true)]
		public static object gbk_to_utf8(int? par1873, int? par1874, object par1875, object par1876, int? par1877)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region get_bit

		[Sql.Function(Name="pg_catalog.get_bit", ServerSideOnly=true)]
		public static int? get_bit(byte[] par1908, int? par1909)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region get_byte

		[Sql.Function(Name="pg_catalog.get_byte", ServerSideOnly=true)]
		public static int? get_byte(byte[] par1911, int? par1912)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region get_current_ts_config

		[Sql.Function(Name="pg_catalog.get_current_ts_config", ServerSideOnly=true)]
		public static object get_current_ts_config()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region getdatabaseencoding

		[Sql.Function(Name="pg_catalog.getdatabaseencoding", ServerSideOnly=true)]
		public static string getdatabaseencoding()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region getpgusername

		[Sql.Function(Name="pg_catalog.getpgusername", ServerSideOnly=true)]
		public static string getpgusername()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ginarrayconsistent

		[Sql.Function(Name="pg_catalog.ginarrayconsistent", ServerSideOnly=true)]
		public static bool? ginarrayconsistent(object par1917, short? par1918, object par1919, int? par1920, object par1921, object par1922, object par1923, object par1924)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ginarrayextract

		[Sql.Function(Name="pg_catalog.ginarrayextract", ServerSideOnly=true)]
		public static object ginarrayextract(object par1930, object par1931)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ginarraytriconsistent

		[Sql.Function(Name="pg_catalog.ginarraytriconsistent", ServerSideOnly=true)]
		public static object ginarraytriconsistent(object par1933, short? par1934, object par1935, int? par1936, object par1937, object par1938, object par1939)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_clean_pending_list

		[Sql.Function(Name="pg_catalog.gin_clean_pending_list", ServerSideOnly=true)]
		public static long? gin_clean_pending_list(object par1941)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_cmp_prefix

		[Sql.Function(Name="pg_catalog.gin_cmp_prefix", ServerSideOnly=true)]
		public static int? gin_cmp_prefix(string par1943, string par1944, short? par1945, object par1946)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_cmp_tslexeme

		[Sql.Function(Name="pg_catalog.gin_cmp_tslexeme", ServerSideOnly=true)]
		public static int? gin_cmp_tslexeme(string par1948, string par1949)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_compare_jsonb

		[Sql.Function(Name="pg_catalog.gin_compare_jsonb", ServerSideOnly=true)]
		public static int? gin_compare_jsonb(string par1951, string par1952)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_consistent_jsonb

		[Sql.Function(Name="pg_catalog.gin_consistent_jsonb", ServerSideOnly=true)]
		public static bool? gin_consistent_jsonb(object par1954, short? par1955, string par1956, int? par1957, object par1958, object par1959, object par1960, object par1961)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_consistent_jsonb_path

		[Sql.Function(Name="pg_catalog.gin_consistent_jsonb_path", ServerSideOnly=true)]
		public static bool? gin_consistent_jsonb_path(object par1963, short? par1964, string par1965, int? par1966, object par1967, object par1968, object par1969, object par1970)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_extract_jsonb

		[Sql.Function(Name="pg_catalog.gin_extract_jsonb", ServerSideOnly=true)]
		public static object gin_extract_jsonb(string par1972, object par1973, object par1974)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_extract_jsonb_path

		[Sql.Function(Name="pg_catalog.gin_extract_jsonb_path", ServerSideOnly=true)]
		public static object gin_extract_jsonb_path(string par1976, object par1977, object par1978)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_extract_jsonb_query

		[Sql.Function(Name="pg_catalog.gin_extract_jsonb_query", ServerSideOnly=true)]
		public static object gin_extract_jsonb_query(string par1980, object par1981, short? par1982, object par1983, object par1984, object par1985, object par1986)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_extract_jsonb_query_path

		[Sql.Function(Name="pg_catalog.gin_extract_jsonb_query_path", ServerSideOnly=true)]
		public static object gin_extract_jsonb_query_path(string par1988, object par1989, short? par1990, object par1991, object par1992, object par1993, object par1994)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_extract_tsquery

		[Sql.Function(Name="pg_catalog.gin_extract_tsquery", ServerSideOnly=true)]
		public static object gin_extract_tsquery(object par2010, object par2011, short? par2012, object par2013, object par2014, object par2015, object par2016)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_extract_tsvector

		[Sql.Function(Name="pg_catalog.gin_extract_tsvector", ServerSideOnly=true)]
		public static object gin_extract_tsvector(object par2021, object par2022, object par2023)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ginhandler

		[Sql.Function(Name="pg_catalog.ginhandler", ServerSideOnly=true)]
		public static object ginhandler(object par2025)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ginqueryarrayextract

		[Sql.Function(Name="pg_catalog.ginqueryarrayextract", ServerSideOnly=true)]
		public static object ginqueryarrayextract(object par2027, object par2028, short? par2029, object par2030, object par2031, object par2032, object par2033)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_triconsistent_jsonb

		[Sql.Function(Name="pg_catalog.gin_triconsistent_jsonb", ServerSideOnly=true)]
		public static object gin_triconsistent_jsonb(object par2035, short? par2036, string par2037, int? par2038, object par2039, object par2040, object par2041)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_triconsistent_jsonb_path

		[Sql.Function(Name="pg_catalog.gin_triconsistent_jsonb_path", ServerSideOnly=true)]
		public static object gin_triconsistent_jsonb_path(object par2043, short? par2044, string par2045, int? par2046, object par2047, object par2048, object par2049)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_tsquery_consistent

		[Sql.Function(Name="pg_catalog.gin_tsquery_consistent", ServerSideOnly=true)]
		public static bool? gin_tsquery_consistent(object par2067, short? par2068, object par2069, int? par2070, object par2071, object par2072, object par2073, object par2074)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gin_tsquery_triconsistent

		[Sql.Function(Name="pg_catalog.gin_tsquery_triconsistent", ServerSideOnly=true)]
		public static object gin_tsquery_triconsistent(object par2076, short? par2077, object par2078, int? par2079, object par2080, object par2081, object par2082)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_box_consistent

		[Sql.Function(Name="pg_catalog.gist_box_consistent", ServerSideOnly=true)]
		public static bool? gist_box_consistent(object par2084, NpgsqlBox? par2085, short? par2086, int? par2087, object par2088)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_box_penalty

		[Sql.Function(Name="pg_catalog.gist_box_penalty", ServerSideOnly=true)]
		public static object gist_box_penalty(object par2090, object par2091, object par2092)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_box_picksplit

		[Sql.Function(Name="pg_catalog.gist_box_picksplit", ServerSideOnly=true)]
		public static object gist_box_picksplit(object par2094, object par2095)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_box_same

		[Sql.Function(Name="pg_catalog.gist_box_same", ServerSideOnly=true)]
		public static object gist_box_same(NpgsqlBox? par2097, NpgsqlBox? par2098, object par2099)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_box_union

		[Sql.Function(Name="pg_catalog.gist_box_union", ServerSideOnly=true)]
		public static NpgsqlBox? gist_box_union(object par2101, object par2102)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_circle_compress

		[Sql.Function(Name="pg_catalog.gist_circle_compress", ServerSideOnly=true)]
		public static object gist_circle_compress(object par2104)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_circle_consistent

		[Sql.Function(Name="pg_catalog.gist_circle_consistent", ServerSideOnly=true)]
		public static bool? gist_circle_consistent(object par2106, NpgsqlCircle? par2107, short? par2108, int? par2109, object par2110)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_circle_distance

		[Sql.Function(Name="pg_catalog.gist_circle_distance", ServerSideOnly=true)]
		public static double? gist_circle_distance(object par2112, NpgsqlCircle? par2113, short? par2114, int? par2115, object par2116)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gisthandler

		[Sql.Function(Name="pg_catalog.gisthandler", ServerSideOnly=true)]
		public static object gisthandler(object par2118)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_point_compress

		[Sql.Function(Name="pg_catalog.gist_point_compress", ServerSideOnly=true)]
		public static object gist_point_compress(object par2120)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_point_consistent

		[Sql.Function(Name="pg_catalog.gist_point_consistent", ServerSideOnly=true)]
		public static bool? gist_point_consistent(object par2122, NpgsqlPoint? par2123, short? par2124, int? par2125, object par2126)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_point_distance

		[Sql.Function(Name="pg_catalog.gist_point_distance", ServerSideOnly=true)]
		public static double? gist_point_distance(object par2128, NpgsqlPoint? par2129, short? par2130, int? par2131, object par2132)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_point_fetch

		[Sql.Function(Name="pg_catalog.gist_point_fetch", ServerSideOnly=true)]
		public static object gist_point_fetch(object par2134)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_poly_compress

		[Sql.Function(Name="pg_catalog.gist_poly_compress", ServerSideOnly=true)]
		public static object gist_poly_compress(object par2136)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_poly_consistent

		[Sql.Function(Name="pg_catalog.gist_poly_consistent", ServerSideOnly=true)]
		public static bool? gist_poly_consistent(object par2138, NpgsqlPolygon? par2139, short? par2140, int? par2141, object par2142)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gist_poly_distance

		[Sql.Function(Name="pg_catalog.gist_poly_distance", ServerSideOnly=true)]
		public static double? gist_poly_distance(object par2144, NpgsqlPolygon? par2145, short? par2146, int? par2147, object par2148)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsquery_compress

		[Sql.Function(Name="pg_catalog.gtsquery_compress", ServerSideOnly=true)]
		public static object gtsquery_compress(object par2150)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsquery_consistent

		[Sql.Function(Name="pg_catalog.gtsquery_consistent", ServerSideOnly=true)]
		public static bool? gtsquery_consistent(object par2158, object par2159, int? par2160, int? par2161, object par2162)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsquery_penalty

		[Sql.Function(Name="pg_catalog.gtsquery_penalty", ServerSideOnly=true)]
		public static object gtsquery_penalty(object par2164, object par2165, object par2166)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsquery_picksplit

		[Sql.Function(Name="pg_catalog.gtsquery_picksplit", ServerSideOnly=true)]
		public static object gtsquery_picksplit(object par2168, object par2169)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsquery_same

		[Sql.Function(Name="pg_catalog.gtsquery_same", ServerSideOnly=true)]
		public static object gtsquery_same(long? par2171, long? par2172, object par2173)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsquery_union

		[Sql.Function(Name="pg_catalog.gtsquery_union", ServerSideOnly=true)]
		public static long? gtsquery_union(object par2175, object par2176)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvector_compress

		[Sql.Function(Name="pg_catalog.gtsvector_compress", ServerSideOnly=true)]
		public static object gtsvector_compress(object par2178)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvector_consistent

		[Sql.Function(Name="pg_catalog.gtsvector_consistent", ServerSideOnly=true)]
		public static bool? gtsvector_consistent(object par2186, object par2187, int? par2188, int? par2189, object par2190)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvector_decompress

		[Sql.Function(Name="pg_catalog.gtsvector_decompress", ServerSideOnly=true)]
		public static object gtsvector_decompress(object par2192)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvectorin

		[Sql.Function(Name="pg_catalog.gtsvectorin", ServerSideOnly=true)]
		public static object gtsvectorin(object par2194)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvectorout

		[Sql.Function(Name="pg_catalog.gtsvectorout", ServerSideOnly=true)]
		public static object gtsvectorout(object par2196)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvector_penalty

		[Sql.Function(Name="pg_catalog.gtsvector_penalty", ServerSideOnly=true)]
		public static object gtsvector_penalty(object par2198, object par2199, object par2200)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvector_picksplit

		[Sql.Function(Name="pg_catalog.gtsvector_picksplit", ServerSideOnly=true)]
		public static object gtsvector_picksplit(object par2202, object par2203)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvector_same

		[Sql.Function(Name="pg_catalog.gtsvector_same", ServerSideOnly=true)]
		public static object gtsvector_same(object par2205, object par2206, object par2207)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region gtsvector_union

		[Sql.Function(Name="pg_catalog.gtsvector_union", ServerSideOnly=true)]
		public static object gtsvector_union(object par2209, object par2210)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_any_column_privilege

		[Sql.Function(Name="pg_catalog.has_any_column_privilege", ServerSideOnly=true)]
		public static bool? has_any_column_privilege(int? par2231, string par2232)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_column_privilege

		[Sql.Function(Name="pg_catalog.has_column_privilege", ServerSideOnly=true)]
		public static bool? has_column_privilege(int? par2286, short? par2287, string par2288)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_database_privilege

		[Sql.Function(Name="pg_catalog.has_database_privilege", ServerSideOnly=true)]
		public static bool? has_database_privilege(int? par2309, string par2310)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_foreign_data_wrapper_privilege

		[Sql.Function(Name="pg_catalog.has_foreign_data_wrapper_privilege", ServerSideOnly=true)]
		public static bool? has_foreign_data_wrapper_privilege(int? par2331, string par2332)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_function_privilege

		[Sql.Function(Name="pg_catalog.has_function_privilege", ServerSideOnly=true)]
		public static bool? has_function_privilege(int? par2353, string par2354)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_aclitem

		[Sql.Function(Name="pg_catalog.hash_aclitem", ServerSideOnly=true)]
		public static int? hash_aclitem(object par2356)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_aclitem_extended

		[Sql.Function(Name="pg_catalog.hash_aclitem_extended", ServerSideOnly=true)]
		public static long? hash_aclitem_extended(object par2358, long? par2359)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_array

		[Sql.Function(Name="pg_catalog.hash_array", ServerSideOnly=true)]
		public static int? hash_array(object par2361)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_array_extended

		[Sql.Function(Name="pg_catalog.hash_array_extended", ServerSideOnly=true)]
		public static long? hash_array_extended(object par2363, long? par2364)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashbpchar

		[Sql.Function(Name="pg_catalog.hashbpchar", ServerSideOnly=true)]
		public static int? hashbpchar(string par2366)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashbpcharextended

		[Sql.Function(Name="pg_catalog.hashbpcharextended", ServerSideOnly=true)]
		public static long? hashbpcharextended(string par2368, long? par2369)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashchar

		[Sql.Function(Name="pg_catalog.hashchar", ServerSideOnly=true)]
		public static int? hashchar(object par2371)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashcharextended

		[Sql.Function(Name="pg_catalog.hashcharextended", ServerSideOnly=true)]
		public static long? hashcharextended(object par2373, long? par2374)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashenum

		[Sql.Function(Name="pg_catalog.hashenum", ServerSideOnly=true)]
		public static int? hashenum(object par2376)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashenumextended

		[Sql.Function(Name="pg_catalog.hashenumextended", ServerSideOnly=true)]
		public static long? hashenumextended(object par2378, long? par2379)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashfloat4

		[Sql.Function(Name="pg_catalog.hashfloat4", ServerSideOnly=true)]
		public static int? hashfloat4(float? par2381)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashfloat4extended

		[Sql.Function(Name="pg_catalog.hashfloat4extended", ServerSideOnly=true)]
		public static long? hashfloat4extended(float? par2383, long? par2384)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashfloat8

		[Sql.Function(Name="pg_catalog.hashfloat8", ServerSideOnly=true)]
		public static int? hashfloat8(double? par2386)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashfloat8extended

		[Sql.Function(Name="pg_catalog.hashfloat8extended", ServerSideOnly=true)]
		public static long? hashfloat8extended(double? par2388, long? par2389)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashhandler

		[Sql.Function(Name="pg_catalog.hashhandler", ServerSideOnly=true)]
		public static object hashhandler(object par2391)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashinet

		[Sql.Function(Name="pg_catalog.hashinet", ServerSideOnly=true)]
		public static int? hashinet(NpgsqlInet? par2393)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashinetextended

		[Sql.Function(Name="pg_catalog.hashinetextended", ServerSideOnly=true)]
		public static long? hashinetextended(NpgsqlInet? par2395, long? par2396)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashint2

		[Sql.Function(Name="pg_catalog.hashint2", ServerSideOnly=true)]
		public static int? hashint2(short? par2398)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashint2extended

		[Sql.Function(Name="pg_catalog.hashint2extended", ServerSideOnly=true)]
		public static long? hashint2extended(short? par2400, long? par2401)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashint4

		[Sql.Function(Name="pg_catalog.hashint4", ServerSideOnly=true)]
		public static int? hashint4(int? par2403)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashint4extended

		[Sql.Function(Name="pg_catalog.hashint4extended", ServerSideOnly=true)]
		public static long? hashint4extended(int? par2405, long? par2406)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashint8

		[Sql.Function(Name="pg_catalog.hashint8", ServerSideOnly=true)]
		public static int? hashint8(long? par2408)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashint8extended

		[Sql.Function(Name="pg_catalog.hashint8extended", ServerSideOnly=true)]
		public static long? hashint8extended(long? par2410, long? par2411)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashmacaddr

		[Sql.Function(Name="pg_catalog.hashmacaddr", ServerSideOnly=true)]
		public static int? hashmacaddr(PhysicalAddress par2413)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashmacaddr8

		[Sql.Function(Name="pg_catalog.hashmacaddr8", ServerSideOnly=true)]
		public static int? hashmacaddr8(PhysicalAddress par2415)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashmacaddr8extended

		[Sql.Function(Name="pg_catalog.hashmacaddr8extended", ServerSideOnly=true)]
		public static long? hashmacaddr8extended(PhysicalAddress par2417, long? par2418)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashmacaddrextended

		[Sql.Function(Name="pg_catalog.hashmacaddrextended", ServerSideOnly=true)]
		public static long? hashmacaddrextended(PhysicalAddress par2420, long? par2421)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashname

		[Sql.Function(Name="pg_catalog.hashname", ServerSideOnly=true)]
		public static int? hashname(string par2423)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashnameextended

		[Sql.Function(Name="pg_catalog.hashnameextended", ServerSideOnly=true)]
		public static long? hashnameextended(string par2425, long? par2426)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_numeric

		[Sql.Function(Name="pg_catalog.hash_numeric", ServerSideOnly=true)]
		public static int? hash_numeric(decimal? par2428)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_numeric_extended

		[Sql.Function(Name="pg_catalog.hash_numeric_extended", ServerSideOnly=true)]
		public static long? hash_numeric_extended(decimal? par2430, long? par2431)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashoid

		[Sql.Function(Name="pg_catalog.hashoid", ServerSideOnly=true)]
		public static int? hashoid(int? par2433)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashoidextended

		[Sql.Function(Name="pg_catalog.hashoidextended", ServerSideOnly=true)]
		public static long? hashoidextended(int? par2435, long? par2436)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashoidvector

		[Sql.Function(Name="pg_catalog.hashoidvector", ServerSideOnly=true)]
		public static int? hashoidvector(object par2438)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashoidvectorextended

		[Sql.Function(Name="pg_catalog.hashoidvectorextended", ServerSideOnly=true)]
		public static long? hashoidvectorextended(object par2440, long? par2441)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_range

		[Sql.Function(Name="pg_catalog.hash_range", ServerSideOnly=true)]
		public static int? hash_range(object par2443)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hash_range_extended

		[Sql.Function(Name="pg_catalog.hash_range_extended", ServerSideOnly=true)]
		public static long? hash_range_extended(object par2445, long? par2446)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashtext

		[Sql.Function(Name="pg_catalog.hashtext", ServerSideOnly=true)]
		public static int? hashtext(string par2448)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashtextextended

		[Sql.Function(Name="pg_catalog.hashtextextended", ServerSideOnly=true)]
		public static long? hashtextextended(string par2450, long? par2451)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashvarlena

		[Sql.Function(Name="pg_catalog.hashvarlena", ServerSideOnly=true)]
		public static int? hashvarlena(object par2453)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hashvarlenaextended

		[Sql.Function(Name="pg_catalog.hashvarlenaextended", ServerSideOnly=true)]
		public static long? hashvarlenaextended(object par2455, long? par2456)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_language_privilege

		[Sql.Function(Name="pg_catalog.has_language_privilege", ServerSideOnly=true)]
		public static bool? has_language_privilege(int? par2477, string par2478)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_schema_privilege

		[Sql.Function(Name="pg_catalog.has_schema_privilege", ServerSideOnly=true)]
		public static bool? has_schema_privilege(int? par2499, string par2500)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_sequence_privilege

		[Sql.Function(Name="pg_catalog.has_sequence_privilege", ServerSideOnly=true)]
		public static bool? has_sequence_privilege(int? par2521, string par2522)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_server_privilege

		[Sql.Function(Name="pg_catalog.has_server_privilege", ServerSideOnly=true)]
		public static bool? has_server_privilege(int? par2543, string par2544)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_table_privilege

		[Sql.Function(Name="pg_catalog.has_table_privilege", ServerSideOnly=true)]
		public static bool? has_table_privilege(int? par2565, string par2566)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_tablespace_privilege

		[Sql.Function(Name="pg_catalog.has_tablespace_privilege", ServerSideOnly=true)]
		public static bool? has_tablespace_privilege(int? par2587, string par2588)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region has_type_privilege

		[Sql.Function(Name="pg_catalog.has_type_privilege", ServerSideOnly=true)]
		public static bool? has_type_privilege(int? par2609, string par2610)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region height

		[Sql.Function(Name="pg_catalog.height", ServerSideOnly=true)]
		public static double? height(NpgsqlBox? par2612)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region host

		[Sql.Function(Name="pg_catalog.host", ServerSideOnly=true)]
		public static string host(NpgsqlInet? par2614)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region hostmask

		[Sql.Function(Name="pg_catalog.hostmask", ServerSideOnly=true)]
		public static NpgsqlInet? hostmask(NpgsqlInet? par2616)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iclikejoinsel

		[Sql.Function(Name="pg_catalog.iclikejoinsel", ServerSideOnly=true)]
		public static double? iclikejoinsel(object par2618, int? par2619, object par2620, short? par2621, object par2622)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iclikesel

		[Sql.Function(Name="pg_catalog.iclikesel", ServerSideOnly=true)]
		public static double? iclikesel(object par2624, int? par2625, object par2626, int? par2627)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region icnlikejoinsel

		[Sql.Function(Name="pg_catalog.icnlikejoinsel", ServerSideOnly=true)]
		public static double? icnlikejoinsel(object par2629, int? par2630, object par2631, short? par2632, object par2633)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region icnlikesel

		[Sql.Function(Name="pg_catalog.icnlikesel", ServerSideOnly=true)]
		public static double? icnlikesel(object par2635, int? par2636, object par2637, int? par2638)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region icregexeqjoinsel

		[Sql.Function(Name="pg_catalog.icregexeqjoinsel", ServerSideOnly=true)]
		public static double? icregexeqjoinsel(object par2640, int? par2641, object par2642, short? par2643, object par2644)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region icregexeqsel

		[Sql.Function(Name="pg_catalog.icregexeqsel", ServerSideOnly=true)]
		public static double? icregexeqsel(object par2646, int? par2647, object par2648, int? par2649)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region icregexnejoinsel

		[Sql.Function(Name="pg_catalog.icregexnejoinsel", ServerSideOnly=true)]
		public static double? icregexnejoinsel(object par2651, int? par2652, object par2653, short? par2654, object par2655)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region icregexnesel

		[Sql.Function(Name="pg_catalog.icregexnesel", ServerSideOnly=true)]
		public static double? icregexnesel(object par2657, int? par2658, object par2659, int? par2660)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region index_am_handler_in

		[Sql.Function(Name="pg_catalog.index_am_handler_in", ServerSideOnly=true)]
		public static object index_am_handler_in(object par2662)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region index_am_handler_out

		[Sql.Function(Name="pg_catalog.index_am_handler_out", ServerSideOnly=true)]
		public static object index_am_handler_out(object par2664)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inetand

		[Sql.Function(Name="pg_catalog.inetand", ServerSideOnly=true)]
		public static NpgsqlInet? inetand(NpgsqlInet? par2666, NpgsqlInet? par2667)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_client_addr

		[Sql.Function(Name="pg_catalog.inet_client_addr", ServerSideOnly=true)]
		public static NpgsqlInet? inet_client_addr()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_client_port

		[Sql.Function(Name="pg_catalog.inet_client_port", ServerSideOnly=true)]
		public static int? inet_client_port()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_gist_compress

		[Sql.Function(Name="pg_catalog.inet_gist_compress", ServerSideOnly=true)]
		public static object inet_gist_compress(object par2671)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_gist_consistent

		[Sql.Function(Name="pg_catalog.inet_gist_consistent", ServerSideOnly=true)]
		public static bool? inet_gist_consistent(object par2673, NpgsqlInet? par2674, short? par2675, int? par2676, object par2677)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_gist_fetch

		[Sql.Function(Name="pg_catalog.inet_gist_fetch", ServerSideOnly=true)]
		public static object inet_gist_fetch(object par2679)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_gist_penalty

		[Sql.Function(Name="pg_catalog.inet_gist_penalty", ServerSideOnly=true)]
		public static object inet_gist_penalty(object par2681, object par2682, object par2683)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_gist_picksplit

		[Sql.Function(Name="pg_catalog.inet_gist_picksplit", ServerSideOnly=true)]
		public static object inet_gist_picksplit(object par2685, object par2686)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_gist_same

		[Sql.Function(Name="pg_catalog.inet_gist_same", ServerSideOnly=true)]
		public static object inet_gist_same(NpgsqlInet? par2688, NpgsqlInet? par2689, object par2690)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_gist_union

		[Sql.Function(Name="pg_catalog.inet_gist_union", ServerSideOnly=true)]
		public static NpgsqlInet? inet_gist_union(object par2692, object par2693)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_in

		[Sql.Function(Name="pg_catalog.inet_in", ServerSideOnly=true)]
		public static NpgsqlInet? inet_in(object par2695)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_merge

		[Sql.Function(Name="pg_catalog.inet_merge", ServerSideOnly=true)]
		public static NpgsqlInet? inet_merge(NpgsqlInet? par2697, NpgsqlInet? par2698)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inetmi

		[Sql.Function(Name="pg_catalog.inetmi", ServerSideOnly=true)]
		public static long? inetmi(NpgsqlInet? par2700, NpgsqlInet? par2701)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inetmi_int8

		[Sql.Function(Name="pg_catalog.inetmi_int8", ServerSideOnly=true)]
		public static NpgsqlInet? inetmi_int8(NpgsqlInet? par2703, long? par2704)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inetnot

		[Sql.Function(Name="pg_catalog.inetnot", ServerSideOnly=true)]
		public static NpgsqlInet? inetnot(NpgsqlInet? par2706)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inetor

		[Sql.Function(Name="pg_catalog.inetor", ServerSideOnly=true)]
		public static NpgsqlInet? inetor(NpgsqlInet? par2708, NpgsqlInet? par2709)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_out

		[Sql.Function(Name="pg_catalog.inet_out", ServerSideOnly=true)]
		public static object inet_out(NpgsqlInet? par2711)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inetpl

		[Sql.Function(Name="pg_catalog.inetpl", ServerSideOnly=true)]
		public static NpgsqlInet? inetpl(NpgsqlInet? par2713, long? par2714)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_recv

		[Sql.Function(Name="pg_catalog.inet_recv", ServerSideOnly=true)]
		public static NpgsqlInet? inet_recv(object par2716)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_same_family

		[Sql.Function(Name="pg_catalog.inet_same_family", ServerSideOnly=true)]
		public static bool? inet_same_family(NpgsqlInet? par2718, NpgsqlInet? par2719)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_send

		[Sql.Function(Name="pg_catalog.inet_send", ServerSideOnly=true)]
		public static byte[] inet_send(NpgsqlInet? par2721)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_server_addr

		[Sql.Function(Name="pg_catalog.inet_server_addr", ServerSideOnly=true)]
		public static NpgsqlInet? inet_server_addr()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_server_port

		[Sql.Function(Name="pg_catalog.inet_server_port", ServerSideOnly=true)]
		public static int? inet_server_port()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_spg_choose

		[Sql.Function(Name="pg_catalog.inet_spg_choose", ServerSideOnly=true)]
		public static object inet_spg_choose(object par2724, object par2725)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_spg_config

		[Sql.Function(Name="pg_catalog.inet_spg_config", ServerSideOnly=true)]
		public static object inet_spg_config(object par2726, object par2727)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_spg_inner_consistent

		[Sql.Function(Name="pg_catalog.inet_spg_inner_consistent", ServerSideOnly=true)]
		public static object inet_spg_inner_consistent(object par2728, object par2729)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_spg_leaf_consistent

		[Sql.Function(Name="pg_catalog.inet_spg_leaf_consistent", ServerSideOnly=true)]
		public static bool? inet_spg_leaf_consistent(object par2731, object par2732)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inet_spg_picksplit

		[Sql.Function(Name="pg_catalog.inet_spg_picksplit", ServerSideOnly=true)]
		public static object inet_spg_picksplit(object par2733, object par2734)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region initcap

		[Sql.Function(Name="pg_catalog.initcap", ServerSideOnly=true)]
		public static string initcap(string par2736)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region in_range

		[Sql.Function(Name="pg_catalog.in_range", ServerSideOnly=true)]
		public static bool? in_range(decimal? par2828, decimal? par2829, decimal? par2830, bool? par2831, bool? par2832)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2

		[Sql.Function(Name="pg_catalog.int2", ServerSideOnly=true)]
		public static short? int2(long? par2874)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24div

		[Sql.Function(Name="pg_catalog.int24div", ServerSideOnly=true)]
		public static int? int24div(short? par2844, int? par2845)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24eq

		[Sql.Function(Name="pg_catalog.int24eq", ServerSideOnly=true)]
		public static bool? int24eq(short? par2847, int? par2848)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24ge

		[Sql.Function(Name="pg_catalog.int24ge", ServerSideOnly=true)]
		public static bool? int24ge(short? par2850, int? par2851)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24gt

		[Sql.Function(Name="pg_catalog.int24gt", ServerSideOnly=true)]
		public static bool? int24gt(short? par2853, int? par2854)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24le

		[Sql.Function(Name="pg_catalog.int24le", ServerSideOnly=true)]
		public static bool? int24le(short? par2856, int? par2857)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24lt

		[Sql.Function(Name="pg_catalog.int24lt", ServerSideOnly=true)]
		public static bool? int24lt(short? par2859, int? par2860)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24mi

		[Sql.Function(Name="pg_catalog.int24mi", ServerSideOnly=true)]
		public static int? int24mi(short? par2862, int? par2863)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24mul

		[Sql.Function(Name="pg_catalog.int24mul", ServerSideOnly=true)]
		public static int? int24mul(short? par2865, int? par2866)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24ne

		[Sql.Function(Name="pg_catalog.int24ne", ServerSideOnly=true)]
		public static bool? int24ne(short? par2868, int? par2869)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int24pl

		[Sql.Function(Name="pg_catalog.int24pl", ServerSideOnly=true)]
		public static int? int24pl(short? par2871, int? par2872)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28div

		[Sql.Function(Name="pg_catalog.int28div", ServerSideOnly=true)]
		public static long? int28div(short? par2876, long? par2877)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28eq

		[Sql.Function(Name="pg_catalog.int28eq", ServerSideOnly=true)]
		public static bool? int28eq(short? par2879, long? par2880)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28ge

		[Sql.Function(Name="pg_catalog.int28ge", ServerSideOnly=true)]
		public static bool? int28ge(short? par2882, long? par2883)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28gt

		[Sql.Function(Name="pg_catalog.int28gt", ServerSideOnly=true)]
		public static bool? int28gt(short? par2885, long? par2886)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28le

		[Sql.Function(Name="pg_catalog.int28le", ServerSideOnly=true)]
		public static bool? int28le(short? par2888, long? par2889)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28lt

		[Sql.Function(Name="pg_catalog.int28lt", ServerSideOnly=true)]
		public static bool? int28lt(short? par2891, long? par2892)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28mi

		[Sql.Function(Name="pg_catalog.int28mi", ServerSideOnly=true)]
		public static long? int28mi(short? par2894, long? par2895)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28mul

		[Sql.Function(Name="pg_catalog.int28mul", ServerSideOnly=true)]
		public static long? int28mul(short? par2897, long? par2898)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28ne

		[Sql.Function(Name="pg_catalog.int28ne", ServerSideOnly=true)]
		public static bool? int28ne(short? par2900, long? par2901)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int28pl

		[Sql.Function(Name="pg_catalog.int28pl", ServerSideOnly=true)]
		public static long? int28pl(short? par2903, long? par2904)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2abs

		[Sql.Function(Name="pg_catalog.int2abs", ServerSideOnly=true)]
		public static short? int2abs(short? par2906)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2_accum

		[Sql.Function(Name="pg_catalog.int2_accum", ServerSideOnly=true)]
		public static object int2_accum(object par2908, short? par2909)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2_accum_inv

		[Sql.Function(Name="pg_catalog.int2_accum_inv", ServerSideOnly=true)]
		public static object int2_accum_inv(object par2911, short? par2912)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2and

		[Sql.Function(Name="pg_catalog.int2and", ServerSideOnly=true)]
		public static short? int2and(short? par2914, short? par2915)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2_avg_accum

		[Sql.Function(Name="pg_catalog.int2_avg_accum", ServerSideOnly=true)]
		public static object int2_avg_accum(object par2917, short? par2918)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2_avg_accum_inv

		[Sql.Function(Name="pg_catalog.int2_avg_accum_inv", ServerSideOnly=true)]
		public static object int2_avg_accum_inv(object par2920, short? par2921)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2div

		[Sql.Function(Name="pg_catalog.int2div", ServerSideOnly=true)]
		public static short? int2div(short? par2923, short? par2924)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2eq

		[Sql.Function(Name="pg_catalog.int2eq", ServerSideOnly=true)]
		public static bool? int2eq(short? par2926, short? par2927)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2ge

		[Sql.Function(Name="pg_catalog.int2ge", ServerSideOnly=true)]
		public static bool? int2ge(short? par2929, short? par2930)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2gt

		[Sql.Function(Name="pg_catalog.int2gt", ServerSideOnly=true)]
		public static bool? int2gt(short? par2932, short? par2933)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2in

		[Sql.Function(Name="pg_catalog.int2in", ServerSideOnly=true)]
		public static short? int2in(object par2935)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2int4_sum

		[Sql.Function(Name="pg_catalog.int2int4_sum", ServerSideOnly=true)]
		public static long? int2int4_sum(object par2937)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2larger

		[Sql.Function(Name="pg_catalog.int2larger", ServerSideOnly=true)]
		public static short? int2larger(short? par2939, short? par2940)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2le

		[Sql.Function(Name="pg_catalog.int2le", ServerSideOnly=true)]
		public static bool? int2le(short? par2942, short? par2943)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2lt

		[Sql.Function(Name="pg_catalog.int2lt", ServerSideOnly=true)]
		public static bool? int2lt(short? par2945, short? par2946)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2mi

		[Sql.Function(Name="pg_catalog.int2mi", ServerSideOnly=true)]
		public static short? int2mi(short? par2948, short? par2949)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2mod

		[Sql.Function(Name="pg_catalog.int2mod", ServerSideOnly=true)]
		public static short? int2mod(short? par2951, short? par2952)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2mul

		[Sql.Function(Name="pg_catalog.int2mul", ServerSideOnly=true)]
		public static short? int2mul(short? par2954, short? par2955)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2_mul_cash

		[Sql.Function(Name="pg_catalog.int2_mul_cash", ServerSideOnly=true)]
		public static decimal? int2_mul_cash(short? par2957, decimal? par2958)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2ne

		[Sql.Function(Name="pg_catalog.int2ne", ServerSideOnly=true)]
		public static bool? int2ne(short? par2960, short? par2961)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2not

		[Sql.Function(Name="pg_catalog.int2not", ServerSideOnly=true)]
		public static short? int2not(short? par2963)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2or

		[Sql.Function(Name="pg_catalog.int2or", ServerSideOnly=true)]
		public static short? int2or(short? par2965, short? par2966)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2out

		[Sql.Function(Name="pg_catalog.int2out", ServerSideOnly=true)]
		public static object int2out(short? par2968)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2pl

		[Sql.Function(Name="pg_catalog.int2pl", ServerSideOnly=true)]
		public static short? int2pl(short? par2970, short? par2971)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2recv

		[Sql.Function(Name="pg_catalog.int2recv", ServerSideOnly=true)]
		public static short? int2recv(object par2973)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2send

		[Sql.Function(Name="pg_catalog.int2send", ServerSideOnly=true)]
		public static byte[] int2send(short? par2975)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2shl

		[Sql.Function(Name="pg_catalog.int2shl", ServerSideOnly=true)]
		public static short? int2shl(short? par2977, int? par2978)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2shr

		[Sql.Function(Name="pg_catalog.int2shr", ServerSideOnly=true)]
		public static short? int2shr(short? par2980, int? par2981)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2smaller

		[Sql.Function(Name="pg_catalog.int2smaller", ServerSideOnly=true)]
		public static short? int2smaller(short? par2983, short? par2984)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2_sum

		[Sql.Function(Name="pg_catalog.int2_sum", ServerSideOnly=true)]
		public static long? int2_sum(long? par2986, short? par2987)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2um

		[Sql.Function(Name="pg_catalog.int2um", ServerSideOnly=true)]
		public static short? int2um(short? par2989)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2up

		[Sql.Function(Name="pg_catalog.int2up", ServerSideOnly=true)]
		public static short? int2up(short? par2991)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2vectorin

		[Sql.Function(Name="pg_catalog.int2vectorin", ServerSideOnly=true)]
		public static object int2vectorin(object par2993)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2vectorout

		[Sql.Function(Name="pg_catalog.int2vectorout", ServerSideOnly=true)]
		public static object int2vectorout(object par2995)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2vectorrecv

		[Sql.Function(Name="pg_catalog.int2vectorrecv", ServerSideOnly=true)]
		public static object int2vectorrecv(object par2997)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2vectorsend

		[Sql.Function(Name="pg_catalog.int2vectorsend", ServerSideOnly=true)]
		public static byte[] int2vectorsend(object par2999)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int2xor

		[Sql.Function(Name="pg_catalog.int2xor", ServerSideOnly=true)]
		public static short? int2xor(short? par3001, short? par3002)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4

		[Sql.Function(Name="pg_catalog.int4", ServerSideOnly=true)]
		public static int? int4(object par3050)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42div

		[Sql.Function(Name="pg_catalog.int42div", ServerSideOnly=true)]
		public static int? int42div(int? par3010, short? par3011)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42eq

		[Sql.Function(Name="pg_catalog.int42eq", ServerSideOnly=true)]
		public static bool? int42eq(int? par3013, short? par3014)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42ge

		[Sql.Function(Name="pg_catalog.int42ge", ServerSideOnly=true)]
		public static bool? int42ge(int? par3016, short? par3017)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42gt

		[Sql.Function(Name="pg_catalog.int42gt", ServerSideOnly=true)]
		public static bool? int42gt(int? par3019, short? par3020)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42le

		[Sql.Function(Name="pg_catalog.int42le", ServerSideOnly=true)]
		public static bool? int42le(int? par3022, short? par3023)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42lt

		[Sql.Function(Name="pg_catalog.int42lt", ServerSideOnly=true)]
		public static bool? int42lt(int? par3025, short? par3026)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42mi

		[Sql.Function(Name="pg_catalog.int42mi", ServerSideOnly=true)]
		public static int? int42mi(int? par3028, short? par3029)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42mul

		[Sql.Function(Name="pg_catalog.int42mul", ServerSideOnly=true)]
		public static int? int42mul(int? par3031, short? par3032)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42ne

		[Sql.Function(Name="pg_catalog.int42ne", ServerSideOnly=true)]
		public static bool? int42ne(int? par3034, short? par3035)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int42pl

		[Sql.Function(Name="pg_catalog.int42pl", ServerSideOnly=true)]
		public static int? int42pl(int? par3037, short? par3038)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48div

		[Sql.Function(Name="pg_catalog.int48div", ServerSideOnly=true)]
		public static long? int48div(int? par3052, long? par3053)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48eq

		[Sql.Function(Name="pg_catalog.int48eq", ServerSideOnly=true)]
		public static bool? int48eq(int? par3055, long? par3056)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48ge

		[Sql.Function(Name="pg_catalog.int48ge", ServerSideOnly=true)]
		public static bool? int48ge(int? par3058, long? par3059)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48gt

		[Sql.Function(Name="pg_catalog.int48gt", ServerSideOnly=true)]
		public static bool? int48gt(int? par3061, long? par3062)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48le

		[Sql.Function(Name="pg_catalog.int48le", ServerSideOnly=true)]
		public static bool? int48le(int? par3064, long? par3065)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48lt

		[Sql.Function(Name="pg_catalog.int48lt", ServerSideOnly=true)]
		public static bool? int48lt(int? par3067, long? par3068)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48mi

		[Sql.Function(Name="pg_catalog.int48mi", ServerSideOnly=true)]
		public static long? int48mi(int? par3070, long? par3071)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48mul

		[Sql.Function(Name="pg_catalog.int48mul", ServerSideOnly=true)]
		public static long? int48mul(int? par3073, long? par3074)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48ne

		[Sql.Function(Name="pg_catalog.int48ne", ServerSideOnly=true)]
		public static bool? int48ne(int? par3076, long? par3077)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int48pl

		[Sql.Function(Name="pg_catalog.int48pl", ServerSideOnly=true)]
		public static long? int48pl(int? par3079, long? par3080)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4abs

		[Sql.Function(Name="pg_catalog.int4abs", ServerSideOnly=true)]
		public static int? int4abs(int? par3082)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4_accum

		[Sql.Function(Name="pg_catalog.int4_accum", ServerSideOnly=true)]
		public static object int4_accum(object par3084, int? par3085)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4_accum_inv

		[Sql.Function(Name="pg_catalog.int4_accum_inv", ServerSideOnly=true)]
		public static object int4_accum_inv(object par3087, int? par3088)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4and

		[Sql.Function(Name="pg_catalog.int4and", ServerSideOnly=true)]
		public static int? int4and(int? par3090, int? par3091)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4_avg_accum

		[Sql.Function(Name="pg_catalog.int4_avg_accum", ServerSideOnly=true)]
		public static object int4_avg_accum(object par3093, int? par3094)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4_avg_accum_inv

		[Sql.Function(Name="pg_catalog.int4_avg_accum_inv", ServerSideOnly=true)]
		public static object int4_avg_accum_inv(object par3096, int? par3097)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4_avg_combine

		[Sql.Function(Name="pg_catalog.int4_avg_combine", ServerSideOnly=true)]
		public static object int4_avg_combine(object par3099, object par3100)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4div

		[Sql.Function(Name="pg_catalog.int4div", ServerSideOnly=true)]
		public static int? int4div(int? par3102, int? par3103)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4eq

		[Sql.Function(Name="pg_catalog.int4eq", ServerSideOnly=true)]
		public static bool? int4eq(int? par3105, int? par3106)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4ge

		[Sql.Function(Name="pg_catalog.int4ge", ServerSideOnly=true)]
		public static bool? int4ge(int? par3108, int? par3109)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4gt

		[Sql.Function(Name="pg_catalog.int4gt", ServerSideOnly=true)]
		public static bool? int4gt(int? par3111, int? par3112)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4in

		[Sql.Function(Name="pg_catalog.int4in", ServerSideOnly=true)]
		public static int? int4in(object par3114)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4inc

		[Sql.Function(Name="pg_catalog.int4inc", ServerSideOnly=true)]
		public static int? int4inc(int? par3116)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4larger

		[Sql.Function(Name="pg_catalog.int4larger", ServerSideOnly=true)]
		public static int? int4larger(int? par3118, int? par3119)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4le

		[Sql.Function(Name="pg_catalog.int4le", ServerSideOnly=true)]
		public static bool? int4le(int? par3121, int? par3122)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4lt

		[Sql.Function(Name="pg_catalog.int4lt", ServerSideOnly=true)]
		public static bool? int4lt(int? par3124, int? par3125)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4mi

		[Sql.Function(Name="pg_catalog.int4mi", ServerSideOnly=true)]
		public static int? int4mi(int? par3127, int? par3128)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4mod

		[Sql.Function(Name="pg_catalog.int4mod", ServerSideOnly=true)]
		public static int? int4mod(int? par3130, int? par3131)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4mul

		[Sql.Function(Name="pg_catalog.int4mul", ServerSideOnly=true)]
		public static int? int4mul(int? par3133, int? par3134)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4_mul_cash

		[Sql.Function(Name="pg_catalog.int4_mul_cash", ServerSideOnly=true)]
		public static decimal? int4_mul_cash(int? par3136, decimal? par3137)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4ne

		[Sql.Function(Name="pg_catalog.int4ne", ServerSideOnly=true)]
		public static bool? int4ne(int? par3139, int? par3140)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4not

		[Sql.Function(Name="pg_catalog.int4not", ServerSideOnly=true)]
		public static int? int4not(int? par3142)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4or

		[Sql.Function(Name="pg_catalog.int4or", ServerSideOnly=true)]
		public static int? int4or(int? par3144, int? par3145)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4out

		[Sql.Function(Name="pg_catalog.int4out", ServerSideOnly=true)]
		public static object int4out(int? par3147)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4pl

		[Sql.Function(Name="pg_catalog.int4pl", ServerSideOnly=true)]
		public static int? int4pl(int? par3149, int? par3150)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4range

		[Sql.Function(Name="pg_catalog.int4range", ServerSideOnly=true)]
		public static object int4range(int? par3155, int? par3156, string par3157)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4range_canonical

		[Sql.Function(Name="pg_catalog.int4range_canonical", ServerSideOnly=true)]
		public static object int4range_canonical(object par3159)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4range_subdiff

		[Sql.Function(Name="pg_catalog.int4range_subdiff", ServerSideOnly=true)]
		public static double? int4range_subdiff(int? par3161, int? par3162)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4recv

		[Sql.Function(Name="pg_catalog.int4recv", ServerSideOnly=true)]
		public static int? int4recv(object par3164)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4send

		[Sql.Function(Name="pg_catalog.int4send", ServerSideOnly=true)]
		public static byte[] int4send(int? par3166)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4shl

		[Sql.Function(Name="pg_catalog.int4shl", ServerSideOnly=true)]
		public static int? int4shl(int? par3168, int? par3169)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4shr

		[Sql.Function(Name="pg_catalog.int4shr", ServerSideOnly=true)]
		public static int? int4shr(int? par3171, int? par3172)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4smaller

		[Sql.Function(Name="pg_catalog.int4smaller", ServerSideOnly=true)]
		public static int? int4smaller(int? par3174, int? par3175)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4_sum

		[Sql.Function(Name="pg_catalog.int4_sum", ServerSideOnly=true)]
		public static long? int4_sum(long? par3177, int? par3178)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4um

		[Sql.Function(Name="pg_catalog.int4um", ServerSideOnly=true)]
		public static int? int4um(int? par3180)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4up

		[Sql.Function(Name="pg_catalog.int4up", ServerSideOnly=true)]
		public static int? int4up(int? par3182)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int4xor

		[Sql.Function(Name="pg_catalog.int4xor", ServerSideOnly=true)]
		public static int? int4xor(int? par3184, int? par3185)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8

		[Sql.Function(Name="pg_catalog.int8", ServerSideOnly=true)]
		public static long? int8(short? par3261)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82div

		[Sql.Function(Name="pg_catalog.int82div", ServerSideOnly=true)]
		public static long? int82div(long? par3193, short? par3194)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82eq

		[Sql.Function(Name="pg_catalog.int82eq", ServerSideOnly=true)]
		public static bool? int82eq(long? par3196, short? par3197)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82ge

		[Sql.Function(Name="pg_catalog.int82ge", ServerSideOnly=true)]
		public static bool? int82ge(long? par3199, short? par3200)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82gt

		[Sql.Function(Name="pg_catalog.int82gt", ServerSideOnly=true)]
		public static bool? int82gt(long? par3202, short? par3203)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82le

		[Sql.Function(Name="pg_catalog.int82le", ServerSideOnly=true)]
		public static bool? int82le(long? par3205, short? par3206)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82lt

		[Sql.Function(Name="pg_catalog.int82lt", ServerSideOnly=true)]
		public static bool? int82lt(long? par3208, short? par3209)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82mi

		[Sql.Function(Name="pg_catalog.int82mi", ServerSideOnly=true)]
		public static long? int82mi(long? par3211, short? par3212)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82mul

		[Sql.Function(Name="pg_catalog.int82mul", ServerSideOnly=true)]
		public static long? int82mul(long? par3214, short? par3215)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82ne

		[Sql.Function(Name="pg_catalog.int82ne", ServerSideOnly=true)]
		public static bool? int82ne(long? par3217, short? par3218)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int82pl

		[Sql.Function(Name="pg_catalog.int82pl", ServerSideOnly=true)]
		public static long? int82pl(long? par3220, short? par3221)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84div

		[Sql.Function(Name="pg_catalog.int84div", ServerSideOnly=true)]
		public static long? int84div(long? par3229, int? par3230)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84eq

		[Sql.Function(Name="pg_catalog.int84eq", ServerSideOnly=true)]
		public static bool? int84eq(long? par3232, int? par3233)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84ge

		[Sql.Function(Name="pg_catalog.int84ge", ServerSideOnly=true)]
		public static bool? int84ge(long? par3235, int? par3236)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84gt

		[Sql.Function(Name="pg_catalog.int84gt", ServerSideOnly=true)]
		public static bool? int84gt(long? par3238, int? par3239)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84le

		[Sql.Function(Name="pg_catalog.int84le", ServerSideOnly=true)]
		public static bool? int84le(long? par3241, int? par3242)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84lt

		[Sql.Function(Name="pg_catalog.int84lt", ServerSideOnly=true)]
		public static bool? int84lt(long? par3244, int? par3245)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84mi

		[Sql.Function(Name="pg_catalog.int84mi", ServerSideOnly=true)]
		public static long? int84mi(long? par3247, int? par3248)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84mul

		[Sql.Function(Name="pg_catalog.int84mul", ServerSideOnly=true)]
		public static long? int84mul(long? par3250, int? par3251)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84ne

		[Sql.Function(Name="pg_catalog.int84ne", ServerSideOnly=true)]
		public static bool? int84ne(long? par3253, int? par3254)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int84pl

		[Sql.Function(Name="pg_catalog.int84pl", ServerSideOnly=true)]
		public static long? int84pl(long? par3256, int? par3257)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8abs

		[Sql.Function(Name="pg_catalog.int8abs", ServerSideOnly=true)]
		public static long? int8abs(long? par3263)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_accum

		[Sql.Function(Name="pg_catalog.int8_accum", ServerSideOnly=true)]
		public static object int8_accum(object par3265, long? par3266)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_accum_inv

		[Sql.Function(Name="pg_catalog.int8_accum_inv", ServerSideOnly=true)]
		public static object int8_accum_inv(object par3268, long? par3269)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8and

		[Sql.Function(Name="pg_catalog.int8and", ServerSideOnly=true)]
		public static long? int8and(long? par3271, long? par3272)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_avg

		[Sql.Function(Name="pg_catalog.int8_avg", ServerSideOnly=true)]
		public static decimal? int8_avg(object par3274)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_avg_accum

		[Sql.Function(Name="pg_catalog.int8_avg_accum", ServerSideOnly=true)]
		public static object int8_avg_accum(object par3276, long? par3277)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_avg_accum_inv

		[Sql.Function(Name="pg_catalog.int8_avg_accum_inv", ServerSideOnly=true)]
		public static object int8_avg_accum_inv(object par3279, long? par3280)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_avg_combine

		[Sql.Function(Name="pg_catalog.int8_avg_combine", ServerSideOnly=true)]
		public static object int8_avg_combine(object par3282, object par3283)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_avg_deserialize

		[Sql.Function(Name="pg_catalog.int8_avg_deserialize", ServerSideOnly=true)]
		public static object int8_avg_deserialize(byte[] par3285, object par3286)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_avg_serialize

		[Sql.Function(Name="pg_catalog.int8_avg_serialize", ServerSideOnly=true)]
		public static byte[] int8_avg_serialize(object par3288)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8dec

		[Sql.Function(Name="pg_catalog.int8dec", ServerSideOnly=true)]
		public static long? int8dec(long? par3290)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8dec_any

		[Sql.Function(Name="pg_catalog.int8dec_any", ServerSideOnly=true)]
		public static long? int8dec_any(long? par3292, object par3293)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8div

		[Sql.Function(Name="pg_catalog.int8div", ServerSideOnly=true)]
		public static long? int8div(long? par3295, long? par3296)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8eq

		[Sql.Function(Name="pg_catalog.int8eq", ServerSideOnly=true)]
		public static bool? int8eq(long? par3298, long? par3299)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8ge

		[Sql.Function(Name="pg_catalog.int8ge", ServerSideOnly=true)]
		public static bool? int8ge(long? par3301, long? par3302)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8gt

		[Sql.Function(Name="pg_catalog.int8gt", ServerSideOnly=true)]
		public static bool? int8gt(long? par3304, long? par3305)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8in

		[Sql.Function(Name="pg_catalog.int8in", ServerSideOnly=true)]
		public static long? int8in(object par3307)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8inc

		[Sql.Function(Name="pg_catalog.int8inc", ServerSideOnly=true)]
		public static long? int8inc(long? par3309)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8inc_any

		[Sql.Function(Name="pg_catalog.int8inc_any", ServerSideOnly=true)]
		public static long? int8inc_any(long? par3311, object par3312)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8inc_float8_float8

		[Sql.Function(Name="pg_catalog.int8inc_float8_float8", ServerSideOnly=true)]
		public static long? int8inc_float8_float8(long? par3314, double? par3315, double? par3316)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8larger

		[Sql.Function(Name="pg_catalog.int8larger", ServerSideOnly=true)]
		public static long? int8larger(long? par3318, long? par3319)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8le

		[Sql.Function(Name="pg_catalog.int8le", ServerSideOnly=true)]
		public static bool? int8le(long? par3321, long? par3322)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8lt

		[Sql.Function(Name="pg_catalog.int8lt", ServerSideOnly=true)]
		public static bool? int8lt(long? par3324, long? par3325)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8mi

		[Sql.Function(Name="pg_catalog.int8mi", ServerSideOnly=true)]
		public static long? int8mi(long? par3327, long? par3328)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8mod

		[Sql.Function(Name="pg_catalog.int8mod", ServerSideOnly=true)]
		public static long? int8mod(long? par3330, long? par3331)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8mul

		[Sql.Function(Name="pg_catalog.int8mul", ServerSideOnly=true)]
		public static long? int8mul(long? par3333, long? par3334)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_mul_cash

		[Sql.Function(Name="pg_catalog.int8_mul_cash", ServerSideOnly=true)]
		public static decimal? int8_mul_cash(long? par3336, decimal? par3337)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8ne

		[Sql.Function(Name="pg_catalog.int8ne", ServerSideOnly=true)]
		public static bool? int8ne(long? par3339, long? par3340)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8not

		[Sql.Function(Name="pg_catalog.int8not", ServerSideOnly=true)]
		public static long? int8not(long? par3342)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8or

		[Sql.Function(Name="pg_catalog.int8or", ServerSideOnly=true)]
		public static long? int8or(long? par3344, long? par3345)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8out

		[Sql.Function(Name="pg_catalog.int8out", ServerSideOnly=true)]
		public static object int8out(long? par3347)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8pl

		[Sql.Function(Name="pg_catalog.int8pl", ServerSideOnly=true)]
		public static long? int8pl(long? par3349, long? par3350)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8pl_inet

		[Sql.Function(Name="pg_catalog.int8pl_inet", ServerSideOnly=true)]
		public static NpgsqlInet? int8pl_inet(long? par3352, NpgsqlInet? par3353)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8range

		[Sql.Function(Name="pg_catalog.int8range", ServerSideOnly=true)]
		public static object int8range(long? par3358, long? par3359, string par3360)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8range_canonical

		[Sql.Function(Name="pg_catalog.int8range_canonical", ServerSideOnly=true)]
		public static object int8range_canonical(object par3362)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8range_subdiff

		[Sql.Function(Name="pg_catalog.int8range_subdiff", ServerSideOnly=true)]
		public static double? int8range_subdiff(long? par3364, long? par3365)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8recv

		[Sql.Function(Name="pg_catalog.int8recv", ServerSideOnly=true)]
		public static long? int8recv(object par3367)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8send

		[Sql.Function(Name="pg_catalog.int8send", ServerSideOnly=true)]
		public static byte[] int8send(long? par3369)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8shl

		[Sql.Function(Name="pg_catalog.int8shl", ServerSideOnly=true)]
		public static long? int8shl(long? par3371, int? par3372)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8shr

		[Sql.Function(Name="pg_catalog.int8shr", ServerSideOnly=true)]
		public static long? int8shr(long? par3374, int? par3375)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8smaller

		[Sql.Function(Name="pg_catalog.int8smaller", ServerSideOnly=true)]
		public static long? int8smaller(long? par3377, long? par3378)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8_sum

		[Sql.Function(Name="pg_catalog.int8_sum", ServerSideOnly=true)]
		public static decimal? int8_sum(decimal? par3380, long? par3381)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8um

		[Sql.Function(Name="pg_catalog.int8um", ServerSideOnly=true)]
		public static long? int8um(long? par3383)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8up

		[Sql.Function(Name="pg_catalog.int8up", ServerSideOnly=true)]
		public static long? int8up(long? par3385)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region int8xor

		[Sql.Function(Name="pg_catalog.int8xor", ServerSideOnly=true)]
		public static long? int8xor(long? par3387, long? par3388)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region integer_pl_date

		[Sql.Function(Name="pg_catalog.integer_pl_date", ServerSideOnly=true)]
		public static NpgsqlDate? integer_pl_date(int? par3390, NpgsqlDate? par3391)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inter_lb

		[Sql.Function(Name="pg_catalog.inter_lb", ServerSideOnly=true)]
		public static bool? inter_lb(NpgsqlLine? par3393, NpgsqlBox? par3394)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region internal_in

		[Sql.Function(Name="pg_catalog.internal_in", ServerSideOnly=true)]
		public static object internal_in(object par3396)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region internal_out

		[Sql.Function(Name="pg_catalog.internal_out", ServerSideOnly=true)]
		public static object internal_out(object par3398)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inter_sb

		[Sql.Function(Name="pg_catalog.inter_sb", ServerSideOnly=true)]
		public static bool? inter_sb(NpgsqlLSeg? par3400, NpgsqlBox? par3401)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region inter_sl

		[Sql.Function(Name="pg_catalog.inter_sl", ServerSideOnly=true)]
		public static bool? inter_sl(NpgsqlLSeg? par3403, NpgsqlLine? par3404)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval

		[Sql.Function(Name="pg_catalog.interval", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval(TimeSpan? par3411)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_accum

		[Sql.Function(Name="pg_catalog.interval_accum", ServerSideOnly=true)]
		public static object interval_accum(object par3413, NpgsqlTimeSpan? par3414)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_accum_inv

		[Sql.Function(Name="pg_catalog.interval_accum_inv", ServerSideOnly=true)]
		public static object interval_accum_inv(object par3416, NpgsqlTimeSpan? par3417)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_avg

		[Sql.Function(Name="pg_catalog.interval_avg", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_avg(object par3419)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_cmp

		[Sql.Function(Name="pg_catalog.interval_cmp", ServerSideOnly=true)]
		public static int? interval_cmp(NpgsqlTimeSpan? par3421, NpgsqlTimeSpan? par3422)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_combine

		[Sql.Function(Name="pg_catalog.interval_combine", ServerSideOnly=true)]
		public static object interval_combine(object par3424, object par3425)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_div

		[Sql.Function(Name="pg_catalog.interval_div", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_div(NpgsqlTimeSpan? par3427, double? par3428)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_eq

		[Sql.Function(Name="pg_catalog.interval_eq", ServerSideOnly=true)]
		public static bool? interval_eq(NpgsqlTimeSpan? par3430, NpgsqlTimeSpan? par3431)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_ge

		[Sql.Function(Name="pg_catalog.interval_ge", ServerSideOnly=true)]
		public static bool? interval_ge(NpgsqlTimeSpan? par3433, NpgsqlTimeSpan? par3434)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_gt

		[Sql.Function(Name="pg_catalog.interval_gt", ServerSideOnly=true)]
		public static bool? interval_gt(NpgsqlTimeSpan? par3436, NpgsqlTimeSpan? par3437)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_hash

		[Sql.Function(Name="pg_catalog.interval_hash", ServerSideOnly=true)]
		public static int? interval_hash(NpgsqlTimeSpan? par3439)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_hash_extended

		[Sql.Function(Name="pg_catalog.interval_hash_extended", ServerSideOnly=true)]
		public static long? interval_hash_extended(NpgsqlTimeSpan? par3441, long? par3442)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_in

		[Sql.Function(Name="pg_catalog.interval_in", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_in(object par3444, int? par3445, int? par3446)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_larger

		[Sql.Function(Name="pg_catalog.interval_larger", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_larger(NpgsqlTimeSpan? par3448, NpgsqlTimeSpan? par3449)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_le

		[Sql.Function(Name="pg_catalog.interval_le", ServerSideOnly=true)]
		public static bool? interval_le(NpgsqlTimeSpan? par3451, NpgsqlTimeSpan? par3452)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_lt

		[Sql.Function(Name="pg_catalog.interval_lt", ServerSideOnly=true)]
		public static bool? interval_lt(NpgsqlTimeSpan? par3454, NpgsqlTimeSpan? par3455)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_mi

		[Sql.Function(Name="pg_catalog.interval_mi", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_mi(NpgsqlTimeSpan? par3457, NpgsqlTimeSpan? par3458)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_mul

		[Sql.Function(Name="pg_catalog.interval_mul", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_mul(NpgsqlTimeSpan? par3460, double? par3461)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_ne

		[Sql.Function(Name="pg_catalog.interval_ne", ServerSideOnly=true)]
		public static bool? interval_ne(NpgsqlTimeSpan? par3463, NpgsqlTimeSpan? par3464)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_out

		[Sql.Function(Name="pg_catalog.interval_out", ServerSideOnly=true)]
		public static object interval_out(NpgsqlTimeSpan? par3466)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_pl

		[Sql.Function(Name="pg_catalog.interval_pl", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_pl(NpgsqlTimeSpan? par3468, NpgsqlTimeSpan? par3469)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_pl_date

		[Sql.Function(Name="pg_catalog.interval_pl_date", ServerSideOnly=true)]
		public static DateTime? interval_pl_date(NpgsqlTimeSpan? par3471, NpgsqlDate? par3472)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_pl_time

		[Sql.Function(Name="pg_catalog.interval_pl_time", ServerSideOnly=true)]
		public static TimeSpan? interval_pl_time(NpgsqlTimeSpan? par3474, TimeSpan? par3475)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_pl_timestamp

		[Sql.Function(Name="pg_catalog.interval_pl_timestamp", ServerSideOnly=true)]
		public static DateTime? interval_pl_timestamp(NpgsqlTimeSpan? par3477, DateTime? par3478)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_pl_timestamptz

		[Sql.Function(Name="pg_catalog.interval_pl_timestamptz", ServerSideOnly=true)]
		public static DateTimeOffset? interval_pl_timestamptz(NpgsqlTimeSpan? par3480, DateTimeOffset? par3481)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_pl_timetz

		[Sql.Function(Name="pg_catalog.interval_pl_timetz", ServerSideOnly=true)]
		public static DateTimeOffset? interval_pl_timetz(NpgsqlTimeSpan? par3483, DateTimeOffset? par3484)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_recv

		[Sql.Function(Name="pg_catalog.interval_recv", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_recv(object par3486, int? par3487, int? par3488)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_send

		[Sql.Function(Name="pg_catalog.interval_send", ServerSideOnly=true)]
		public static byte[] interval_send(NpgsqlTimeSpan? par3490)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_smaller

		[Sql.Function(Name="pg_catalog.interval_smaller", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_smaller(NpgsqlTimeSpan? par3492, NpgsqlTimeSpan? par3493)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_transform

		[Sql.Function(Name="pg_catalog.interval_transform", ServerSideOnly=true)]
		public static object interval_transform(object par3495)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region intervaltypmodin

		[Sql.Function(Name="pg_catalog.intervaltypmodin", ServerSideOnly=true)]
		public static int? intervaltypmodin(object par3497)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region intervaltypmodout

		[Sql.Function(Name="pg_catalog.intervaltypmodout", ServerSideOnly=true)]
		public static object intervaltypmodout(int? par3499)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region interval_um

		[Sql.Function(Name="pg_catalog.interval_um", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? interval_um(NpgsqlTimeSpan? par3501)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region intinterval

		[Sql.Function(Name="pg_catalog.intinterval", ServerSideOnly=true)]
		public static bool? intinterval(object par3503, object par3504)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region isclosed

		[Sql.Function(Name="pg_catalog.isclosed", ServerSideOnly=true)]
		public static bool? isclosed(NpgsqlPath? par3506)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region isempty

		[Sql.Function(Name="pg_catalog.isempty", ServerSideOnly=true)]
		public static bool? isempty(object par3508)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region isfinite

		[Sql.Function(Name="pg_catalog.isfinite", ServerSideOnly=true)]
		public static bool? isfinite(object par3518)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ishorizontal

		[Sql.Function(Name="pg_catalog.ishorizontal", ServerSideOnly=true)]
		public static bool? ishorizontal(NpgsqlLine? par3525)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iso8859_1_to_utf8

		[Sql.Function(Name="pg_catalog.iso8859_1_to_utf8", ServerSideOnly=true)]
		public static object iso8859_1_to_utf8(int? par3526, int? par3527, object par3528, object par3529, int? par3530)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iso8859_to_utf8

		[Sql.Function(Name="pg_catalog.iso8859_to_utf8", ServerSideOnly=true)]
		public static object iso8859_to_utf8(int? par3531, int? par3532, object par3533, object par3534, int? par3535)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region isopen

		[Sql.Function(Name="pg_catalog.isopen", ServerSideOnly=true)]
		public static bool? isopen(NpgsqlPath? par3537)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iso_to_koi8r

		[Sql.Function(Name="pg_catalog.iso_to_koi8r", ServerSideOnly=true)]
		public static object iso_to_koi8r(int? par3538, int? par3539, object par3540, object par3541, int? par3542)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iso_to_mic

		[Sql.Function(Name="pg_catalog.iso_to_mic", ServerSideOnly=true)]
		public static object iso_to_mic(int? par3543, int? par3544, object par3545, object par3546, int? par3547)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iso_to_win1251

		[Sql.Function(Name="pg_catalog.iso_to_win1251", ServerSideOnly=true)]
		public static object iso_to_win1251(int? par3548, int? par3549, object par3550, object par3551, int? par3552)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region iso_to_win866

		[Sql.Function(Name="pg_catalog.iso_to_win866", ServerSideOnly=true)]
		public static object iso_to_win866(int? par3553, int? par3554, object par3555, object par3556, int? par3557)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region isparallel

		[Sql.Function(Name="pg_catalog.isparallel", ServerSideOnly=true)]
		public static bool? isparallel(NpgsqlLine? par3562, NpgsqlLine? par3563)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region isperp

		[Sql.Function(Name="pg_catalog.isperp", ServerSideOnly=true)]
		public static bool? isperp(NpgsqlLine? par3568, NpgsqlLine? par3569)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region isvertical

		[Sql.Function(Name="pg_catalog.isvertical", ServerSideOnly=true)]
		public static bool? isvertical(NpgsqlLine? par3576)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region johab_to_utf8

		[Sql.Function(Name="pg_catalog.johab_to_utf8", ServerSideOnly=true)]
		public static object johab_to_utf8(int? par3577, int? par3578, object par3579, object par3580, int? par3581)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_agg

		[Sql.Function(Name="pg_catalog.json_agg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static string json_agg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par3583)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_agg_finalfn

		[Sql.Function(Name="pg_catalog.json_agg_finalfn", ServerSideOnly=true)]
		public static string json_agg_finalfn(object par3585)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_agg_transfn

		[Sql.Function(Name="pg_catalog.json_agg_transfn", ServerSideOnly=true)]
		public static object json_agg_transfn(object par3587, object par3588)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_array_element

		[Sql.Function(Name="pg_catalog.json_array_element", ServerSideOnly=true)]
		public static string json_array_element(string from_json, int? element_index)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_array_element_text

		[Sql.Function(Name="pg_catalog.json_array_element_text", ServerSideOnly=true)]
		public static string json_array_element_text(string from_json, int? element_index)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_array_length

		[Sql.Function(Name="pg_catalog.json_array_length", ServerSideOnly=true)]
		public static int? json_array_length(string par3592)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_agg

		[Sql.Function(Name="pg_catalog.jsonb_agg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static string jsonb_agg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par3594)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_agg_finalfn

		[Sql.Function(Name="pg_catalog.jsonb_agg_finalfn", ServerSideOnly=true)]
		public static string jsonb_agg_finalfn(object par3596)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_agg_transfn

		[Sql.Function(Name="pg_catalog.jsonb_agg_transfn", ServerSideOnly=true)]
		public static object jsonb_agg_transfn(object par3598, object par3599)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_array_element

		[Sql.Function(Name="pg_catalog.jsonb_array_element", ServerSideOnly=true)]
		public static string jsonb_array_element(string from_json, int? element_index)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_array_element_text

		[Sql.Function(Name="pg_catalog.jsonb_array_element_text", ServerSideOnly=true)]
		public static string jsonb_array_element_text(string from_json, int? element_index)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_array_length

		[Sql.Function(Name="pg_catalog.jsonb_array_length", ServerSideOnly=true)]
		public static int? jsonb_array_length(string par3603)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_build_array

		[Sql.Function(Name="pg_catalog.jsonb_build_array", ServerSideOnly=true)]
		public static string jsonb_build_array()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_build_object

		[Sql.Function(Name="pg_catalog.jsonb_build_object", ServerSideOnly=true)]
		public static string jsonb_build_object()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_cmp

		[Sql.Function(Name="pg_catalog.jsonb_cmp", ServerSideOnly=true)]
		public static int? jsonb_cmp(string par3611, string par3612)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_concat

		[Sql.Function(Name="pg_catalog.jsonb_concat", ServerSideOnly=true)]
		public static string jsonb_concat(string par3614, string par3615)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_contained

		[Sql.Function(Name="pg_catalog.jsonb_contained", ServerSideOnly=true)]
		public static bool? jsonb_contained(string par3617, string par3618)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_contains

		[Sql.Function(Name="pg_catalog.jsonb_contains", ServerSideOnly=true)]
		public static bool? jsonb_contains(string par3620, string par3621)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_delete

		[Sql.Function(Name="pg_catalog.jsonb_delete", ServerSideOnly=true)]
		public static string jsonb_delete(string from_json, object path_elems)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_delete_path

		[Sql.Function(Name="pg_catalog.jsonb_delete_path", ServerSideOnly=true)]
		public static string jsonb_delete_path(string par3630, object par3631)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_eq

		[Sql.Function(Name="pg_catalog.jsonb_eq", ServerSideOnly=true)]
		public static bool? jsonb_eq(string par3633, string par3634)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_exists

		[Sql.Function(Name="pg_catalog.jsonb_exists", ServerSideOnly=true)]
		public static bool? jsonb_exists(string par3636, string par3637)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_exists_all

		[Sql.Function(Name="pg_catalog.jsonb_exists_all", ServerSideOnly=true)]
		public static bool? jsonb_exists_all(string par3639, object par3640)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_exists_any

		[Sql.Function(Name="pg_catalog.jsonb_exists_any", ServerSideOnly=true)]
		public static bool? jsonb_exists_any(string par3642, object par3643)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_extract_path

		[Sql.Function(Name="pg_catalog.jsonb_extract_path", ServerSideOnly=true)]
		public static string jsonb_extract_path(string from_json, object path_elems)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_extract_path_text

		[Sql.Function(Name="pg_catalog.jsonb_extract_path_text", ServerSideOnly=true)]
		public static string jsonb_extract_path_text(string from_json, object path_elems)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_ge

		[Sql.Function(Name="pg_catalog.jsonb_ge", ServerSideOnly=true)]
		public static bool? jsonb_ge(string par3647, string par3648)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_gt

		[Sql.Function(Name="pg_catalog.jsonb_gt", ServerSideOnly=true)]
		public static bool? jsonb_gt(string par3650, string par3651)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_hash

		[Sql.Function(Name="pg_catalog.jsonb_hash", ServerSideOnly=true)]
		public static int? jsonb_hash(string par3653)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_hash_extended

		[Sql.Function(Name="pg_catalog.jsonb_hash_extended", ServerSideOnly=true)]
		public static long? jsonb_hash_extended(string par3655, long? par3656)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_in

		[Sql.Function(Name="pg_catalog.jsonb_in", ServerSideOnly=true)]
		public static string jsonb_in(object par3658)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_insert

		[Sql.Function(Name="pg_catalog.jsonb_insert", ServerSideOnly=true)]
		public static string jsonb_insert(string jsonb_in, object path, string replacement, bool? insert_after)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_le

		[Sql.Function(Name="pg_catalog.jsonb_le", ServerSideOnly=true)]
		public static bool? jsonb_le(string par3661, string par3662)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_lt

		[Sql.Function(Name="pg_catalog.jsonb_lt", ServerSideOnly=true)]
		public static bool? jsonb_lt(string par3664, string par3665)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_ne

		[Sql.Function(Name="pg_catalog.jsonb_ne", ServerSideOnly=true)]
		public static bool? jsonb_ne(string par3667, string par3668)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_object

		[Sql.Function(Name="pg_catalog.jsonb_object", ServerSideOnly=true)]
		public static string jsonb_object(object par3672, object par3673)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_object_agg

		[Sql.Function(Name="pg_catalog.jsonb_object_agg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static string jsonb_object_agg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par3675, Expression<Func<TSource, object>> par3676)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_object_agg_finalfn

		[Sql.Function(Name="pg_catalog.jsonb_object_agg_finalfn", ServerSideOnly=true)]
		public static string jsonb_object_agg_finalfn(object par3678)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_object_agg_transfn

		[Sql.Function(Name="pg_catalog.jsonb_object_agg_transfn", ServerSideOnly=true)]
		public static object jsonb_object_agg_transfn(object par3680, object par3681, object par3682)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_object_field

		[Sql.Function(Name="pg_catalog.jsonb_object_field", ServerSideOnly=true)]
		public static string jsonb_object_field(string from_json, string field_name)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_object_field_text

		[Sql.Function(Name="pg_catalog.jsonb_object_field_text", ServerSideOnly=true)]
		public static string jsonb_object_field_text(string from_json, string field_name)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_out

		[Sql.Function(Name="pg_catalog.jsonb_out", ServerSideOnly=true)]
		public static object jsonb_out(string par3687)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_populate_record

		[Sql.Function(Name="pg_catalog.jsonb_populate_record", ServerSideOnly=true)]
		public static object jsonb_populate_record(object par3689, string par3690)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_pretty

		[Sql.Function(Name="pg_catalog.jsonb_pretty", ServerSideOnly=true)]
		public static string jsonb_pretty(string par3694)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_recv

		[Sql.Function(Name="pg_catalog.jsonb_recv", ServerSideOnly=true)]
		public static string jsonb_recv(object par3696)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_send

		[Sql.Function(Name="pg_catalog.jsonb_send", ServerSideOnly=true)]
		public static byte[] jsonb_send(string par3698)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_set

		[Sql.Function(Name="pg_catalog.jsonb_set", ServerSideOnly=true)]
		public static string jsonb_set(string jsonb_in, object path, string replacement, bool? create_if_missing)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_strip_nulls

		[Sql.Function(Name="pg_catalog.jsonb_strip_nulls", ServerSideOnly=true)]
		public static string jsonb_strip_nulls(string par3701)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_to_record

		[Sql.Function(Name="pg_catalog.jsonb_to_record", ServerSideOnly=true)]
		public static object jsonb_to_record(string par3702)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_to_tsvector

		[Sql.Function(Name="pg_catalog.jsonb_to_tsvector", ServerSideOnly=true)]
		public static object jsonb_to_tsvector(object par3708, string par3709, string par3710)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region jsonb_typeof

		[Sql.Function(Name="pg_catalog.jsonb_typeof", ServerSideOnly=true)]
		public static string jsonb_typeof(string par3712)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_build_array

		[Sql.Function(Name="pg_catalog.json_build_array", ServerSideOnly=true)]
		public static string json_build_array()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_build_object

		[Sql.Function(Name="pg_catalog.json_build_object", ServerSideOnly=true)]
		public static string json_build_object()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_extract_path

		[Sql.Function(Name="pg_catalog.json_extract_path", ServerSideOnly=true)]
		public static string json_extract_path(string from_json, object path_elems)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_extract_path_text

		[Sql.Function(Name="pg_catalog.json_extract_path_text", ServerSideOnly=true)]
		public static string json_extract_path_text(string from_json, object path_elems)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_in

		[Sql.Function(Name="pg_catalog.json_in", ServerSideOnly=true)]
		public static string json_in(object par3722)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_object

		[Sql.Function(Name="pg_catalog.json_object", ServerSideOnly=true)]
		public static string json_object(object par3726, object par3727)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_object_agg

		[Sql.Function(Name="pg_catalog.json_object_agg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static string json_object_agg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par3729, Expression<Func<TSource, object>> par3730)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_object_agg_finalfn

		[Sql.Function(Name="pg_catalog.json_object_agg_finalfn", ServerSideOnly=true)]
		public static string json_object_agg_finalfn(object par3732)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_object_agg_transfn

		[Sql.Function(Name="pg_catalog.json_object_agg_transfn", ServerSideOnly=true)]
		public static object json_object_agg_transfn(object par3734, object par3735, object par3736)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_object_field

		[Sql.Function(Name="pg_catalog.json_object_field", ServerSideOnly=true)]
		public static string json_object_field(string from_json, string field_name)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_object_field_text

		[Sql.Function(Name="pg_catalog.json_object_field_text", ServerSideOnly=true)]
		public static string json_object_field_text(string from_json, string field_name)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_out

		[Sql.Function(Name="pg_catalog.json_out", ServerSideOnly=true)]
		public static object json_out(string par3741)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_populate_record

		[Sql.Function(Name="pg_catalog.json_populate_record", ServerSideOnly=true)]
		public static object json_populate_record(object @base, string from_json, bool? use_json_as_text)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_recv

		[Sql.Function(Name="pg_catalog.json_recv", ServerSideOnly=true)]
		public static string json_recv(object par3744)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_send

		[Sql.Function(Name="pg_catalog.json_send", ServerSideOnly=true)]
		public static byte[] json_send(string par3746)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_strip_nulls

		[Sql.Function(Name="pg_catalog.json_strip_nulls", ServerSideOnly=true)]
		public static string json_strip_nulls(string par3748)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_to_record

		[Sql.Function(Name="pg_catalog.json_to_record", ServerSideOnly=true)]
		public static object json_to_record(string par3749)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_to_tsvector

		[Sql.Function(Name="pg_catalog.json_to_tsvector", ServerSideOnly=true)]
		public static object json_to_tsvector(object par3755, string par3756, string par3757)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region json_typeof

		[Sql.Function(Name="pg_catalog.json_typeof", ServerSideOnly=true)]
		public static string json_typeof(string par3759)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region justify_days

		[Sql.Function(Name="pg_catalog.justify_days", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? justify_days(NpgsqlTimeSpan? par3761)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region justify_hours

		[Sql.Function(Name="pg_catalog.justify_hours", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? justify_hours(NpgsqlTimeSpan? par3763)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region justify_interval

		[Sql.Function(Name="pg_catalog.justify_interval", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? justify_interval(NpgsqlTimeSpan? par3765)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region koi8r_to_iso

		[Sql.Function(Name="pg_catalog.koi8r_to_iso", ServerSideOnly=true)]
		public static object koi8r_to_iso(int? par3766, int? par3767, object par3768, object par3769, int? par3770)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region koi8r_to_mic

		[Sql.Function(Name="pg_catalog.koi8r_to_mic", ServerSideOnly=true)]
		public static object koi8r_to_mic(int? par3771, int? par3772, object par3773, object par3774, int? par3775)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region koi8r_to_utf8

		[Sql.Function(Name="pg_catalog.koi8r_to_utf8", ServerSideOnly=true)]
		public static object koi8r_to_utf8(int? par3776, int? par3777, object par3778, object par3779, int? par3780)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region koi8r_to_win1251

		[Sql.Function(Name="pg_catalog.koi8r_to_win1251", ServerSideOnly=true)]
		public static object koi8r_to_win1251(int? par3781, int? par3782, object par3783, object par3784, int? par3785)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region koi8r_to_win866

		[Sql.Function(Name="pg_catalog.koi8r_to_win866", ServerSideOnly=true)]
		public static object koi8r_to_win866(int? par3786, int? par3787, object par3788, object par3789, int? par3790)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region koi8u_to_utf8

		[Sql.Function(Name="pg_catalog.koi8u_to_utf8", ServerSideOnly=true)]
		public static object koi8u_to_utf8(int? par3791, int? par3792, object par3793, object par3794, int? par3795)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lag

		[Sql.Function(Name="pg_catalog.lag", ServerSideOnly=true)]
		public static object lag(object par3802, int? par3803, object par3804)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region language_handler_in

		[Sql.Function(Name="pg_catalog.language_handler_in", ServerSideOnly=true)]
		public static object language_handler_in(object par3806)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region language_handler_out

		[Sql.Function(Name="pg_catalog.language_handler_out", ServerSideOnly=true)]
		public static object language_handler_out(object par3808)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lastval

		[Sql.Function(Name="pg_catalog.lastval", ServerSideOnly=true)]
		public static long? lastval()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region last_value

		[Sql.Function(Name="pg_catalog.last_value", ServerSideOnly=true)]
		public static object last_value(object par3811)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region latin1_to_mic

		[Sql.Function(Name="pg_catalog.latin1_to_mic", ServerSideOnly=true)]
		public static object latin1_to_mic(int? par3812, int? par3813, object par3814, object par3815, int? par3816)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region latin2_to_mic

		[Sql.Function(Name="pg_catalog.latin2_to_mic", ServerSideOnly=true)]
		public static object latin2_to_mic(int? par3817, int? par3818, object par3819, object par3820, int? par3821)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region latin2_to_win1250

		[Sql.Function(Name="pg_catalog.latin2_to_win1250", ServerSideOnly=true)]
		public static object latin2_to_win1250(int? par3822, int? par3823, object par3824, object par3825, int? par3826)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region latin3_to_mic

		[Sql.Function(Name="pg_catalog.latin3_to_mic", ServerSideOnly=true)]
		public static object latin3_to_mic(int? par3827, int? par3828, object par3829, object par3830, int? par3831)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region latin4_to_mic

		[Sql.Function(Name="pg_catalog.latin4_to_mic", ServerSideOnly=true)]
		public static object latin4_to_mic(int? par3832, int? par3833, object par3834, object par3835, int? par3836)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lead

		[Sql.Function(Name="pg_catalog.lead", ServerSideOnly=true)]
		public static object lead(object par3843, int? par3844, object par3845)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region left

		[Sql.Function(Name="pg_catalog.left", ServerSideOnly=true)]
		public static string left(string par3847, int? par3848)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region length

		[Sql.Function(Name="pg_catalog.length", ServerSideOnly=true)]
		public static int? length(object par3865)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region like

		[Sql.Function(Name="pg_catalog.like", ServerSideOnly=true)]
		public static bool? like(byte[] par3873, byte[] par3874)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region like_escape

		[Sql.Function(Name="pg_catalog.like_escape", ServerSideOnly=true)]
		public static byte[] like_escape(byte[] par3879, byte[] par3880)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region likejoinsel

		[Sql.Function(Name="pg_catalog.likejoinsel", ServerSideOnly=true)]
		public static double? likejoinsel(object par3882, int? par3883, object par3884, short? par3885, object par3886)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region likesel

		[Sql.Function(Name="pg_catalog.likesel", ServerSideOnly=true)]
		public static double? likesel(object par3888, int? par3889, object par3890, int? par3891)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line

		[Sql.Function(Name="pg_catalog.line", ServerSideOnly=true)]
		public static NpgsqlLine? line(NpgsqlPoint? par3893, NpgsqlPoint? par3894)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_distance

		[Sql.Function(Name="pg_catalog.line_distance", ServerSideOnly=true)]
		public static double? line_distance(NpgsqlLine? par3896, NpgsqlLine? par3897)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_eq

		[Sql.Function(Name="pg_catalog.line_eq", ServerSideOnly=true)]
		public static bool? line_eq(NpgsqlLine? par3899, NpgsqlLine? par3900)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_horizontal

		[Sql.Function(Name="pg_catalog.line_horizontal", ServerSideOnly=true)]
		public static bool? line_horizontal(NpgsqlLine? par3902)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_in

		[Sql.Function(Name="pg_catalog.line_in", ServerSideOnly=true)]
		public static NpgsqlLine? line_in(object par3904)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_interpt

		[Sql.Function(Name="pg_catalog.line_interpt", ServerSideOnly=true)]
		public static NpgsqlPoint? line_interpt(NpgsqlLine? par3906, NpgsqlLine? par3907)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_intersect

		[Sql.Function(Name="pg_catalog.line_intersect", ServerSideOnly=true)]
		public static bool? line_intersect(NpgsqlLine? par3909, NpgsqlLine? par3910)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_out

		[Sql.Function(Name="pg_catalog.line_out", ServerSideOnly=true)]
		public static object line_out(NpgsqlLine? par3912)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_parallel

		[Sql.Function(Name="pg_catalog.line_parallel", ServerSideOnly=true)]
		public static bool? line_parallel(NpgsqlLine? par3914, NpgsqlLine? par3915)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_perp

		[Sql.Function(Name="pg_catalog.line_perp", ServerSideOnly=true)]
		public static bool? line_perp(NpgsqlLine? par3917, NpgsqlLine? par3918)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_recv

		[Sql.Function(Name="pg_catalog.line_recv", ServerSideOnly=true)]
		public static NpgsqlLine? line_recv(object par3920)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_send

		[Sql.Function(Name="pg_catalog.line_send", ServerSideOnly=true)]
		public static byte[] line_send(NpgsqlLine? par3922)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region line_vertical

		[Sql.Function(Name="pg_catalog.line_vertical", ServerSideOnly=true)]
		public static bool? line_vertical(NpgsqlLine? par3924)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ln

		[Sql.Function(Name="pg_catalog.ln", ServerSideOnly=true)]
		public static decimal? ln(decimal? par3928)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_close

		[Sql.Function(Name="pg_catalog.lo_close", ServerSideOnly=true)]
		public static int? lo_close(int? par3930)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_creat

		[Sql.Function(Name="pg_catalog.lo_creat", ServerSideOnly=true)]
		public static int? lo_creat(int? par3932)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_create

		[Sql.Function(Name="pg_catalog.lo_create", ServerSideOnly=true)]
		public static int? lo_create(int? par3934)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_export

		[Sql.Function(Name="pg_catalog.lo_export", ServerSideOnly=true)]
		public static int? lo_export(int? par3936, string par3937)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_from_bytea

		[Sql.Function(Name="pg_catalog.lo_from_bytea", ServerSideOnly=true)]
		public static int? lo_from_bytea(int? par3939, byte[] par3940)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region log

		[Sql.Function(Name="pg_catalog.log", ServerSideOnly=true)]
		public static decimal? log(decimal? par3947)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_get

		[Sql.Function(Name="pg_catalog.lo_get", ServerSideOnly=true)]
		public static byte[] lo_get(int? par3951, long? par3952, int? par3953)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_import

		[Sql.Function(Name="pg_catalog.lo_import", ServerSideOnly=true)]
		public static int? lo_import(string par3957, int? par3958)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_lseek64

		[Sql.Function(Name="pg_catalog.lo_lseek64", ServerSideOnly=true)]
		public static long? lo_lseek64(int? par3960, long? par3961, int? par3962)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_lseek

		[Sql.Function(Name="pg_catalog.lo_lseek", ServerSideOnly=true)]
		public static int? lo_lseek(int? par3964, int? par3965, int? par3966)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_open

		[Sql.Function(Name="pg_catalog.lo_open", ServerSideOnly=true)]
		public static int? lo_open(int? par3968, int? par3969)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_put

		[Sql.Function(Name="pg_catalog.lo_put", ServerSideOnly=true)]
		public static object lo_put(int? par3970, long? par3971, byte[] par3972)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region loread

		[Sql.Function(Name="pg_catalog.loread", ServerSideOnly=true)]
		public static byte[] loread(int? par3974, int? par3975)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_tell64

		[Sql.Function(Name="pg_catalog.lo_tell64", ServerSideOnly=true)]
		public static long? lo_tell64(int? par3977)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_tell

		[Sql.Function(Name="pg_catalog.lo_tell", ServerSideOnly=true)]
		public static int? lo_tell(int? par3979)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_truncate

		[Sql.Function(Name="pg_catalog.lo_truncate", ServerSideOnly=true)]
		public static int? lo_truncate(int? par3981, int? par3982)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_truncate64

		[Sql.Function(Name="pg_catalog.lo_truncate64", ServerSideOnly=true)]
		public static int? lo_truncate64(int? par3984, long? par3985)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lo_unlink

		[Sql.Function(Name="pg_catalog.lo_unlink", ServerSideOnly=true)]
		public static int? lo_unlink(int? par3987)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lower

		[Sql.Function(Name="pg_catalog.lower", ServerSideOnly=true)]
		public static string lower(string par3991)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lower_inc

		[Sql.Function(Name="pg_catalog.lower_inc", ServerSideOnly=true)]
		public static bool? lower_inc(object par3993)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lower_inf

		[Sql.Function(Name="pg_catalog.lower_inf", ServerSideOnly=true)]
		public static bool? lower_inf(object par3995)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lowrite

		[Sql.Function(Name="pg_catalog.lowrite", ServerSideOnly=true)]
		public static int? lowrite(int? par3997, byte[] par3998)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lpad

		[Sql.Function(Name="pg_catalog.lpad", ServerSideOnly=true)]
		public static string lpad(string par4004, int? par4005)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg

		[Sql.Function(Name="pg_catalog.lseg", ServerSideOnly=true)]
		public static NpgsqlLSeg? lseg(NpgsqlPoint? par4009, NpgsqlPoint? par4010)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_center

		[Sql.Function(Name="pg_catalog.lseg_center", ServerSideOnly=true)]
		public static NpgsqlPoint? lseg_center(NpgsqlLSeg? par4012)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_distance

		[Sql.Function(Name="pg_catalog.lseg_distance", ServerSideOnly=true)]
		public static double? lseg_distance(NpgsqlLSeg? par4014, NpgsqlLSeg? par4015)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_eq

		[Sql.Function(Name="pg_catalog.lseg_eq", ServerSideOnly=true)]
		public static bool? lseg_eq(NpgsqlLSeg? par4017, NpgsqlLSeg? par4018)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_ge

		[Sql.Function(Name="pg_catalog.lseg_ge", ServerSideOnly=true)]
		public static bool? lseg_ge(NpgsqlLSeg? par4020, NpgsqlLSeg? par4021)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_gt

		[Sql.Function(Name="pg_catalog.lseg_gt", ServerSideOnly=true)]
		public static bool? lseg_gt(NpgsqlLSeg? par4023, NpgsqlLSeg? par4024)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_horizontal

		[Sql.Function(Name="pg_catalog.lseg_horizontal", ServerSideOnly=true)]
		public static bool? lseg_horizontal(NpgsqlLSeg? par4026)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_in

		[Sql.Function(Name="pg_catalog.lseg_in", ServerSideOnly=true)]
		public static NpgsqlLSeg? lseg_in(object par4028)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_interpt

		[Sql.Function(Name="pg_catalog.lseg_interpt", ServerSideOnly=true)]
		public static NpgsqlPoint? lseg_interpt(NpgsqlLSeg? par4030, NpgsqlLSeg? par4031)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_intersect

		[Sql.Function(Name="pg_catalog.lseg_intersect", ServerSideOnly=true)]
		public static bool? lseg_intersect(NpgsqlLSeg? par4033, NpgsqlLSeg? par4034)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_le

		[Sql.Function(Name="pg_catalog.lseg_le", ServerSideOnly=true)]
		public static bool? lseg_le(NpgsqlLSeg? par4036, NpgsqlLSeg? par4037)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_length

		[Sql.Function(Name="pg_catalog.lseg_length", ServerSideOnly=true)]
		public static double? lseg_length(NpgsqlLSeg? par4039)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_lt

		[Sql.Function(Name="pg_catalog.lseg_lt", ServerSideOnly=true)]
		public static bool? lseg_lt(NpgsqlLSeg? par4041, NpgsqlLSeg? par4042)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_ne

		[Sql.Function(Name="pg_catalog.lseg_ne", ServerSideOnly=true)]
		public static bool? lseg_ne(NpgsqlLSeg? par4044, NpgsqlLSeg? par4045)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_out

		[Sql.Function(Name="pg_catalog.lseg_out", ServerSideOnly=true)]
		public static object lseg_out(NpgsqlLSeg? par4047)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_parallel

		[Sql.Function(Name="pg_catalog.lseg_parallel", ServerSideOnly=true)]
		public static bool? lseg_parallel(NpgsqlLSeg? par4049, NpgsqlLSeg? par4050)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_perp

		[Sql.Function(Name="pg_catalog.lseg_perp", ServerSideOnly=true)]
		public static bool? lseg_perp(NpgsqlLSeg? par4052, NpgsqlLSeg? par4053)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_recv

		[Sql.Function(Name="pg_catalog.lseg_recv", ServerSideOnly=true)]
		public static NpgsqlLSeg? lseg_recv(object par4055)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_send

		[Sql.Function(Name="pg_catalog.lseg_send", ServerSideOnly=true)]
		public static byte[] lseg_send(NpgsqlLSeg? par4057)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region lseg_vertical

		[Sql.Function(Name="pg_catalog.lseg_vertical", ServerSideOnly=true)]
		public static bool? lseg_vertical(NpgsqlLSeg? par4059)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ltrim

		[Sql.Function(Name="pg_catalog.ltrim", ServerSideOnly=true)]
		public static string ltrim(string par4064)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr

		[Sql.Function(Name="pg_catalog.macaddr", ServerSideOnly=true)]
		public static PhysicalAddress macaddr(PhysicalAddress par4066)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8

		[Sql.Function(Name="pg_catalog.macaddr8", ServerSideOnly=true)]
		public static PhysicalAddress macaddr8(PhysicalAddress par4068)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_and

		[Sql.Function(Name="pg_catalog.macaddr8_and", ServerSideOnly=true)]
		public static PhysicalAddress macaddr8_and(PhysicalAddress par4070, PhysicalAddress par4071)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_cmp

		[Sql.Function(Name="pg_catalog.macaddr8_cmp", ServerSideOnly=true)]
		public static int? macaddr8_cmp(PhysicalAddress par4073, PhysicalAddress par4074)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_eq

		[Sql.Function(Name="pg_catalog.macaddr8_eq", ServerSideOnly=true)]
		public static bool? macaddr8_eq(PhysicalAddress par4076, PhysicalAddress par4077)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_ge

		[Sql.Function(Name="pg_catalog.macaddr8_ge", ServerSideOnly=true)]
		public static bool? macaddr8_ge(PhysicalAddress par4079, PhysicalAddress par4080)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_gt

		[Sql.Function(Name="pg_catalog.macaddr8_gt", ServerSideOnly=true)]
		public static bool? macaddr8_gt(PhysicalAddress par4082, PhysicalAddress par4083)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_in

		[Sql.Function(Name="pg_catalog.macaddr8_in", ServerSideOnly=true)]
		public static PhysicalAddress macaddr8_in(object par4085)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_le

		[Sql.Function(Name="pg_catalog.macaddr8_le", ServerSideOnly=true)]
		public static bool? macaddr8_le(PhysicalAddress par4087, PhysicalAddress par4088)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_lt

		[Sql.Function(Name="pg_catalog.macaddr8_lt", ServerSideOnly=true)]
		public static bool? macaddr8_lt(PhysicalAddress par4090, PhysicalAddress par4091)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_ne

		[Sql.Function(Name="pg_catalog.macaddr8_ne", ServerSideOnly=true)]
		public static bool? macaddr8_ne(PhysicalAddress par4093, PhysicalAddress par4094)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_not

		[Sql.Function(Name="pg_catalog.macaddr8_not", ServerSideOnly=true)]
		public static PhysicalAddress macaddr8_not(PhysicalAddress par4096)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_or

		[Sql.Function(Name="pg_catalog.macaddr8_or", ServerSideOnly=true)]
		public static PhysicalAddress macaddr8_or(PhysicalAddress par4098, PhysicalAddress par4099)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_out

		[Sql.Function(Name="pg_catalog.macaddr8_out", ServerSideOnly=true)]
		public static object macaddr8_out(PhysicalAddress par4101)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_recv

		[Sql.Function(Name="pg_catalog.macaddr8_recv", ServerSideOnly=true)]
		public static PhysicalAddress macaddr8_recv(object par4103)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_send

		[Sql.Function(Name="pg_catalog.macaddr8_send", ServerSideOnly=true)]
		public static byte[] macaddr8_send(PhysicalAddress par4105)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr8_set7bit

		[Sql.Function(Name="pg_catalog.macaddr8_set7bit", ServerSideOnly=true)]
		public static PhysicalAddress macaddr8_set7bit(PhysicalAddress par4107)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_and

		[Sql.Function(Name="pg_catalog.macaddr_and", ServerSideOnly=true)]
		public static PhysicalAddress macaddr_and(PhysicalAddress par4109, PhysicalAddress par4110)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_cmp

		[Sql.Function(Name="pg_catalog.macaddr_cmp", ServerSideOnly=true)]
		public static int? macaddr_cmp(PhysicalAddress par4112, PhysicalAddress par4113)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_eq

		[Sql.Function(Name="pg_catalog.macaddr_eq", ServerSideOnly=true)]
		public static bool? macaddr_eq(PhysicalAddress par4115, PhysicalAddress par4116)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_ge

		[Sql.Function(Name="pg_catalog.macaddr_ge", ServerSideOnly=true)]
		public static bool? macaddr_ge(PhysicalAddress par4118, PhysicalAddress par4119)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_gt

		[Sql.Function(Name="pg_catalog.macaddr_gt", ServerSideOnly=true)]
		public static bool? macaddr_gt(PhysicalAddress par4121, PhysicalAddress par4122)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_in

		[Sql.Function(Name="pg_catalog.macaddr_in", ServerSideOnly=true)]
		public static PhysicalAddress macaddr_in(object par4124)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_le

		[Sql.Function(Name="pg_catalog.macaddr_le", ServerSideOnly=true)]
		public static bool? macaddr_le(PhysicalAddress par4126, PhysicalAddress par4127)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_lt

		[Sql.Function(Name="pg_catalog.macaddr_lt", ServerSideOnly=true)]
		public static bool? macaddr_lt(PhysicalAddress par4129, PhysicalAddress par4130)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_ne

		[Sql.Function(Name="pg_catalog.macaddr_ne", ServerSideOnly=true)]
		public static bool? macaddr_ne(PhysicalAddress par4132, PhysicalAddress par4133)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_not

		[Sql.Function(Name="pg_catalog.macaddr_not", ServerSideOnly=true)]
		public static PhysicalAddress macaddr_not(PhysicalAddress par4135)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_or

		[Sql.Function(Name="pg_catalog.macaddr_or", ServerSideOnly=true)]
		public static PhysicalAddress macaddr_or(PhysicalAddress par4137, PhysicalAddress par4138)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_out

		[Sql.Function(Name="pg_catalog.macaddr_out", ServerSideOnly=true)]
		public static object macaddr_out(PhysicalAddress par4140)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_recv

		[Sql.Function(Name="pg_catalog.macaddr_recv", ServerSideOnly=true)]
		public static PhysicalAddress macaddr_recv(object par4142)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_send

		[Sql.Function(Name="pg_catalog.macaddr_send", ServerSideOnly=true)]
		public static byte[] macaddr_send(PhysicalAddress par4144)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region macaddr_sortsupport

		[Sql.Function(Name="pg_catalog.macaddr_sortsupport", ServerSideOnly=true)]
		public static object macaddr_sortsupport(object par4145)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region makeaclitem

		[Sql.Function(Name="pg_catalog.makeaclitem", ServerSideOnly=true)]
		public static object makeaclitem(int? par4147, int? par4148, string par4149, bool? par4150)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region make_date

		[Sql.Function(Name="pg_catalog.make_date", ServerSideOnly=true)]
		public static NpgsqlDate? make_date(int? year, int? month, int? day)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region make_interval

		[Sql.Function(Name="pg_catalog.make_interval", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? make_interval(int? years, int? months, int? weeks, int? days, int? hours, int? mins, double? secs)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region make_time

		[Sql.Function(Name="pg_catalog.make_time", ServerSideOnly=true)]
		public static TimeSpan? make_time(int? hour, int? min, double? sec)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region make_timestamp

		[Sql.Function(Name="pg_catalog.make_timestamp", ServerSideOnly=true)]
		public static DateTime? make_timestamp(int? year, int? month, int? mday, int? hour, int? min, double? sec)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region make_timestamptz

		[Sql.Function(Name="pg_catalog.make_timestamptz", ServerSideOnly=true)]
		public static DateTimeOffset? make_timestamptz(int? year, int? month, int? mday, int? hour, int? min, double? sec, string timezone)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region masklen

		[Sql.Function(Name="pg_catalog.masklen", ServerSideOnly=true)]
		public static int? masklen(NpgsqlInet? par4158)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region max

		[Sql.Function(Name="pg_catalog.max", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static NpgsqlInet? max<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, NpgsqlInet?>> par4200)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region md5

		[Sql.Function(Name="pg_catalog.md5", ServerSideOnly=true)]
		public static string md5(byte[] par4204)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_ascii

		[Sql.Function(Name="pg_catalog.mic_to_ascii", ServerSideOnly=true)]
		public static object mic_to_ascii(int? par4205, int? par4206, object par4207, object par4208, int? par4209)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_big5

		[Sql.Function(Name="pg_catalog.mic_to_big5", ServerSideOnly=true)]
		public static object mic_to_big5(int? par4210, int? par4211, object par4212, object par4213, int? par4214)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_euc_cn

		[Sql.Function(Name="pg_catalog.mic_to_euc_cn", ServerSideOnly=true)]
		public static object mic_to_euc_cn(int? par4215, int? par4216, object par4217, object par4218, int? par4219)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_euc_jp

		[Sql.Function(Name="pg_catalog.mic_to_euc_jp", ServerSideOnly=true)]
		public static object mic_to_euc_jp(int? par4220, int? par4221, object par4222, object par4223, int? par4224)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_euc_kr

		[Sql.Function(Name="pg_catalog.mic_to_euc_kr", ServerSideOnly=true)]
		public static object mic_to_euc_kr(int? par4225, int? par4226, object par4227, object par4228, int? par4229)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_euc_tw

		[Sql.Function(Name="pg_catalog.mic_to_euc_tw", ServerSideOnly=true)]
		public static object mic_to_euc_tw(int? par4230, int? par4231, object par4232, object par4233, int? par4234)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_iso

		[Sql.Function(Name="pg_catalog.mic_to_iso", ServerSideOnly=true)]
		public static object mic_to_iso(int? par4235, int? par4236, object par4237, object par4238, int? par4239)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_koi8r

		[Sql.Function(Name="pg_catalog.mic_to_koi8r", ServerSideOnly=true)]
		public static object mic_to_koi8r(int? par4240, int? par4241, object par4242, object par4243, int? par4244)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_latin1

		[Sql.Function(Name="pg_catalog.mic_to_latin1", ServerSideOnly=true)]
		public static object mic_to_latin1(int? par4245, int? par4246, object par4247, object par4248, int? par4249)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_latin2

		[Sql.Function(Name="pg_catalog.mic_to_latin2", ServerSideOnly=true)]
		public static object mic_to_latin2(int? par4250, int? par4251, object par4252, object par4253, int? par4254)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_latin3

		[Sql.Function(Name="pg_catalog.mic_to_latin3", ServerSideOnly=true)]
		public static object mic_to_latin3(int? par4255, int? par4256, object par4257, object par4258, int? par4259)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_latin4

		[Sql.Function(Name="pg_catalog.mic_to_latin4", ServerSideOnly=true)]
		public static object mic_to_latin4(int? par4260, int? par4261, object par4262, object par4263, int? par4264)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_sjis

		[Sql.Function(Name="pg_catalog.mic_to_sjis", ServerSideOnly=true)]
		public static object mic_to_sjis(int? par4265, int? par4266, object par4267, object par4268, int? par4269)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_win1250

		[Sql.Function(Name="pg_catalog.mic_to_win1250", ServerSideOnly=true)]
		public static object mic_to_win1250(int? par4270, int? par4271, object par4272, object par4273, int? par4274)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_win1251

		[Sql.Function(Name="pg_catalog.mic_to_win1251", ServerSideOnly=true)]
		public static object mic_to_win1251(int? par4275, int? par4276, object par4277, object par4278, int? par4279)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mic_to_win866

		[Sql.Function(Name="pg_catalog.mic_to_win866", ServerSideOnly=true)]
		public static object mic_to_win866(int? par4280, int? par4281, object par4282, object par4283, int? par4284)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region min

		[Sql.Function(Name="pg_catalog.min", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static NpgsqlInet? min<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, NpgsqlInet?>> par4326)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mktinterval

		[Sql.Function(Name="pg_catalog.mktinterval", ServerSideOnly=true)]
		public static object mktinterval(object par4328, object par4329)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mod

		[Sql.Function(Name="pg_catalog.mod", ServerSideOnly=true)]
		public static long? mod(long? par4340, long? par4341)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mode

		[Sql.Function(Name="pg_catalog.mode", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static object mode<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par4343)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mode_final

		[Sql.Function(Name="pg_catalog.mode_final", ServerSideOnly=true)]
		public static object mode_final(object par4345, object par4346)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region money

		[Sql.Function(Name="pg_catalog.money", ServerSideOnly=true)]
		public static decimal? money(decimal? par4352)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mul_d_interval

		[Sql.Function(Name="pg_catalog.mul_d_interval", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? mul_d_interval(double? par4354, NpgsqlTimeSpan? par4355)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region mxid_age

		[Sql.Function(Name="pg_catalog.mxid_age", ServerSideOnly=true)]
		public static int? mxid_age(int? par4357)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region name

		[Sql.Function(Name="pg_catalog.name", ServerSideOnly=true)]
		public static string name(string par4363)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameeq

		[Sql.Function(Name="pg_catalog.nameeq", ServerSideOnly=true)]
		public static bool? nameeq(string par4365, string par4366)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namege

		[Sql.Function(Name="pg_catalog.namege", ServerSideOnly=true)]
		public static bool? namege(string par4368, string par4369)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namegt

		[Sql.Function(Name="pg_catalog.namegt", ServerSideOnly=true)]
		public static bool? namegt(string par4371, string par4372)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameiclike

		[Sql.Function(Name="pg_catalog.nameiclike", ServerSideOnly=true)]
		public static bool? nameiclike(string par4374, string par4375)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameicnlike

		[Sql.Function(Name="pg_catalog.nameicnlike", ServerSideOnly=true)]
		public static bool? nameicnlike(string par4377, string par4378)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameicregexeq

		[Sql.Function(Name="pg_catalog.nameicregexeq", ServerSideOnly=true)]
		public static bool? nameicregexeq(string par4380, string par4381)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameicregexne

		[Sql.Function(Name="pg_catalog.nameicregexne", ServerSideOnly=true)]
		public static bool? nameicregexne(string par4383, string par4384)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namein

		[Sql.Function(Name="pg_catalog.namein", ServerSideOnly=true)]
		public static string namein(object par4386)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namele

		[Sql.Function(Name="pg_catalog.namele", ServerSideOnly=true)]
		public static bool? namele(string par4388, string par4389)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namelike

		[Sql.Function(Name="pg_catalog.namelike", ServerSideOnly=true)]
		public static bool? namelike(string par4391, string par4392)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namelt

		[Sql.Function(Name="pg_catalog.namelt", ServerSideOnly=true)]
		public static bool? namelt(string par4394, string par4395)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namene

		[Sql.Function(Name="pg_catalog.namene", ServerSideOnly=true)]
		public static bool? namene(string par4397, string par4398)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namenlike

		[Sql.Function(Name="pg_catalog.namenlike", ServerSideOnly=true)]
		public static bool? namenlike(string par4400, string par4401)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameout

		[Sql.Function(Name="pg_catalog.nameout", ServerSideOnly=true)]
		public static object nameout(string par4403)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namerecv

		[Sql.Function(Name="pg_catalog.namerecv", ServerSideOnly=true)]
		public static string namerecv(object par4405)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameregexeq

		[Sql.Function(Name="pg_catalog.nameregexeq", ServerSideOnly=true)]
		public static bool? nameregexeq(string par4407, string par4408)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nameregexne

		[Sql.Function(Name="pg_catalog.nameregexne", ServerSideOnly=true)]
		public static bool? nameregexne(string par4410, string par4411)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region namesend

		[Sql.Function(Name="pg_catalog.namesend", ServerSideOnly=true)]
		public static byte[] namesend(string par4413)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region neqjoinsel

		[Sql.Function(Name="pg_catalog.neqjoinsel", ServerSideOnly=true)]
		public static double? neqjoinsel(object par4415, int? par4416, object par4417, short? par4418, object par4419)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region neqsel

		[Sql.Function(Name="pg_catalog.neqsel", ServerSideOnly=true)]
		public static double? neqsel(object par4421, int? par4422, object par4423, int? par4424)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region netmask

		[Sql.Function(Name="pg_catalog.netmask", ServerSideOnly=true)]
		public static NpgsqlInet? netmask(NpgsqlInet? par4426)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network

		[Sql.Function(Name="pg_catalog.network", ServerSideOnly=true)]
		public static NpgsqlInet? network(NpgsqlInet? par4428)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_cmp

		[Sql.Function(Name="pg_catalog.network_cmp", ServerSideOnly=true)]
		public static int? network_cmp(NpgsqlInet? par4430, NpgsqlInet? par4431)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_eq

		[Sql.Function(Name="pg_catalog.network_eq", ServerSideOnly=true)]
		public static bool? network_eq(NpgsqlInet? par4433, NpgsqlInet? par4434)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_ge

		[Sql.Function(Name="pg_catalog.network_ge", ServerSideOnly=true)]
		public static bool? network_ge(NpgsqlInet? par4436, NpgsqlInet? par4437)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_gt

		[Sql.Function(Name="pg_catalog.network_gt", ServerSideOnly=true)]
		public static bool? network_gt(NpgsqlInet? par4439, NpgsqlInet? par4440)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region networkjoinsel

		[Sql.Function(Name="pg_catalog.networkjoinsel", ServerSideOnly=true)]
		public static double? networkjoinsel(object par4442, int? par4443, object par4444, short? par4445, object par4446)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_larger

		[Sql.Function(Name="pg_catalog.network_larger", ServerSideOnly=true)]
		public static NpgsqlInet? network_larger(NpgsqlInet? par4448, NpgsqlInet? par4449)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_le

		[Sql.Function(Name="pg_catalog.network_le", ServerSideOnly=true)]
		public static bool? network_le(NpgsqlInet? par4451, NpgsqlInet? par4452)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_lt

		[Sql.Function(Name="pg_catalog.network_lt", ServerSideOnly=true)]
		public static bool? network_lt(NpgsqlInet? par4454, NpgsqlInet? par4455)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_ne

		[Sql.Function(Name="pg_catalog.network_ne", ServerSideOnly=true)]
		public static bool? network_ne(NpgsqlInet? par4457, NpgsqlInet? par4458)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_overlap

		[Sql.Function(Name="pg_catalog.network_overlap", ServerSideOnly=true)]
		public static bool? network_overlap(NpgsqlInet? par4460, NpgsqlInet? par4461)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region networksel

		[Sql.Function(Name="pg_catalog.networksel", ServerSideOnly=true)]
		public static double? networksel(object par4463, int? par4464, object par4465, int? par4466)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_smaller

		[Sql.Function(Name="pg_catalog.network_smaller", ServerSideOnly=true)]
		public static NpgsqlInet? network_smaller(NpgsqlInet? par4468, NpgsqlInet? par4469)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_sub

		[Sql.Function(Name="pg_catalog.network_sub", ServerSideOnly=true)]
		public static bool? network_sub(NpgsqlInet? par4471, NpgsqlInet? par4472)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_subeq

		[Sql.Function(Name="pg_catalog.network_subeq", ServerSideOnly=true)]
		public static bool? network_subeq(NpgsqlInet? par4474, NpgsqlInet? par4475)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_sup

		[Sql.Function(Name="pg_catalog.network_sup", ServerSideOnly=true)]
		public static bool? network_sup(NpgsqlInet? par4477, NpgsqlInet? par4478)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region network_supeq

		[Sql.Function(Name="pg_catalog.network_supeq", ServerSideOnly=true)]
		public static bool? network_supeq(NpgsqlInet? par4480, NpgsqlInet? par4481)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nextval

		[Sql.Function(Name="pg_catalog.nextval", ServerSideOnly=true)]
		public static long? nextval(object par4483)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nlikejoinsel

		[Sql.Function(Name="pg_catalog.nlikejoinsel", ServerSideOnly=true)]
		public static double? nlikejoinsel(object par4485, int? par4486, object par4487, short? par4488, object par4489)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nlikesel

		[Sql.Function(Name="pg_catalog.nlikesel", ServerSideOnly=true)]
		public static double? nlikesel(object par4491, int? par4492, object par4493, int? par4494)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region notlike

		[Sql.Function(Name="pg_catalog.notlike", ServerSideOnly=true)]
		public static bool? notlike(byte[] par4502, byte[] par4503)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region now

		[Sql.Function(Name="pg_catalog.now", ServerSideOnly=true)]
		public static DateTimeOffset? now()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region npoints

		[Sql.Function(Name="pg_catalog.npoints", ServerSideOnly=true)]
		public static int? npoints(NpgsqlPolygon? par4508)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region nth_value

		[Sql.Function(Name="pg_catalog.nth_value", ServerSideOnly=true)]
		public static object nth_value(object par4510, int? par4511)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ntile

		[Sql.Function(Name="pg_catalog.ntile", ServerSideOnly=true)]
		public static int? ntile(int? par4513)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric

		[Sql.Function(Name="pg_catalog.numeric", ServerSideOnly=true)]
		public static decimal? numeric(decimal? par4530)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_abs

		[Sql.Function(Name="pg_catalog.numeric_abs", ServerSideOnly=true)]
		public static decimal? numeric_abs(decimal? par4532)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_accum

		[Sql.Function(Name="pg_catalog.numeric_accum", ServerSideOnly=true)]
		public static object numeric_accum(object par4534, decimal? par4535)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_accum_inv

		[Sql.Function(Name="pg_catalog.numeric_accum_inv", ServerSideOnly=true)]
		public static object numeric_accum_inv(object par4537, decimal? par4538)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_add

		[Sql.Function(Name="pg_catalog.numeric_add", ServerSideOnly=true)]
		public static decimal? numeric_add(decimal? par4540, decimal? par4541)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_avg

		[Sql.Function(Name="pg_catalog.numeric_avg", ServerSideOnly=true)]
		public static decimal? numeric_avg(object par4543)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_avg_accum

		[Sql.Function(Name="pg_catalog.numeric_avg_accum", ServerSideOnly=true)]
		public static object numeric_avg_accum(object par4545, decimal? par4546)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_avg_combine

		[Sql.Function(Name="pg_catalog.numeric_avg_combine", ServerSideOnly=true)]
		public static object numeric_avg_combine(object par4548, object par4549)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_avg_deserialize

		[Sql.Function(Name="pg_catalog.numeric_avg_deserialize", ServerSideOnly=true)]
		public static object numeric_avg_deserialize(byte[] par4551, object par4552)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_avg_serialize

		[Sql.Function(Name="pg_catalog.numeric_avg_serialize", ServerSideOnly=true)]
		public static byte[] numeric_avg_serialize(object par4554)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_cmp

		[Sql.Function(Name="pg_catalog.numeric_cmp", ServerSideOnly=true)]
		public static int? numeric_cmp(decimal? par4556, decimal? par4557)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_combine

		[Sql.Function(Name="pg_catalog.numeric_combine", ServerSideOnly=true)]
		public static object numeric_combine(object par4559, object par4560)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_deserialize

		[Sql.Function(Name="pg_catalog.numeric_deserialize", ServerSideOnly=true)]
		public static object numeric_deserialize(byte[] par4562, object par4563)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_div

		[Sql.Function(Name="pg_catalog.numeric_div", ServerSideOnly=true)]
		public static decimal? numeric_div(decimal? par4565, decimal? par4566)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_div_trunc

		[Sql.Function(Name="pg_catalog.numeric_div_trunc", ServerSideOnly=true)]
		public static decimal? numeric_div_trunc(decimal? par4568, decimal? par4569)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_eq

		[Sql.Function(Name="pg_catalog.numeric_eq", ServerSideOnly=true)]
		public static bool? numeric_eq(decimal? par4571, decimal? par4572)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_exp

		[Sql.Function(Name="pg_catalog.numeric_exp", ServerSideOnly=true)]
		public static decimal? numeric_exp(decimal? par4574)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_fac

		[Sql.Function(Name="pg_catalog.numeric_fac", ServerSideOnly=true)]
		public static decimal? numeric_fac(long? par4576)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_ge

		[Sql.Function(Name="pg_catalog.numeric_ge", ServerSideOnly=true)]
		public static bool? numeric_ge(decimal? par4578, decimal? par4579)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_gt

		[Sql.Function(Name="pg_catalog.numeric_gt", ServerSideOnly=true)]
		public static bool? numeric_gt(decimal? par4581, decimal? par4582)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_in

		[Sql.Function(Name="pg_catalog.numeric_in", ServerSideOnly=true)]
		public static decimal? numeric_in(object par4584, int? par4585, int? par4586)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_inc

		[Sql.Function(Name="pg_catalog.numeric_inc", ServerSideOnly=true)]
		public static decimal? numeric_inc(decimal? par4588)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_larger

		[Sql.Function(Name="pg_catalog.numeric_larger", ServerSideOnly=true)]
		public static decimal? numeric_larger(decimal? par4590, decimal? par4591)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_le

		[Sql.Function(Name="pg_catalog.numeric_le", ServerSideOnly=true)]
		public static bool? numeric_le(decimal? par4593, decimal? par4594)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_ln

		[Sql.Function(Name="pg_catalog.numeric_ln", ServerSideOnly=true)]
		public static decimal? numeric_ln(decimal? par4596)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_log

		[Sql.Function(Name="pg_catalog.numeric_log", ServerSideOnly=true)]
		public static decimal? numeric_log(decimal? par4598, decimal? par4599)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_lt

		[Sql.Function(Name="pg_catalog.numeric_lt", ServerSideOnly=true)]
		public static bool? numeric_lt(decimal? par4601, decimal? par4602)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_mod

		[Sql.Function(Name="pg_catalog.numeric_mod", ServerSideOnly=true)]
		public static decimal? numeric_mod(decimal? par4604, decimal? par4605)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_mul

		[Sql.Function(Name="pg_catalog.numeric_mul", ServerSideOnly=true)]
		public static decimal? numeric_mul(decimal? par4607, decimal? par4608)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_ne

		[Sql.Function(Name="pg_catalog.numeric_ne", ServerSideOnly=true)]
		public static bool? numeric_ne(decimal? par4610, decimal? par4611)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_out

		[Sql.Function(Name="pg_catalog.numeric_out", ServerSideOnly=true)]
		public static object numeric_out(decimal? par4613)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_avg

		[Sql.Function(Name="pg_catalog.numeric_poly_avg", ServerSideOnly=true)]
		public static decimal? numeric_poly_avg(object par4615)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_combine

		[Sql.Function(Name="pg_catalog.numeric_poly_combine", ServerSideOnly=true)]
		public static object numeric_poly_combine(object par4617, object par4618)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_deserialize

		[Sql.Function(Name="pg_catalog.numeric_poly_deserialize", ServerSideOnly=true)]
		public static object numeric_poly_deserialize(byte[] par4620, object par4621)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_serialize

		[Sql.Function(Name="pg_catalog.numeric_poly_serialize", ServerSideOnly=true)]
		public static byte[] numeric_poly_serialize(object par4623)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_stddev_pop

		[Sql.Function(Name="pg_catalog.numeric_poly_stddev_pop", ServerSideOnly=true)]
		public static decimal? numeric_poly_stddev_pop(object par4625)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_stddev_samp

		[Sql.Function(Name="pg_catalog.numeric_poly_stddev_samp", ServerSideOnly=true)]
		public static decimal? numeric_poly_stddev_samp(object par4627)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_sum

		[Sql.Function(Name="pg_catalog.numeric_poly_sum", ServerSideOnly=true)]
		public static decimal? numeric_poly_sum(object par4629)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_var_pop

		[Sql.Function(Name="pg_catalog.numeric_poly_var_pop", ServerSideOnly=true)]
		public static decimal? numeric_poly_var_pop(object par4631)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_poly_var_samp

		[Sql.Function(Name="pg_catalog.numeric_poly_var_samp", ServerSideOnly=true)]
		public static decimal? numeric_poly_var_samp(object par4633)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_power

		[Sql.Function(Name="pg_catalog.numeric_power", ServerSideOnly=true)]
		public static decimal? numeric_power(decimal? par4635, decimal? par4636)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_recv

		[Sql.Function(Name="pg_catalog.numeric_recv", ServerSideOnly=true)]
		public static decimal? numeric_recv(object par4638, int? par4639, int? par4640)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_send

		[Sql.Function(Name="pg_catalog.numeric_send", ServerSideOnly=true)]
		public static byte[] numeric_send(decimal? par4642)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_serialize

		[Sql.Function(Name="pg_catalog.numeric_serialize", ServerSideOnly=true)]
		public static byte[] numeric_serialize(object par4644)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_smaller

		[Sql.Function(Name="pg_catalog.numeric_smaller", ServerSideOnly=true)]
		public static decimal? numeric_smaller(decimal? par4646, decimal? par4647)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_sortsupport

		[Sql.Function(Name="pg_catalog.numeric_sortsupport", ServerSideOnly=true)]
		public static object numeric_sortsupport(object par4648)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_sqrt

		[Sql.Function(Name="pg_catalog.numeric_sqrt", ServerSideOnly=true)]
		public static decimal? numeric_sqrt(decimal? par4650)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_stddev_pop

		[Sql.Function(Name="pg_catalog.numeric_stddev_pop", ServerSideOnly=true)]
		public static decimal? numeric_stddev_pop(object par4652)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_stddev_samp

		[Sql.Function(Name="pg_catalog.numeric_stddev_samp", ServerSideOnly=true)]
		public static decimal? numeric_stddev_samp(object par4654)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_sub

		[Sql.Function(Name="pg_catalog.numeric_sub", ServerSideOnly=true)]
		public static decimal? numeric_sub(decimal? par4656, decimal? par4657)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_sum

		[Sql.Function(Name="pg_catalog.numeric_sum", ServerSideOnly=true)]
		public static decimal? numeric_sum(object par4659)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_transform

		[Sql.Function(Name="pg_catalog.numeric_transform", ServerSideOnly=true)]
		public static object numeric_transform(object par4661)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numerictypmodin

		[Sql.Function(Name="pg_catalog.numerictypmodin", ServerSideOnly=true)]
		public static int? numerictypmodin(object par4663)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numerictypmodout

		[Sql.Function(Name="pg_catalog.numerictypmodout", ServerSideOnly=true)]
		public static object numerictypmodout(int? par4665)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_uminus

		[Sql.Function(Name="pg_catalog.numeric_uminus", ServerSideOnly=true)]
		public static decimal? numeric_uminus(decimal? par4667)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_uplus

		[Sql.Function(Name="pg_catalog.numeric_uplus", ServerSideOnly=true)]
		public static decimal? numeric_uplus(decimal? par4669)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_var_pop

		[Sql.Function(Name="pg_catalog.numeric_var_pop", ServerSideOnly=true)]
		public static decimal? numeric_var_pop(object par4671)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numeric_var_samp

		[Sql.Function(Name="pg_catalog.numeric_var_samp", ServerSideOnly=true)]
		public static decimal? numeric_var_samp(object par4673)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numnode

		[Sql.Function(Name="pg_catalog.numnode", ServerSideOnly=true)]
		public static int? numnode(object par4675)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region num_nonnulls

		[Sql.Function(Name="pg_catalog.num_nonnulls", ServerSideOnly=true)]
		public static int? num_nonnulls(object par4677)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region num_nulls

		[Sql.Function(Name="pg_catalog.num_nulls", ServerSideOnly=true)]
		public static int? num_nulls(object par4679)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numrange

		[Sql.Function(Name="pg_catalog.numrange", ServerSideOnly=true)]
		public static object numrange(decimal? par4684, decimal? par4685, string par4686)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region numrange_subdiff

		[Sql.Function(Name="pg_catalog.numrange_subdiff", ServerSideOnly=true)]
		public static double? numrange_subdiff(decimal? par4688, decimal? par4689)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region obj_description

		[Sql.Function(Name="pg_catalog.obj_description", ServerSideOnly=true)]
		public static string obj_description(int? par4694)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region octet_length

		[Sql.Function(Name="pg_catalog.octet_length", ServerSideOnly=true)]
		public static int? octet_length(byte[] par4702)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oid

		[Sql.Function(Name="pg_catalog.oid", ServerSideOnly=true)]
		public static int? oid(long? par4704)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oideq

		[Sql.Function(Name="pg_catalog.oideq", ServerSideOnly=true)]
		public static bool? oideq(int? par4706, int? par4707)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidge

		[Sql.Function(Name="pg_catalog.oidge", ServerSideOnly=true)]
		public static bool? oidge(int? par4709, int? par4710)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidgt

		[Sql.Function(Name="pg_catalog.oidgt", ServerSideOnly=true)]
		public static bool? oidgt(int? par4712, int? par4713)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidin

		[Sql.Function(Name="pg_catalog.oidin", ServerSideOnly=true)]
		public static int? oidin(object par4715)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidlarger

		[Sql.Function(Name="pg_catalog.oidlarger", ServerSideOnly=true)]
		public static int? oidlarger(int? par4717, int? par4718)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidle

		[Sql.Function(Name="pg_catalog.oidle", ServerSideOnly=true)]
		public static bool? oidle(int? par4720, int? par4721)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidlt

		[Sql.Function(Name="pg_catalog.oidlt", ServerSideOnly=true)]
		public static bool? oidlt(int? par4723, int? par4724)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidne

		[Sql.Function(Name="pg_catalog.oidne", ServerSideOnly=true)]
		public static bool? oidne(int? par4726, int? par4727)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidout

		[Sql.Function(Name="pg_catalog.oidout", ServerSideOnly=true)]
		public static object oidout(int? par4729)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidrecv

		[Sql.Function(Name="pg_catalog.oidrecv", ServerSideOnly=true)]
		public static int? oidrecv(object par4731)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidsend

		[Sql.Function(Name="pg_catalog.oidsend", ServerSideOnly=true)]
		public static byte[] oidsend(int? par4733)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidsmaller

		[Sql.Function(Name="pg_catalog.oidsmaller", ServerSideOnly=true)]
		public static int? oidsmaller(int? par4735, int? par4736)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectoreq

		[Sql.Function(Name="pg_catalog.oidvectoreq", ServerSideOnly=true)]
		public static bool? oidvectoreq(object par4738, object par4739)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorge

		[Sql.Function(Name="pg_catalog.oidvectorge", ServerSideOnly=true)]
		public static bool? oidvectorge(object par4741, object par4742)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorgt

		[Sql.Function(Name="pg_catalog.oidvectorgt", ServerSideOnly=true)]
		public static bool? oidvectorgt(object par4744, object par4745)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorin

		[Sql.Function(Name="pg_catalog.oidvectorin", ServerSideOnly=true)]
		public static object oidvectorin(object par4747)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorle

		[Sql.Function(Name="pg_catalog.oidvectorle", ServerSideOnly=true)]
		public static bool? oidvectorle(object par4749, object par4750)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorlt

		[Sql.Function(Name="pg_catalog.oidvectorlt", ServerSideOnly=true)]
		public static bool? oidvectorlt(object par4752, object par4753)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorne

		[Sql.Function(Name="pg_catalog.oidvectorne", ServerSideOnly=true)]
		public static bool? oidvectorne(object par4755, object par4756)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorout

		[Sql.Function(Name="pg_catalog.oidvectorout", ServerSideOnly=true)]
		public static object oidvectorout(object par4758)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorrecv

		[Sql.Function(Name="pg_catalog.oidvectorrecv", ServerSideOnly=true)]
		public static object oidvectorrecv(object par4760)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectorsend

		[Sql.Function(Name="pg_catalog.oidvectorsend", ServerSideOnly=true)]
		public static byte[] oidvectorsend(object par4762)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region oidvectortypes

		[Sql.Function(Name="pg_catalog.oidvectortypes", ServerSideOnly=true)]
		public static string oidvectortypes(object par4764)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region on_pb

		[Sql.Function(Name="pg_catalog.on_pb", ServerSideOnly=true)]
		public static bool? on_pb(NpgsqlPoint? par4766, NpgsqlBox? par4767)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region on_pl

		[Sql.Function(Name="pg_catalog.on_pl", ServerSideOnly=true)]
		public static bool? on_pl(NpgsqlPoint? par4769, NpgsqlLine? par4770)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region on_ppath

		[Sql.Function(Name="pg_catalog.on_ppath", ServerSideOnly=true)]
		public static bool? on_ppath(NpgsqlPoint? par4772, NpgsqlPath? par4773)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region on_ps

		[Sql.Function(Name="pg_catalog.on_ps", ServerSideOnly=true)]
		public static bool? on_ps(NpgsqlPoint? par4775, NpgsqlLSeg? par4776)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region on_sb

		[Sql.Function(Name="pg_catalog.on_sb", ServerSideOnly=true)]
		public static bool? on_sb(NpgsqlLSeg? par4778, NpgsqlBox? par4779)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region on_sl

		[Sql.Function(Name="pg_catalog.on_sl", ServerSideOnly=true)]
		public static bool? on_sl(NpgsqlLSeg? par4781, NpgsqlLine? par4782)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region opaque_in

		[Sql.Function(Name="pg_catalog.opaque_in", ServerSideOnly=true)]
		public static object opaque_in(object par4784)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region opaque_out

		[Sql.Function(Name="pg_catalog.opaque_out", ServerSideOnly=true)]
		public static object opaque_out(object par4786)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ordered_set_transition

		[Sql.Function(Name="pg_catalog.ordered_set_transition", ServerSideOnly=true)]
		public static object ordered_set_transition(object par4788, object par4789)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ordered_set_transition_multi

		[Sql.Function(Name="pg_catalog.ordered_set_transition_multi", ServerSideOnly=true)]
		public static object ordered_set_transition_multi(object par4791, object par4792)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region overlaps

		[Sql.Function(Name="pg_catalog.overlaps", ServerSideOnly=true)]
		public static bool? overlaps(DateTime? par4854, NpgsqlTimeSpan? par4855, DateTime? par4856, DateTime? par4857)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region overlay

		[Sql.Function(Name="pg_catalog.overlay", ServerSideOnly=true)]
		public static byte[] overlay(byte[] par4882, byte[] par4883, int? par4884)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region parse_ident

		[Sql.Function(Name="pg_catalog.parse_ident", ServerSideOnly=true)]
		public static object parse_ident(string str, bool? strict)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path

		[Sql.Function(Name="pg_catalog.path", ServerSideOnly=true)]
		public static NpgsqlPath? path(NpgsqlPolygon? par4887)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_add

		[Sql.Function(Name="pg_catalog.path_add", ServerSideOnly=true)]
		public static NpgsqlPath? path_add(NpgsqlPath? par4889, NpgsqlPath? par4890)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_add_pt

		[Sql.Function(Name="pg_catalog.path_add_pt", ServerSideOnly=true)]
		public static NpgsqlPath? path_add_pt(NpgsqlPath? par4892, NpgsqlPoint? par4893)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_center

		[Sql.Function(Name="pg_catalog.path_center", ServerSideOnly=true)]
		public static NpgsqlPoint? path_center(NpgsqlPath? par4895)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_contain_pt

		[Sql.Function(Name="pg_catalog.path_contain_pt", ServerSideOnly=true)]
		public static bool? path_contain_pt(NpgsqlPath? par4897, NpgsqlPoint? par4898)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_distance

		[Sql.Function(Name="pg_catalog.path_distance", ServerSideOnly=true)]
		public static double? path_distance(NpgsqlPath? par4900, NpgsqlPath? par4901)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_div_pt

		[Sql.Function(Name="pg_catalog.path_div_pt", ServerSideOnly=true)]
		public static NpgsqlPath? path_div_pt(NpgsqlPath? par4903, NpgsqlPoint? par4904)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_in

		[Sql.Function(Name="pg_catalog.path_in", ServerSideOnly=true)]
		public static NpgsqlPath? path_in(object par4906)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_inter

		[Sql.Function(Name="pg_catalog.path_inter", ServerSideOnly=true)]
		public static bool? path_inter(NpgsqlPath? par4908, NpgsqlPath? par4909)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_length

		[Sql.Function(Name="pg_catalog.path_length", ServerSideOnly=true)]
		public static double? path_length(NpgsqlPath? par4911)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_mul_pt

		[Sql.Function(Name="pg_catalog.path_mul_pt", ServerSideOnly=true)]
		public static NpgsqlPath? path_mul_pt(NpgsqlPath? par4913, NpgsqlPoint? par4914)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_n_eq

		[Sql.Function(Name="pg_catalog.path_n_eq", ServerSideOnly=true)]
		public static bool? path_n_eq(NpgsqlPath? par4916, NpgsqlPath? par4917)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_n_ge

		[Sql.Function(Name="pg_catalog.path_n_ge", ServerSideOnly=true)]
		public static bool? path_n_ge(NpgsqlPath? par4919, NpgsqlPath? par4920)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_n_gt

		[Sql.Function(Name="pg_catalog.path_n_gt", ServerSideOnly=true)]
		public static bool? path_n_gt(NpgsqlPath? par4922, NpgsqlPath? par4923)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_n_le

		[Sql.Function(Name="pg_catalog.path_n_le", ServerSideOnly=true)]
		public static bool? path_n_le(NpgsqlPath? par4925, NpgsqlPath? par4926)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_n_lt

		[Sql.Function(Name="pg_catalog.path_n_lt", ServerSideOnly=true)]
		public static bool? path_n_lt(NpgsqlPath? par4928, NpgsqlPath? par4929)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_npoints

		[Sql.Function(Name="pg_catalog.path_npoints", ServerSideOnly=true)]
		public static int? path_npoints(NpgsqlPath? par4931)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_out

		[Sql.Function(Name="pg_catalog.path_out", ServerSideOnly=true)]
		public static object path_out(NpgsqlPath? par4933)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_recv

		[Sql.Function(Name="pg_catalog.path_recv", ServerSideOnly=true)]
		public static NpgsqlPath? path_recv(object par4935)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_send

		[Sql.Function(Name="pg_catalog.path_send", ServerSideOnly=true)]
		public static byte[] path_send(NpgsqlPath? par4937)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region path_sub_pt

		[Sql.Function(Name="pg_catalog.path_sub_pt", ServerSideOnly=true)]
		public static NpgsqlPath? path_sub_pt(NpgsqlPath? par4939, NpgsqlPoint? par4940)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pclose

		[Sql.Function(Name="pg_catalog.pclose", ServerSideOnly=true)]
		public static NpgsqlPath? pclose(NpgsqlPath? par4942)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_cont

		[Sql.Function(Name="pg_catalog.percentile_cont", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static object percentile_cont<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par4953, Expression<Func<TSource, NpgsqlTimeSpan?>> par4954)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_cont_float8_final

		[Sql.Function(Name="pg_catalog.percentile_cont_float8_final", ServerSideOnly=true)]
		public static double? percentile_cont_float8_final(object par4956, double? par4957)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_cont_float8_multi_final

		[Sql.Function(Name="pg_catalog.percentile_cont_float8_multi_final", ServerSideOnly=true)]
		public static object percentile_cont_float8_multi_final(object par4959, object par4960)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_cont_interval_final

		[Sql.Function(Name="pg_catalog.percentile_cont_interval_final", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? percentile_cont_interval_final(object par4962, double? par4963)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_cont_interval_multi_final

		[Sql.Function(Name="pg_catalog.percentile_cont_interval_multi_final", ServerSideOnly=true)]
		public static object percentile_cont_interval_multi_final(object par4965, object par4966)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_disc

		[Sql.Function(Name="pg_catalog.percentile_disc", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static object percentile_disc<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par4971, Expression<Func<TSource, object>> par4972)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_disc_final

		[Sql.Function(Name="pg_catalog.percentile_disc_final", ServerSideOnly=true)]
		public static object percentile_disc_final(object par4974, double? par4975, object par4976)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percentile_disc_multi_final

		[Sql.Function(Name="pg_catalog.percentile_disc_multi_final", ServerSideOnly=true)]
		public static object percentile_disc_multi_final(object par4978, object par4979, object par4980)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percent_rank

		[Sql.Function(Name="pg_catalog.percent_rank", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static double? percent_rank<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par4983)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region percent_rank_final

		[Sql.Function(Name="pg_catalog.percent_rank_final", ServerSideOnly=true)]
		public static double? percent_rank_final(object par4985, object par4986)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_advisory_lock

		[Sql.Function(Name="pg_catalog.pg_advisory_lock", ServerSideOnly=true)]
		public static object pg_advisory_lock(int? par4988, int? par4989)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_advisory_lock_shared

		[Sql.Function(Name="pg_catalog.pg_advisory_lock_shared", ServerSideOnly=true)]
		public static object pg_advisory_lock_shared(int? par4991, int? par4992)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_advisory_unlock

		[Sql.Function(Name="pg_catalog.pg_advisory_unlock", ServerSideOnly=true)]
		public static bool? pg_advisory_unlock(int? par4996, int? par4997)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_advisory_unlock_all

		[Sql.Function(Name="pg_catalog.pg_advisory_unlock_all", ServerSideOnly=true)]
		public static object pg_advisory_unlock_all()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_advisory_unlock_shared

		[Sql.Function(Name="pg_catalog.pg_advisory_unlock_shared", ServerSideOnly=true)]
		public static bool? pg_advisory_unlock_shared(int? par5001, int? par5002)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_advisory_xact_lock

		[Sql.Function(Name="pg_catalog.pg_advisory_xact_lock", ServerSideOnly=true)]
		public static object pg_advisory_xact_lock(int? par5004, int? par5005)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_advisory_xact_lock_shared

		[Sql.Function(Name="pg_catalog.pg_advisory_xact_lock_shared", ServerSideOnly=true)]
		public static object pg_advisory_xact_lock_shared(int? par5007, int? par5008)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_backend_pid

		[Sql.Function(Name="pg_catalog.pg_backend_pid", ServerSideOnly=true)]
		public static int? pg_backend_pid()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_backup_start_time

		[Sql.Function(Name="pg_catalog.pg_backup_start_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_backup_start_time()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_blocking_pids

		[Sql.Function(Name="pg_catalog.pg_blocking_pids", ServerSideOnly=true)]
		public static object pg_blocking_pids(int? par5012)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_cancel_backend

		[Sql.Function(Name="pg_catalog.pg_cancel_backend", ServerSideOnly=true)]
		public static bool? pg_cancel_backend(int? par5014)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_char_max_length

		[Sql.Function(Name="information_schema._pg_char_max_length", ServerSideOnly=true)]
		public static int? _pg_char_max_length(int? typid, int? typmod)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_char_octet_length

		[Sql.Function(Name="information_schema._pg_char_octet_length", ServerSideOnly=true)]
		public static int? _pg_char_octet_length(int? typid, int? typmod)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_char_to_encoding

		[Sql.Function(Name="pg_catalog.pg_char_to_encoding", ServerSideOnly=true)]
		public static int? pg_char_to_encoding(string par5018)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_client_encoding

		[Sql.Function(Name="pg_catalog.pg_client_encoding", ServerSideOnly=true)]
		public static string pg_client_encoding()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_collation_actual_version

		[Sql.Function(Name="pg_catalog.pg_collation_actual_version", ServerSideOnly=true)]
		public static string pg_collation_actual_version(int? par5021)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_collation_for

		[Sql.Function(Name="pg_catalog.pg_collation_for", ServerSideOnly=true)]
		public static string pg_collation_for(object par5023)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_collation_is_visible

		[Sql.Function(Name="pg_catalog.pg_collation_is_visible", ServerSideOnly=true)]
		public static bool? pg_collation_is_visible(int? par5025)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_column_is_updatable

		[Sql.Function(Name="pg_catalog.pg_column_is_updatable", ServerSideOnly=true)]
		public static bool? pg_column_is_updatable(object par5027, short? par5028, bool? par5029)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_column_size

		[Sql.Function(Name="pg_catalog.pg_column_size", ServerSideOnly=true)]
		public static int? pg_column_size(object par5031)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_conf_load_time

		[Sql.Function(Name="pg_catalog.pg_conf_load_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_conf_load_time()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_control_checkpoint

		[Sql.Function(Name="pg_catalog.pg_control_checkpoint", ServerSideOnly=true)]
		public static pg_control_checkpointResult pg_control_checkpoint()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_control_init

		[Sql.Function(Name="pg_catalog.pg_control_init", ServerSideOnly=true)]
		public static pg_control_initResult pg_control_init()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_control_recovery

		[Sql.Function(Name="pg_catalog.pg_control_recovery", ServerSideOnly=true)]
		public static pg_control_recoveryResult pg_control_recovery()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_control_system

		[Sql.Function(Name="pg_catalog.pg_control_system", ServerSideOnly=true)]
		public static pg_control_systemResult pg_control_system()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_conversion_is_visible

		[Sql.Function(Name="pg_catalog.pg_conversion_is_visible", ServerSideOnly=true)]
		public static bool? pg_conversion_is_visible(int? par5034)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_create_logical_replication_slot

		[Sql.Function(Name="pg_catalog.pg_create_logical_replication_slot", ServerSideOnly=true)]
		public static pg_create_logical_replication_slotResult pg_create_logical_replication_slot(string slot_name, string plugin, bool? temporary)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_create_physical_replication_slot

		[Sql.Function(Name="pg_catalog.pg_create_physical_replication_slot", ServerSideOnly=true)]
		public static pg_create_physical_replication_slotResult pg_create_physical_replication_slot(string slot_name, bool? immediately_reserve, bool? temporary)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_create_restore_point

		[Sql.Function(Name="pg_catalog.pg_create_restore_point", ServerSideOnly=true)]
		public static object pg_create_restore_point(string par5036)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_current_logfile

		[Sql.Function(Name="pg_catalog.pg_current_logfile", ServerSideOnly=true)]
		public static string pg_current_logfile(string par5039)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_current_wal_flush_lsn

		[Sql.Function(Name="pg_catalog.pg_current_wal_flush_lsn", ServerSideOnly=true)]
		public static object pg_current_wal_flush_lsn()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_current_wal_insert_lsn

		[Sql.Function(Name="pg_catalog.pg_current_wal_insert_lsn", ServerSideOnly=true)]
		public static object pg_current_wal_insert_lsn()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_current_wal_lsn

		[Sql.Function(Name="pg_catalog.pg_current_wal_lsn", ServerSideOnly=true)]
		public static object pg_current_wal_lsn()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_database_size

		[Sql.Function(Name="pg_catalog.pg_database_size", ServerSideOnly=true)]
		public static long? pg_database_size(int? par5046)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_datetime_precision

		[Sql.Function(Name="information_schema._pg_datetime_precision", ServerSideOnly=true)]
		public static int? _pg_datetime_precision(int? typid, int? typmod)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ddl_command_in

		[Sql.Function(Name="pg_catalog.pg_ddl_command_in", ServerSideOnly=true)]
		public static object pg_ddl_command_in(object par5049)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ddl_command_out

		[Sql.Function(Name="pg_catalog.pg_ddl_command_out", ServerSideOnly=true)]
		public static object pg_ddl_command_out(object par5051)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ddl_command_recv

		[Sql.Function(Name="pg_catalog.pg_ddl_command_recv", ServerSideOnly=true)]
		public static object pg_ddl_command_recv(object par5053)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ddl_command_send

		[Sql.Function(Name="pg_catalog.pg_ddl_command_send", ServerSideOnly=true)]
		public static byte[] pg_ddl_command_send(object par5055)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_dependencies_in

		[Sql.Function(Name="pg_catalog.pg_dependencies_in", ServerSideOnly=true)]
		public static object pg_dependencies_in(object par5057)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_dependencies_out

		[Sql.Function(Name="pg_catalog.pg_dependencies_out", ServerSideOnly=true)]
		public static object pg_dependencies_out(object par5059)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_dependencies_recv

		[Sql.Function(Name="pg_catalog.pg_dependencies_recv", ServerSideOnly=true)]
		public static object pg_dependencies_recv(object par5061)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_dependencies_send

		[Sql.Function(Name="pg_catalog.pg_dependencies_send", ServerSideOnly=true)]
		public static byte[] pg_dependencies_send(object par5063)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_describe_object

		[Sql.Function(Name="pg_catalog.pg_describe_object", ServerSideOnly=true)]
		public static string pg_describe_object(int? par5065, int? par5066, int? par5067)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_drop_replication_slot

		[Sql.Function(Name="pg_catalog.pg_drop_replication_slot", ServerSideOnly=true)]
		public static object pg_drop_replication_slot(string par5068)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_encoding_max_length

		[Sql.Function(Name="pg_catalog.pg_encoding_max_length", ServerSideOnly=true)]
		public static int? pg_encoding_max_length(int? par5070)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_encoding_to_char

		[Sql.Function(Name="pg_catalog.pg_encoding_to_char", ServerSideOnly=true)]
		public static string pg_encoding_to_char(int? par5072)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_event_trigger_table_rewrite_oid

		[Sql.Function(Name="pg_catalog.pg_event_trigger_table_rewrite_oid", ServerSideOnly=true)]
		public static int? pg_event_trigger_table_rewrite_oid()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_event_trigger_table_rewrite_reason

		[Sql.Function(Name="pg_catalog.pg_event_trigger_table_rewrite_reason", ServerSideOnly=true)]
		public static int? pg_event_trigger_table_rewrite_reason()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_export_snapshot

		[Sql.Function(Name="pg_catalog.pg_export_snapshot", ServerSideOnly=true)]
		public static string pg_export_snapshot()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_extension_config_dump

		[Sql.Function(Name="pg_catalog.pg_extension_config_dump", ServerSideOnly=true)]
		public static object pg_extension_config_dump(object par5076, string par5077)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_filenode_relation

		[Sql.Function(Name="pg_catalog.pg_filenode_relation", ServerSideOnly=true)]
		public static object pg_filenode_relation(int? par5079, int? par5080)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_function_is_visible

		[Sql.Function(Name="pg_catalog.pg_function_is_visible", ServerSideOnly=true)]
		public static bool? pg_function_is_visible(int? par5082)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_constraintdef

		[Sql.Function(Name="pg_catalog.pg_get_constraintdef", ServerSideOnly=true)]
		public static string pg_get_constraintdef(int? par5086, bool? par5087)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_expr

		[Sql.Function(Name="pg_catalog.pg_get_expr", ServerSideOnly=true)]
		public static string pg_get_expr(object par5092, int? par5093, bool? par5094)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_function_arg_default

		[Sql.Function(Name="pg_catalog.pg_get_function_arg_default", ServerSideOnly=true)]
		public static string pg_get_function_arg_default(int? par5096, int? par5097)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_function_arguments

		[Sql.Function(Name="pg_catalog.pg_get_function_arguments", ServerSideOnly=true)]
		public static string pg_get_function_arguments(int? par5099)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_functiondef

		[Sql.Function(Name="pg_catalog.pg_get_functiondef", ServerSideOnly=true)]
		public static string pg_get_functiondef(int? par5101)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_function_identity_arguments

		[Sql.Function(Name="pg_catalog.pg_get_function_identity_arguments", ServerSideOnly=true)]
		public static string pg_get_function_identity_arguments(int? par5103)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_function_result

		[Sql.Function(Name="pg_catalog.pg_get_function_result", ServerSideOnly=true)]
		public static string pg_get_function_result(int? par5105)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_indexdef

		[Sql.Function(Name="pg_catalog.pg_get_indexdef", ServerSideOnly=true)]
		public static string pg_get_indexdef(int? par5109, int? par5110, bool? par5111)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_object_address

		[Sql.Function(Name="pg_catalog.pg_get_object_address", ServerSideOnly=true)]
		public static pg_get_object_addressResult pg_get_object_address(string type, object object_names, object object_args)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_partition_constraintdef

		[Sql.Function(Name="pg_catalog.pg_get_partition_constraintdef", ServerSideOnly=true)]
		public static string pg_get_partition_constraintdef(int? par5113)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_partkeydef

		[Sql.Function(Name="pg_catalog.pg_get_partkeydef", ServerSideOnly=true)]
		public static string pg_get_partkeydef(int? par5115)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_replica_identity_index

		[Sql.Function(Name="pg_catalog.pg_get_replica_identity_index", ServerSideOnly=true)]
		public static object pg_get_replica_identity_index(object par5117)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_ruledef

		[Sql.Function(Name="pg_catalog.pg_get_ruledef", ServerSideOnly=true)]
		public static string pg_get_ruledef(int? par5121, bool? par5122)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_serial_sequence

		[Sql.Function(Name="pg_catalog.pg_get_serial_sequence", ServerSideOnly=true)]
		public static string pg_get_serial_sequence(string par5124, string par5125)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_statisticsobjdef

		[Sql.Function(Name="pg_catalog.pg_get_statisticsobjdef", ServerSideOnly=true)]
		public static string pg_get_statisticsobjdef(int? par5127)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_triggerdef

		[Sql.Function(Name="pg_catalog.pg_get_triggerdef", ServerSideOnly=true)]
		public static string pg_get_triggerdef(int? par5131, bool? par5132)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_userbyid

		[Sql.Function(Name="pg_catalog.pg_get_userbyid", ServerSideOnly=true)]
		public static string pg_get_userbyid(int? par5134)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_get_viewdef

		[Sql.Function(Name="pg_catalog.pg_get_viewdef", ServerSideOnly=true)]
		public static string pg_get_viewdef(int? par5146, int? par5147)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_has_role

		[Sql.Function(Name="pg_catalog.pg_has_role", ServerSideOnly=true)]
		public static bool? pg_has_role(int? par5168, string par5169)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_identify_object

		[Sql.Function(Name="pg_catalog.pg_identify_object", ServerSideOnly=true)]
		public static pg_identify_objectResult pg_identify_object(int? classid, int? objid, int? objsubid)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_identify_object_as_address

		[Sql.Function(Name="pg_catalog.pg_identify_object_as_address", ServerSideOnly=true)]
		public static pg_identify_object_as_addressResult pg_identify_object_as_address(int? classid, int? objid, int? objsubid)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_import_system_collations

		[Sql.Function(Name="pg_catalog.pg_import_system_collations", ServerSideOnly=true)]
		public static int? pg_import_system_collations(object par5171)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_indexam_has_property

		[Sql.Function(Name="pg_catalog.pg_indexam_has_property", ServerSideOnly=true)]
		public static bool? pg_indexam_has_property(int? par5173, string par5174)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_index_column_has_property

		[Sql.Function(Name="pg_catalog.pg_index_column_has_property", ServerSideOnly=true)]
		public static bool? pg_index_column_has_property(object par5176, int? par5177, string par5178)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_indexes_size

		[Sql.Function(Name="pg_catalog.pg_indexes_size", ServerSideOnly=true)]
		public static long? pg_indexes_size(object par5180)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_index_has_property

		[Sql.Function(Name="pg_catalog.pg_index_has_property", ServerSideOnly=true)]
		public static bool? pg_index_has_property(object par5182, string par5183)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_index_position

		[Sql.Function(Name="information_schema._pg_index_position", ServerSideOnly=true)]
		public static int? _pg_index_position(int? par5185, short? par5186)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_interval_type

		[Sql.Function(Name="information_schema._pg_interval_type", ServerSideOnly=true)]
		public static string _pg_interval_type(int? typid, int? mod)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_is_in_backup

		[Sql.Function(Name="pg_catalog.pg_is_in_backup", ServerSideOnly=true)]
		public static bool? pg_is_in_backup()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_is_in_recovery

		[Sql.Function(Name="pg_catalog.pg_is_in_recovery", ServerSideOnly=true)]
		public static bool? pg_is_in_recovery()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_isolation_test_session_is_blocked

		[Sql.Function(Name="pg_catalog.pg_isolation_test_session_is_blocked", ServerSideOnly=true)]
		public static bool? pg_isolation_test_session_is_blocked(int? par5191, object par5192)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_is_other_temp_schema

		[Sql.Function(Name="pg_catalog.pg_is_other_temp_schema", ServerSideOnly=true)]
		public static bool? pg_is_other_temp_schema(int? par5194)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_is_wal_replay_paused

		[Sql.Function(Name="pg_catalog.pg_is_wal_replay_paused", ServerSideOnly=true)]
		public static bool? pg_is_wal_replay_paused()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_jit_available

		[Sql.Function(Name="pg_catalog.pg_jit_available", ServerSideOnly=true)]
		public static bool? pg_jit_available()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_keysequal

		[Sql.Function(Name="information_schema._pg_keysequal", ServerSideOnly=true)]
		public static bool? _pg_keysequal(object par5198, object par5199)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_last_committed_xact

		[Sql.Function(Name="pg_catalog.pg_last_committed_xact", ServerSideOnly=true)]
		public static pg_last_committed_xactResult pg_last_committed_xact()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_last_wal_receive_lsn

		[Sql.Function(Name="pg_catalog.pg_last_wal_receive_lsn", ServerSideOnly=true)]
		public static object pg_last_wal_receive_lsn()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_last_wal_replay_lsn

		[Sql.Function(Name="pg_catalog.pg_last_wal_replay_lsn", ServerSideOnly=true)]
		public static object pg_last_wal_replay_lsn()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_last_xact_replay_timestamp

		[Sql.Function(Name="pg_catalog.pg_last_xact_replay_timestamp", ServerSideOnly=true)]
		public static DateTimeOffset? pg_last_xact_replay_timestamp()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_logical_emit_message

		[Sql.Function(Name="pg_catalog.pg_logical_emit_message", ServerSideOnly=true)]
		public static object pg_logical_emit_message(bool? par5208, string par5209, byte[] par5210)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_cmp

		[Sql.Function(Name="pg_catalog.pg_lsn_cmp", ServerSideOnly=true)]
		public static int? pg_lsn_cmp(object par5216, object par5217)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_eq

		[Sql.Function(Name="pg_catalog.pg_lsn_eq", ServerSideOnly=true)]
		public static bool? pg_lsn_eq(object par5219, object par5220)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_ge

		[Sql.Function(Name="pg_catalog.pg_lsn_ge", ServerSideOnly=true)]
		public static bool? pg_lsn_ge(object par5222, object par5223)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_gt

		[Sql.Function(Name="pg_catalog.pg_lsn_gt", ServerSideOnly=true)]
		public static bool? pg_lsn_gt(object par5225, object par5226)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_hash

		[Sql.Function(Name="pg_catalog.pg_lsn_hash", ServerSideOnly=true)]
		public static int? pg_lsn_hash(object par5228)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_hash_extended

		[Sql.Function(Name="pg_catalog.pg_lsn_hash_extended", ServerSideOnly=true)]
		public static long? pg_lsn_hash_extended(object par5230, long? par5231)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_in

		[Sql.Function(Name="pg_catalog.pg_lsn_in", ServerSideOnly=true)]
		public static object pg_lsn_in(object par5233)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_le

		[Sql.Function(Name="pg_catalog.pg_lsn_le", ServerSideOnly=true)]
		public static bool? pg_lsn_le(object par5235, object par5236)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_lt

		[Sql.Function(Name="pg_catalog.pg_lsn_lt", ServerSideOnly=true)]
		public static bool? pg_lsn_lt(object par5238, object par5239)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_mi

		[Sql.Function(Name="pg_catalog.pg_lsn_mi", ServerSideOnly=true)]
		public static decimal? pg_lsn_mi(object par5241, object par5242)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_ne

		[Sql.Function(Name="pg_catalog.pg_lsn_ne", ServerSideOnly=true)]
		public static bool? pg_lsn_ne(object par5244, object par5245)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_out

		[Sql.Function(Name="pg_catalog.pg_lsn_out", ServerSideOnly=true)]
		public static object pg_lsn_out(object par5247)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_recv

		[Sql.Function(Name="pg_catalog.pg_lsn_recv", ServerSideOnly=true)]
		public static object pg_lsn_recv(object par5249)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_lsn_send

		[Sql.Function(Name="pg_catalog.pg_lsn_send", ServerSideOnly=true)]
		public static byte[] pg_lsn_send(object par5251)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_my_temp_schema

		[Sql.Function(Name="pg_catalog.pg_my_temp_schema", ServerSideOnly=true)]
		public static int? pg_my_temp_schema()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ndistinct_in

		[Sql.Function(Name="pg_catalog.pg_ndistinct_in", ServerSideOnly=true)]
		public static object pg_ndistinct_in(object par5254)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ndistinct_out

		[Sql.Function(Name="pg_catalog.pg_ndistinct_out", ServerSideOnly=true)]
		public static object pg_ndistinct_out(object par5256)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ndistinct_recv

		[Sql.Function(Name="pg_catalog.pg_ndistinct_recv", ServerSideOnly=true)]
		public static object pg_ndistinct_recv(object par5258)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ndistinct_send

		[Sql.Function(Name="pg_catalog.pg_ndistinct_send", ServerSideOnly=true)]
		public static byte[] pg_ndistinct_send(object par5260)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_node_tree_in

		[Sql.Function(Name="pg_catalog.pg_node_tree_in", ServerSideOnly=true)]
		public static object pg_node_tree_in(object par5262)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_node_tree_out

		[Sql.Function(Name="pg_catalog.pg_node_tree_out", ServerSideOnly=true)]
		public static object pg_node_tree_out(object par5264)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_node_tree_recv

		[Sql.Function(Name="pg_catalog.pg_node_tree_recv", ServerSideOnly=true)]
		public static object pg_node_tree_recv(object par5266)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_node_tree_send

		[Sql.Function(Name="pg_catalog.pg_node_tree_send", ServerSideOnly=true)]
		public static byte[] pg_node_tree_send(object par5268)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_notification_queue_usage

		[Sql.Function(Name="pg_catalog.pg_notification_queue_usage", ServerSideOnly=true)]
		public static double? pg_notification_queue_usage()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_notify

		[Sql.Function(Name="pg_catalog.pg_notify", ServerSideOnly=true)]
		public static object pg_notify(string par5270, string par5271)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_numeric_precision

		[Sql.Function(Name="information_schema._pg_numeric_precision", ServerSideOnly=true)]
		public static int? _pg_numeric_precision(int? typid, int? typmod)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_numeric_precision_radix

		[Sql.Function(Name="information_schema._pg_numeric_precision_radix", ServerSideOnly=true)]
		public static int? _pg_numeric_precision_radix(int? typid, int? typmod)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_numeric_scale

		[Sql.Function(Name="information_schema._pg_numeric_scale", ServerSideOnly=true)]
		public static int? _pg_numeric_scale(int? typid, int? typmod)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_opclass_is_visible

		[Sql.Function(Name="pg_catalog.pg_opclass_is_visible", ServerSideOnly=true)]
		public static bool? pg_opclass_is_visible(int? par5276)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_operator_is_visible

		[Sql.Function(Name="pg_catalog.pg_operator_is_visible", ServerSideOnly=true)]
		public static bool? pg_operator_is_visible(int? par5278)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_opfamily_is_visible

		[Sql.Function(Name="pg_catalog.pg_opfamily_is_visible", ServerSideOnly=true)]
		public static bool? pg_opfamily_is_visible(int? par5280)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_postmaster_start_time

		[Sql.Function(Name="pg_catalog.pg_postmaster_start_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_postmaster_start_time()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_read_binary_file

		[Sql.Function(Name="pg_catalog.pg_read_binary_file", ServerSideOnly=true)]
		public static byte[] pg_read_binary_file(string par5292)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_read_file

		[Sql.Function(Name="pg_catalog.pg_read_file", ServerSideOnly=true)]
		public static string pg_read_file(string par5303)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_read_file_old

		[Sql.Function(Name="pg_catalog.pg_read_file_old", ServerSideOnly=true)]
		public static string pg_read_file_old(string par5305, long? par5306, long? par5307)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_relation_filenode

		[Sql.Function(Name="pg_catalog.pg_relation_filenode", ServerSideOnly=true)]
		public static int? pg_relation_filenode(object par5309)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_relation_filepath

		[Sql.Function(Name="pg_catalog.pg_relation_filepath", ServerSideOnly=true)]
		public static string pg_relation_filepath(object par5311)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_relation_is_publishable

		[Sql.Function(Name="pg_catalog.pg_relation_is_publishable", ServerSideOnly=true)]
		public static bool? pg_relation_is_publishable(object par5313)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_relation_is_updatable

		[Sql.Function(Name="pg_catalog.pg_relation_is_updatable", ServerSideOnly=true)]
		public static int? pg_relation_is_updatable(object par5315, bool? par5316)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_relation_size

		[Sql.Function(Name="pg_catalog.pg_relation_size", ServerSideOnly=true)]
		public static long? pg_relation_size(object par5320, string par5321)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_reload_conf

		[Sql.Function(Name="pg_catalog.pg_reload_conf", ServerSideOnly=true)]
		public static bool? pg_reload_conf()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_advance

		[Sql.Function(Name="pg_catalog.pg_replication_origin_advance", ServerSideOnly=true)]
		public static object pg_replication_origin_advance(string par5323, object par5324)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_create

		[Sql.Function(Name="pg_catalog.pg_replication_origin_create", ServerSideOnly=true)]
		public static int? pg_replication_origin_create(string par5326)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_drop

		[Sql.Function(Name="pg_catalog.pg_replication_origin_drop", ServerSideOnly=true)]
		public static object pg_replication_origin_drop(string par5327)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_oid

		[Sql.Function(Name="pg_catalog.pg_replication_origin_oid", ServerSideOnly=true)]
		public static int? pg_replication_origin_oid(string par5329)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_progress

		[Sql.Function(Name="pg_catalog.pg_replication_origin_progress", ServerSideOnly=true)]
		public static object pg_replication_origin_progress(string par5331, bool? par5332)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_session_is_setup

		[Sql.Function(Name="pg_catalog.pg_replication_origin_session_is_setup", ServerSideOnly=true)]
		public static bool? pg_replication_origin_session_is_setup()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_session_progress

		[Sql.Function(Name="pg_catalog.pg_replication_origin_session_progress", ServerSideOnly=true)]
		public static object pg_replication_origin_session_progress(bool? par5335)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_session_reset

		[Sql.Function(Name="pg_catalog.pg_replication_origin_session_reset", ServerSideOnly=true)]
		public static object pg_replication_origin_session_reset()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_session_setup

		[Sql.Function(Name="pg_catalog.pg_replication_origin_session_setup", ServerSideOnly=true)]
		public static object pg_replication_origin_session_setup(string par5336)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_xact_reset

		[Sql.Function(Name="pg_catalog.pg_replication_origin_xact_reset", ServerSideOnly=true)]
		public static object pg_replication_origin_xact_reset()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_origin_xact_setup

		[Sql.Function(Name="pg_catalog.pg_replication_origin_xact_setup", ServerSideOnly=true)]
		public static object pg_replication_origin_xact_setup(object par5337, DateTimeOffset? par5338)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_replication_slot_advance

		[Sql.Function(Name="pg_catalog.pg_replication_slot_advance", ServerSideOnly=true)]
		public static pg_replication_slot_advanceResult pg_replication_slot_advance(string slot_name, object upto_lsn)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_rotate_logfile

		[Sql.Function(Name="pg_catalog.pg_rotate_logfile", ServerSideOnly=true)]
		public static bool? pg_rotate_logfile()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_rotate_logfile_old

		[Sql.Function(Name="pg_catalog.pg_rotate_logfile_old", ServerSideOnly=true)]
		public static bool? pg_rotate_logfile_old()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_safe_snapshot_blocking_pids

		[Sql.Function(Name="pg_catalog.pg_safe_snapshot_blocking_pids", ServerSideOnly=true)]
		public static object pg_safe_snapshot_blocking_pids(int? par5342)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_sequence_last_value

		[Sql.Function(Name="pg_catalog.pg_sequence_last_value", ServerSideOnly=true)]
		public static long? pg_sequence_last_value(object par5344)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_sequence_parameters

		[Sql.Function(Name="pg_catalog.pg_sequence_parameters", ServerSideOnly=true)]
		public static pg_sequence_parametersResult pg_sequence_parameters(int? sequence_oid)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_size_bytes

		[Sql.Function(Name="pg_catalog.pg_size_bytes", ServerSideOnly=true)]
		public static long? pg_size_bytes(string par5346)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_size_pretty

		[Sql.Function(Name="pg_catalog.pg_size_pretty", ServerSideOnly=true)]
		public static string pg_size_pretty(decimal? par5350)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_sleep

		[Sql.Function(Name="pg_catalog.pg_sleep", ServerSideOnly=true)]
		public static object pg_sleep(double? par5351)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_sleep_for

		[Sql.Function(Name="pg_catalog.pg_sleep_for", ServerSideOnly=true)]
		public static object pg_sleep_for(NpgsqlTimeSpan? par5352)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_sleep_until

		[Sql.Function(Name="pg_catalog.pg_sleep_until", ServerSideOnly=true)]
		public static object pg_sleep_until(DateTimeOffset? par5353)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_start_backup

		[Sql.Function(Name="pg_catalog.pg_start_backup", ServerSideOnly=true)]
		public static object pg_start_backup(string label, bool? fast, bool? exclusive)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_clear_snapshot

		[Sql.Function(Name="pg_catalog.pg_stat_clear_snapshot", ServerSideOnly=true)]
		public static object pg_stat_clear_snapshot()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_file

		[Sql.Function(Name="pg_catalog.pg_stat_file", ServerSideOnly=true)]
		public static pg_stat_fileResult pg_stat_file(string filename, bool? missing_ok)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_analyze_count

		[Sql.Function(Name="pg_catalog.pg_stat_get_analyze_count", ServerSideOnly=true)]
		public static long? pg_stat_get_analyze_count(int? par5356)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_archiver

		[Sql.Function(Name="pg_catalog.pg_stat_get_archiver", ServerSideOnly=true)]
		public static pg_stat_get_archiverResult pg_stat_get_archiver()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_autoanalyze_count

		[Sql.Function(Name="pg_catalog.pg_stat_get_autoanalyze_count", ServerSideOnly=true)]
		public static long? pg_stat_get_autoanalyze_count(int? par5358)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_autovacuum_count

		[Sql.Function(Name="pg_catalog.pg_stat_get_autovacuum_count", ServerSideOnly=true)]
		public static long? pg_stat_get_autovacuum_count(int? par5360)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_activity

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_activity", ServerSideOnly=true)]
		public static string pg_stat_get_backend_activity(int? par5362)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_activity_start

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_activity_start", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_backend_activity_start(int? par5364)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_client_addr

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_client_addr", ServerSideOnly=true)]
		public static NpgsqlInet? pg_stat_get_backend_client_addr(int? par5366)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_client_port

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_client_port", ServerSideOnly=true)]
		public static int? pg_stat_get_backend_client_port(int? par5368)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_dbid

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_dbid", ServerSideOnly=true)]
		public static int? pg_stat_get_backend_dbid(int? par5370)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_pid

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_pid", ServerSideOnly=true)]
		public static int? pg_stat_get_backend_pid(int? par5372)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_start

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_start", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_backend_start(int? par5374)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_userid

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_userid", ServerSideOnly=true)]
		public static int? pg_stat_get_backend_userid(int? par5376)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_wait_event

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_wait_event", ServerSideOnly=true)]
		public static string pg_stat_get_backend_wait_event(int? par5378)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_wait_event_type

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_wait_event_type", ServerSideOnly=true)]
		public static string pg_stat_get_backend_wait_event_type(int? par5380)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_backend_xact_start

		[Sql.Function(Name="pg_catalog.pg_stat_get_backend_xact_start", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_backend_xact_start(int? par5382)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_bgwriter_buf_written_checkpoints

		[Sql.Function(Name="pg_catalog.pg_stat_get_bgwriter_buf_written_checkpoints", ServerSideOnly=true)]
		public static long? pg_stat_get_bgwriter_buf_written_checkpoints()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_bgwriter_buf_written_clean

		[Sql.Function(Name="pg_catalog.pg_stat_get_bgwriter_buf_written_clean", ServerSideOnly=true)]
		public static long? pg_stat_get_bgwriter_buf_written_clean()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_bgwriter_maxwritten_clean

		[Sql.Function(Name="pg_catalog.pg_stat_get_bgwriter_maxwritten_clean", ServerSideOnly=true)]
		public static long? pg_stat_get_bgwriter_maxwritten_clean()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_bgwriter_requested_checkpoints

		[Sql.Function(Name="pg_catalog.pg_stat_get_bgwriter_requested_checkpoints", ServerSideOnly=true)]
		public static long? pg_stat_get_bgwriter_requested_checkpoints()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_bgwriter_stat_reset_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_bgwriter_stat_reset_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_bgwriter_stat_reset_time()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_bgwriter_timed_checkpoints

		[Sql.Function(Name="pg_catalog.pg_stat_get_bgwriter_timed_checkpoints", ServerSideOnly=true)]
		public static long? pg_stat_get_bgwriter_timed_checkpoints()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_blocks_fetched

		[Sql.Function(Name="pg_catalog.pg_stat_get_blocks_fetched", ServerSideOnly=true)]
		public static long? pg_stat_get_blocks_fetched(int? par5390)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_blocks_hit

		[Sql.Function(Name="pg_catalog.pg_stat_get_blocks_hit", ServerSideOnly=true)]
		public static long? pg_stat_get_blocks_hit(int? par5392)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_buf_alloc

		[Sql.Function(Name="pg_catalog.pg_stat_get_buf_alloc", ServerSideOnly=true)]
		public static long? pg_stat_get_buf_alloc()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_buf_fsync_backend

		[Sql.Function(Name="pg_catalog.pg_stat_get_buf_fsync_backend", ServerSideOnly=true)]
		public static long? pg_stat_get_buf_fsync_backend()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_buf_written_backend

		[Sql.Function(Name="pg_catalog.pg_stat_get_buf_written_backend", ServerSideOnly=true)]
		public static long? pg_stat_get_buf_written_backend()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_checkpoint_sync_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_checkpoint_sync_time", ServerSideOnly=true)]
		public static double? pg_stat_get_checkpoint_sync_time()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_checkpoint_write_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_checkpoint_write_time", ServerSideOnly=true)]
		public static double? pg_stat_get_checkpoint_write_time()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_blk_read_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_blk_read_time", ServerSideOnly=true)]
		public static double? pg_stat_get_db_blk_read_time(int? par5399)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_blk_write_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_blk_write_time", ServerSideOnly=true)]
		public static double? pg_stat_get_db_blk_write_time(int? par5401)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_blocks_fetched

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_blocks_fetched", ServerSideOnly=true)]
		public static long? pg_stat_get_db_blocks_fetched(int? par5403)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_blocks_hit

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_blocks_hit", ServerSideOnly=true)]
		public static long? pg_stat_get_db_blocks_hit(int? par5405)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_conflict_all

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_conflict_all", ServerSideOnly=true)]
		public static long? pg_stat_get_db_conflict_all(int? par5407)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_conflict_bufferpin

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_conflict_bufferpin", ServerSideOnly=true)]
		public static long? pg_stat_get_db_conflict_bufferpin(int? par5409)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_conflict_lock

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_conflict_lock", ServerSideOnly=true)]
		public static long? pg_stat_get_db_conflict_lock(int? par5411)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_conflict_snapshot

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_conflict_snapshot", ServerSideOnly=true)]
		public static long? pg_stat_get_db_conflict_snapshot(int? par5413)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_conflict_startup_deadlock

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_conflict_startup_deadlock", ServerSideOnly=true)]
		public static long? pg_stat_get_db_conflict_startup_deadlock(int? par5415)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_conflict_tablespace

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_conflict_tablespace", ServerSideOnly=true)]
		public static long? pg_stat_get_db_conflict_tablespace(int? par5417)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_deadlocks

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_deadlocks", ServerSideOnly=true)]
		public static long? pg_stat_get_db_deadlocks(int? par5419)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_numbackends

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_numbackends", ServerSideOnly=true)]
		public static int? pg_stat_get_db_numbackends(int? par5421)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_stat_reset_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_stat_reset_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_db_stat_reset_time(int? par5423)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_temp_bytes

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_temp_bytes", ServerSideOnly=true)]
		public static long? pg_stat_get_db_temp_bytes(int? par5425)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_temp_files

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_temp_files", ServerSideOnly=true)]
		public static long? pg_stat_get_db_temp_files(int? par5427)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_tuples_deleted

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_tuples_deleted", ServerSideOnly=true)]
		public static long? pg_stat_get_db_tuples_deleted(int? par5429)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_tuples_fetched

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_tuples_fetched", ServerSideOnly=true)]
		public static long? pg_stat_get_db_tuples_fetched(int? par5431)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_tuples_inserted

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_tuples_inserted", ServerSideOnly=true)]
		public static long? pg_stat_get_db_tuples_inserted(int? par5433)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_tuples_returned

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_tuples_returned", ServerSideOnly=true)]
		public static long? pg_stat_get_db_tuples_returned(int? par5435)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_tuples_updated

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_tuples_updated", ServerSideOnly=true)]
		public static long? pg_stat_get_db_tuples_updated(int? par5437)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_xact_commit

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_xact_commit", ServerSideOnly=true)]
		public static long? pg_stat_get_db_xact_commit(int? par5439)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_db_xact_rollback

		[Sql.Function(Name="pg_catalog.pg_stat_get_db_xact_rollback", ServerSideOnly=true)]
		public static long? pg_stat_get_db_xact_rollback(int? par5441)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_dead_tuples

		[Sql.Function(Name="pg_catalog.pg_stat_get_dead_tuples", ServerSideOnly=true)]
		public static long? pg_stat_get_dead_tuples(int? par5443)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_function_calls

		[Sql.Function(Name="pg_catalog.pg_stat_get_function_calls", ServerSideOnly=true)]
		public static long? pg_stat_get_function_calls(int? par5445)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_function_self_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_function_self_time", ServerSideOnly=true)]
		public static double? pg_stat_get_function_self_time(int? par5447)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_function_total_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_function_total_time", ServerSideOnly=true)]
		public static double? pg_stat_get_function_total_time(int? par5449)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_last_analyze_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_last_analyze_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_last_analyze_time(int? par5451)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_last_autoanalyze_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_last_autoanalyze_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_last_autoanalyze_time(int? par5453)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_last_autovacuum_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_last_autovacuum_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_last_autovacuum_time(int? par5455)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_last_vacuum_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_last_vacuum_time", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_last_vacuum_time(int? par5457)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_live_tuples

		[Sql.Function(Name="pg_catalog.pg_stat_get_live_tuples", ServerSideOnly=true)]
		public static long? pg_stat_get_live_tuples(int? par5459)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_mod_since_analyze

		[Sql.Function(Name="pg_catalog.pg_stat_get_mod_since_analyze", ServerSideOnly=true)]
		public static long? pg_stat_get_mod_since_analyze(int? par5461)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_numscans

		[Sql.Function(Name="pg_catalog.pg_stat_get_numscans", ServerSideOnly=true)]
		public static long? pg_stat_get_numscans(int? par5463)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_snapshot_timestamp

		[Sql.Function(Name="pg_catalog.pg_stat_get_snapshot_timestamp", ServerSideOnly=true)]
		public static DateTimeOffset? pg_stat_get_snapshot_timestamp()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_subscription

		[Sql.Function(Name="pg_catalog.pg_stat_get_subscription", ServerSideOnly=true)]
		public static pg_stat_get_subscriptionResult pg_stat_get_subscription(int? subid)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_tuples_deleted

		[Sql.Function(Name="pg_catalog.pg_stat_get_tuples_deleted", ServerSideOnly=true)]
		public static long? pg_stat_get_tuples_deleted(int? par5466)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_tuples_fetched

		[Sql.Function(Name="pg_catalog.pg_stat_get_tuples_fetched", ServerSideOnly=true)]
		public static long? pg_stat_get_tuples_fetched(int? par5468)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_tuples_hot_updated

		[Sql.Function(Name="pg_catalog.pg_stat_get_tuples_hot_updated", ServerSideOnly=true)]
		public static long? pg_stat_get_tuples_hot_updated(int? par5470)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_tuples_inserted

		[Sql.Function(Name="pg_catalog.pg_stat_get_tuples_inserted", ServerSideOnly=true)]
		public static long? pg_stat_get_tuples_inserted(int? par5472)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_tuples_returned

		[Sql.Function(Name="pg_catalog.pg_stat_get_tuples_returned", ServerSideOnly=true)]
		public static long? pg_stat_get_tuples_returned(int? par5474)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_tuples_updated

		[Sql.Function(Name="pg_catalog.pg_stat_get_tuples_updated", ServerSideOnly=true)]
		public static long? pg_stat_get_tuples_updated(int? par5476)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_vacuum_count

		[Sql.Function(Name="pg_catalog.pg_stat_get_vacuum_count", ServerSideOnly=true)]
		public static long? pg_stat_get_vacuum_count(int? par5478)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_wal_receiver

		[Sql.Function(Name="pg_catalog.pg_stat_get_wal_receiver", ServerSideOnly=true)]
		public static pg_stat_get_wal_receiverResult pg_stat_get_wal_receiver()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_blocks_fetched

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_blocks_fetched", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_blocks_fetched(int? par5480)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_blocks_hit

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_blocks_hit", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_blocks_hit(int? par5482)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_function_calls

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_function_calls", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_function_calls(int? par5484)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_function_self_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_function_self_time", ServerSideOnly=true)]
		public static double? pg_stat_get_xact_function_self_time(int? par5486)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_function_total_time

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_function_total_time", ServerSideOnly=true)]
		public static double? pg_stat_get_xact_function_total_time(int? par5488)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_numscans

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_numscans", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_numscans(int? par5490)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_tuples_deleted

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_tuples_deleted", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_tuples_deleted(int? par5492)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_tuples_fetched

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_tuples_fetched", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_tuples_fetched(int? par5494)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_tuples_hot_updated

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_tuples_hot_updated", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_tuples_hot_updated(int? par5496)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_tuples_inserted

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_tuples_inserted", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_tuples_inserted(int? par5498)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_tuples_returned

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_tuples_returned", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_tuples_returned(int? par5500)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_get_xact_tuples_updated

		[Sql.Function(Name="pg_catalog.pg_stat_get_xact_tuples_updated", ServerSideOnly=true)]
		public static long? pg_stat_get_xact_tuples_updated(int? par5502)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_statistics_obj_is_visible

		[Sql.Function(Name="pg_catalog.pg_statistics_obj_is_visible", ServerSideOnly=true)]
		public static bool? pg_statistics_obj_is_visible(int? par5504)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_reset

		[Sql.Function(Name="pg_catalog.pg_stat_reset", ServerSideOnly=true)]
		public static object pg_stat_reset()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_reset_shared

		[Sql.Function(Name="pg_catalog.pg_stat_reset_shared", ServerSideOnly=true)]
		public static object pg_stat_reset_shared(string par5505)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_reset_single_function_counters

		[Sql.Function(Name="pg_catalog.pg_stat_reset_single_function_counters", ServerSideOnly=true)]
		public static object pg_stat_reset_single_function_counters(int? par5506)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_stat_reset_single_table_counters

		[Sql.Function(Name="pg_catalog.pg_stat_reset_single_table_counters", ServerSideOnly=true)]
		public static object pg_stat_reset_single_table_counters(int? par5507)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_switch_wal

		[Sql.Function(Name="pg_catalog.pg_switch_wal", ServerSideOnly=true)]
		public static object pg_switch_wal()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_table_is_visible

		[Sql.Function(Name="pg_catalog.pg_table_is_visible", ServerSideOnly=true)]
		public static bool? pg_table_is_visible(int? par5511)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_table_size

		[Sql.Function(Name="pg_catalog.pg_table_size", ServerSideOnly=true)]
		public static long? pg_table_size(object par5513)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_tablespace_location

		[Sql.Function(Name="pg_catalog.pg_tablespace_location", ServerSideOnly=true)]
		public static string pg_tablespace_location(int? par5516)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_tablespace_size

		[Sql.Function(Name="pg_catalog.pg_tablespace_size", ServerSideOnly=true)]
		public static long? pg_tablespace_size(string par5520)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_terminate_backend

		[Sql.Function(Name="pg_catalog.pg_terminate_backend", ServerSideOnly=true)]
		public static bool? pg_terminate_backend(int? par5522)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_total_relation_size

		[Sql.Function(Name="pg_catalog.pg_total_relation_size", ServerSideOnly=true)]
		public static long? pg_total_relation_size(object par5524)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_trigger_depth

		[Sql.Function(Name="pg_catalog.pg_trigger_depth", ServerSideOnly=true)]
		public static int? pg_trigger_depth()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_truetypid

		[Sql.Function(Name="information_schema._pg_truetypid", ServerSideOnly=true)]
		public static int? _pg_truetypid(object par5527, object par5528)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region _pg_truetypmod

		[Sql.Function(Name="information_schema._pg_truetypmod", ServerSideOnly=true)]
		public static int? _pg_truetypmod(object par5530, object par5531)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_try_advisory_lock

		[Sql.Function(Name="pg_catalog.pg_try_advisory_lock", ServerSideOnly=true)]
		public static bool? pg_try_advisory_lock(int? par5535, int? par5536)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_try_advisory_lock_shared

		[Sql.Function(Name="pg_catalog.pg_try_advisory_lock_shared", ServerSideOnly=true)]
		public static bool? pg_try_advisory_lock_shared(int? par5540, int? par5541)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_try_advisory_xact_lock

		[Sql.Function(Name="pg_catalog.pg_try_advisory_xact_lock", ServerSideOnly=true)]
		public static bool? pg_try_advisory_xact_lock(int? par5545, int? par5546)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_try_advisory_xact_lock_shared

		[Sql.Function(Name="pg_catalog.pg_try_advisory_xact_lock_shared", ServerSideOnly=true)]
		public static bool? pg_try_advisory_xact_lock_shared(int? par5550, int? par5551)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ts_config_is_visible

		[Sql.Function(Name="pg_catalog.pg_ts_config_is_visible", ServerSideOnly=true)]
		public static bool? pg_ts_config_is_visible(int? par5553)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ts_dict_is_visible

		[Sql.Function(Name="pg_catalog.pg_ts_dict_is_visible", ServerSideOnly=true)]
		public static bool? pg_ts_dict_is_visible(int? par5555)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ts_parser_is_visible

		[Sql.Function(Name="pg_catalog.pg_ts_parser_is_visible", ServerSideOnly=true)]
		public static bool? pg_ts_parser_is_visible(int? par5557)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_ts_template_is_visible

		[Sql.Function(Name="pg_catalog.pg_ts_template_is_visible", ServerSideOnly=true)]
		public static bool? pg_ts_template_is_visible(int? par5559)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_type_is_visible

		[Sql.Function(Name="pg_catalog.pg_type_is_visible", ServerSideOnly=true)]
		public static bool? pg_type_is_visible(int? par5561)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_typeof

		[Sql.Function(Name="pg_catalog.pg_typeof", ServerSideOnly=true)]
		public static object pg_typeof(object par5563)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_walfile_name

		[Sql.Function(Name="pg_catalog.pg_walfile_name", ServerSideOnly=true)]
		public static string pg_walfile_name(object par5565)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_walfile_name_offset

		[Sql.Function(Name="pg_catalog.pg_walfile_name_offset", ServerSideOnly=true)]
		public static pg_walfile_name_offsetResult pg_walfile_name_offset(object lsn)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_wal_lsn_diff

		[Sql.Function(Name="pg_catalog.pg_wal_lsn_diff", ServerSideOnly=true)]
		public static decimal? pg_wal_lsn_diff(object par5567, object par5568)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_wal_replay_pause

		[Sql.Function(Name="pg_catalog.pg_wal_replay_pause", ServerSideOnly=true)]
		public static object pg_wal_replay_pause()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_wal_replay_resume

		[Sql.Function(Name="pg_catalog.pg_wal_replay_resume", ServerSideOnly=true)]
		public static object pg_wal_replay_resume()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pg_xact_commit_timestamp

		[Sql.Function(Name="pg_catalog.pg_xact_commit_timestamp", ServerSideOnly=true)]
		public static DateTimeOffset? pg_xact_commit_timestamp(int? par5570)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region phraseto_tsquery

		[Sql.Function(Name="pg_catalog.phraseto_tsquery", ServerSideOnly=true)]
		public static object phraseto_tsquery(object par5574, string par5575)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pi

		[Sql.Function(Name="pg_catalog.pi", ServerSideOnly=true)]
		public static double? pi()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region plainto_tsquery

		[Sql.Function(Name="pg_catalog.plainto_tsquery", ServerSideOnly=true)]
		public static object plainto_tsquery(string par5581)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region plpgsql_call_handler

		[Sql.Function(Name="pg_catalog.plpgsql_call_handler", ServerSideOnly=true)]
		public static object plpgsql_call_handler()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region plpgsql_inline_handler

		[Sql.Function(Name="pg_catalog.plpgsql_inline_handler", ServerSideOnly=true)]
		public static object plpgsql_inline_handler(object par5583)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region plpgsql_validator

		[Sql.Function(Name="pg_catalog.plpgsql_validator", ServerSideOnly=true)]
		public static object plpgsql_validator(int? par5584)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point

		[Sql.Function(Name="pg_catalog.point", ServerSideOnly=true)]
		public static NpgsqlPoint? point(NpgsqlPolygon? par5597)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_above

		[Sql.Function(Name="pg_catalog.point_above", ServerSideOnly=true)]
		public static bool? point_above(NpgsqlPoint? par5599, NpgsqlPoint? par5600)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_add

		[Sql.Function(Name="pg_catalog.point_add", ServerSideOnly=true)]
		public static NpgsqlPoint? point_add(NpgsqlPoint? par5602, NpgsqlPoint? par5603)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_below

		[Sql.Function(Name="pg_catalog.point_below", ServerSideOnly=true)]
		public static bool? point_below(NpgsqlPoint? par5605, NpgsqlPoint? par5606)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_distance

		[Sql.Function(Name="pg_catalog.point_distance", ServerSideOnly=true)]
		public static double? point_distance(NpgsqlPoint? par5608, NpgsqlPoint? par5609)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_div

		[Sql.Function(Name="pg_catalog.point_div", ServerSideOnly=true)]
		public static NpgsqlPoint? point_div(NpgsqlPoint? par5611, NpgsqlPoint? par5612)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_eq

		[Sql.Function(Name="pg_catalog.point_eq", ServerSideOnly=true)]
		public static bool? point_eq(NpgsqlPoint? par5614, NpgsqlPoint? par5615)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_horiz

		[Sql.Function(Name="pg_catalog.point_horiz", ServerSideOnly=true)]
		public static bool? point_horiz(NpgsqlPoint? par5617, NpgsqlPoint? par5618)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_in

		[Sql.Function(Name="pg_catalog.point_in", ServerSideOnly=true)]
		public static NpgsqlPoint? point_in(object par5620)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_left

		[Sql.Function(Name="pg_catalog.point_left", ServerSideOnly=true)]
		public static bool? point_left(NpgsqlPoint? par5622, NpgsqlPoint? par5623)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_mul

		[Sql.Function(Name="pg_catalog.point_mul", ServerSideOnly=true)]
		public static NpgsqlPoint? point_mul(NpgsqlPoint? par5625, NpgsqlPoint? par5626)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_ne

		[Sql.Function(Name="pg_catalog.point_ne", ServerSideOnly=true)]
		public static bool? point_ne(NpgsqlPoint? par5628, NpgsqlPoint? par5629)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_out

		[Sql.Function(Name="pg_catalog.point_out", ServerSideOnly=true)]
		public static object point_out(NpgsqlPoint? par5631)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_recv

		[Sql.Function(Name="pg_catalog.point_recv", ServerSideOnly=true)]
		public static NpgsqlPoint? point_recv(object par5633)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_right

		[Sql.Function(Name="pg_catalog.point_right", ServerSideOnly=true)]
		public static bool? point_right(NpgsqlPoint? par5635, NpgsqlPoint? par5636)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_send

		[Sql.Function(Name="pg_catalog.point_send", ServerSideOnly=true)]
		public static byte[] point_send(NpgsqlPoint? par5638)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_sub

		[Sql.Function(Name="pg_catalog.point_sub", ServerSideOnly=true)]
		public static NpgsqlPoint? point_sub(NpgsqlPoint? par5640, NpgsqlPoint? par5641)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region point_vert

		[Sql.Function(Name="pg_catalog.point_vert", ServerSideOnly=true)]
		public static bool? point_vert(NpgsqlPoint? par5643, NpgsqlPoint? par5644)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_above

		[Sql.Function(Name="pg_catalog.poly_above", ServerSideOnly=true)]
		public static bool? poly_above(NpgsqlPolygon? par5646, NpgsqlPolygon? par5647)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_below

		[Sql.Function(Name="pg_catalog.poly_below", ServerSideOnly=true)]
		public static bool? poly_below(NpgsqlPolygon? par5649, NpgsqlPolygon? par5650)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_center

		[Sql.Function(Name="pg_catalog.poly_center", ServerSideOnly=true)]
		public static NpgsqlPoint? poly_center(NpgsqlPolygon? par5652)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_contain

		[Sql.Function(Name="pg_catalog.poly_contain", ServerSideOnly=true)]
		public static bool? poly_contain(NpgsqlPolygon? par5654, NpgsqlPolygon? par5655)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_contained

		[Sql.Function(Name="pg_catalog.poly_contained", ServerSideOnly=true)]
		public static bool? poly_contained(NpgsqlPolygon? par5657, NpgsqlPolygon? par5658)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_contain_pt

		[Sql.Function(Name="pg_catalog.poly_contain_pt", ServerSideOnly=true)]
		public static bool? poly_contain_pt(NpgsqlPolygon? par5660, NpgsqlPoint? par5661)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_distance

		[Sql.Function(Name="pg_catalog.poly_distance", ServerSideOnly=true)]
		public static double? poly_distance(NpgsqlPolygon? par5663, NpgsqlPolygon? par5664)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region polygon

		[Sql.Function(Name="pg_catalog.polygon", ServerSideOnly=true)]
		public static NpgsqlPolygon? polygon(NpgsqlCircle? par5673)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_in

		[Sql.Function(Name="pg_catalog.poly_in", ServerSideOnly=true)]
		public static NpgsqlPolygon? poly_in(object par5675)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_left

		[Sql.Function(Name="pg_catalog.poly_left", ServerSideOnly=true)]
		public static bool? poly_left(NpgsqlPolygon? par5677, NpgsqlPolygon? par5678)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_npoints

		[Sql.Function(Name="pg_catalog.poly_npoints", ServerSideOnly=true)]
		public static int? poly_npoints(NpgsqlPolygon? par5680)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_out

		[Sql.Function(Name="pg_catalog.poly_out", ServerSideOnly=true)]
		public static object poly_out(NpgsqlPolygon? par5682)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_overabove

		[Sql.Function(Name="pg_catalog.poly_overabove", ServerSideOnly=true)]
		public static bool? poly_overabove(NpgsqlPolygon? par5684, NpgsqlPolygon? par5685)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_overbelow

		[Sql.Function(Name="pg_catalog.poly_overbelow", ServerSideOnly=true)]
		public static bool? poly_overbelow(NpgsqlPolygon? par5687, NpgsqlPolygon? par5688)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_overlap

		[Sql.Function(Name="pg_catalog.poly_overlap", ServerSideOnly=true)]
		public static bool? poly_overlap(NpgsqlPolygon? par5690, NpgsqlPolygon? par5691)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_overleft

		[Sql.Function(Name="pg_catalog.poly_overleft", ServerSideOnly=true)]
		public static bool? poly_overleft(NpgsqlPolygon? par5693, NpgsqlPolygon? par5694)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_overright

		[Sql.Function(Name="pg_catalog.poly_overright", ServerSideOnly=true)]
		public static bool? poly_overright(NpgsqlPolygon? par5696, NpgsqlPolygon? par5697)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_recv

		[Sql.Function(Name="pg_catalog.poly_recv", ServerSideOnly=true)]
		public static NpgsqlPolygon? poly_recv(object par5699)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_right

		[Sql.Function(Name="pg_catalog.poly_right", ServerSideOnly=true)]
		public static bool? poly_right(NpgsqlPolygon? par5701, NpgsqlPolygon? par5702)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_same

		[Sql.Function(Name="pg_catalog.poly_same", ServerSideOnly=true)]
		public static bool? poly_same(NpgsqlPolygon? par5704, NpgsqlPolygon? par5705)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region poly_send

		[Sql.Function(Name="pg_catalog.poly_send", ServerSideOnly=true)]
		public static byte[] poly_send(NpgsqlPolygon? par5707)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region popen

		[Sql.Function(Name="pg_catalog.popen", ServerSideOnly=true)]
		public static NpgsqlPath? popen(NpgsqlPath? par5709)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region position

		[Sql.Function(Name="pg_catalog.position", ServerSideOnly=true)]
		public static int? position(string par5717, string par5718)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region positionjoinsel

		[Sql.Function(Name="pg_catalog.positionjoinsel", ServerSideOnly=true)]
		public static double? positionjoinsel(object par5720, int? par5721, object par5722, short? par5723, object par5724)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region positionsel

		[Sql.Function(Name="pg_catalog.positionsel", ServerSideOnly=true)]
		public static double? positionsel(object par5726, int? par5727, object par5728, int? par5729)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region postgresql_fdw_validator

		[Sql.Function(Name="pg_catalog.postgresql_fdw_validator", ServerSideOnly=true)]
		public static bool? postgresql_fdw_validator(object par5731, int? par5732)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pow

		[Sql.Function(Name="pg_catalog.pow", ServerSideOnly=true)]
		public static decimal? pow(decimal? par5737, decimal? par5738)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region power

		[Sql.Function(Name="pg_catalog.power", ServerSideOnly=true)]
		public static decimal? power(decimal? par5743, decimal? par5744)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region prefixjoinsel

		[Sql.Function(Name="pg_catalog.prefixjoinsel", ServerSideOnly=true)]
		public static double? prefixjoinsel(object par5746, int? par5747, object par5748, short? par5749, object par5750)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region prefixsel

		[Sql.Function(Name="pg_catalog.prefixsel", ServerSideOnly=true)]
		public static double? prefixsel(object par5752, int? par5753, object par5754, int? par5755)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region prsd_end

		[Sql.Function(Name="pg_catalog.prsd_end", ServerSideOnly=true)]
		public static object prsd_end(object par5756)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region prsd_headline

		[Sql.Function(Name="pg_catalog.prsd_headline", ServerSideOnly=true)]
		public static object prsd_headline(object par5758, object par5759, object par5760)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region prsd_lextype

		[Sql.Function(Name="pg_catalog.prsd_lextype", ServerSideOnly=true)]
		public static object prsd_lextype(object par5762)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region prsd_nexttoken

		[Sql.Function(Name="pg_catalog.prsd_nexttoken", ServerSideOnly=true)]
		public static object prsd_nexttoken(object par5764, object par5765, object par5766)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region prsd_start

		[Sql.Function(Name="pg_catalog.prsd_start", ServerSideOnly=true)]
		public static object prsd_start(object par5768, int? par5769)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pt_contained_circle

		[Sql.Function(Name="pg_catalog.pt_contained_circle", ServerSideOnly=true)]
		public static bool? pt_contained_circle(NpgsqlPoint? par5771, NpgsqlCircle? par5772)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region pt_contained_poly

		[Sql.Function(Name="pg_catalog.pt_contained_poly", ServerSideOnly=true)]
		public static bool? pt_contained_poly(NpgsqlPoint? par5774, NpgsqlPolygon? par5775)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region query_to_xml

		[Sql.Function(Name="pg_catalog.query_to_xml", ServerSideOnly=true)]
		public static string query_to_xml(string query, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region query_to_xml_and_xmlschema

		[Sql.Function(Name="pg_catalog.query_to_xml_and_xmlschema", ServerSideOnly=true)]
		public static string query_to_xml_and_xmlschema(string query, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region query_to_xmlschema

		[Sql.Function(Name="pg_catalog.query_to_xmlschema", ServerSideOnly=true)]
		public static string query_to_xmlschema(string query, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region querytree

		[Sql.Function(Name="pg_catalog.querytree", ServerSideOnly=true)]
		public static string querytree(object par5780)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region quote_ident

		[Sql.Function(Name="pg_catalog.quote_ident", ServerSideOnly=true)]
		public static string quote_ident(string par5782)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region quote_literal

		[Sql.Function(Name="pg_catalog.quote_literal", ServerSideOnly=true)]
		public static string quote_literal(object par5786)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region quote_nullable

		[Sql.Function(Name="pg_catalog.quote_nullable", ServerSideOnly=true)]
		public static string quote_nullable(object par5790)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region radians

		[Sql.Function(Name="pg_catalog.radians", ServerSideOnly=true)]
		public static double? radians(double? par5792)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region radius

		[Sql.Function(Name="pg_catalog.radius", ServerSideOnly=true)]
		public static double? radius(NpgsqlCircle? par5794)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region random

		[Sql.Function(Name="pg_catalog.random", ServerSideOnly=true)]
		public static double? random()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_adjacent

		[Sql.Function(Name="pg_catalog.range_adjacent", ServerSideOnly=true)]
		public static bool? range_adjacent(object par5797, object par5798)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_after

		[Sql.Function(Name="pg_catalog.range_after", ServerSideOnly=true)]
		public static bool? range_after(object par5800, object par5801)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_before

		[Sql.Function(Name="pg_catalog.range_before", ServerSideOnly=true)]
		public static bool? range_before(object par5803, object par5804)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_cmp

		[Sql.Function(Name="pg_catalog.range_cmp", ServerSideOnly=true)]
		public static int? range_cmp(object par5806, object par5807)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_contained_by

		[Sql.Function(Name="pg_catalog.range_contained_by", ServerSideOnly=true)]
		public static bool? range_contained_by(object par5809, object par5810)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_contains

		[Sql.Function(Name="pg_catalog.range_contains", ServerSideOnly=true)]
		public static bool? range_contains(object par5812, object par5813)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_contains_elem

		[Sql.Function(Name="pg_catalog.range_contains_elem", ServerSideOnly=true)]
		public static bool? range_contains_elem(object par5815, object par5816)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_eq

		[Sql.Function(Name="pg_catalog.range_eq", ServerSideOnly=true)]
		public static bool? range_eq(object par5818, object par5819)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_ge

		[Sql.Function(Name="pg_catalog.range_ge", ServerSideOnly=true)]
		public static bool? range_ge(object par5821, object par5822)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_gist_consistent

		[Sql.Function(Name="pg_catalog.range_gist_consistent", ServerSideOnly=true)]
		public static bool? range_gist_consistent(object par5824, object par5825, short? par5826, int? par5827, object par5828)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_gist_penalty

		[Sql.Function(Name="pg_catalog.range_gist_penalty", ServerSideOnly=true)]
		public static object range_gist_penalty(object par5830, object par5831, object par5832)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_gist_picksplit

		[Sql.Function(Name="pg_catalog.range_gist_picksplit", ServerSideOnly=true)]
		public static object range_gist_picksplit(object par5834, object par5835)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_gist_same

		[Sql.Function(Name="pg_catalog.range_gist_same", ServerSideOnly=true)]
		public static object range_gist_same(object par5837, object par5838, object par5839)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_gist_union

		[Sql.Function(Name="pg_catalog.range_gist_union", ServerSideOnly=true)]
		public static object range_gist_union(object par5841, object par5842)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_gt

		[Sql.Function(Name="pg_catalog.range_gt", ServerSideOnly=true)]
		public static bool? range_gt(object par5844, object par5845)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_in

		[Sql.Function(Name="pg_catalog.range_in", ServerSideOnly=true)]
		public static object range_in(object par5847, int? par5848, int? par5849)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_intersect

		[Sql.Function(Name="pg_catalog.range_intersect", ServerSideOnly=true)]
		public static object range_intersect(object par5851, object par5852)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_le

		[Sql.Function(Name="pg_catalog.range_le", ServerSideOnly=true)]
		public static bool? range_le(object par5854, object par5855)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_lt

		[Sql.Function(Name="pg_catalog.range_lt", ServerSideOnly=true)]
		public static bool? range_lt(object par5857, object par5858)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_merge

		[Sql.Function(Name="pg_catalog.range_merge", ServerSideOnly=true)]
		public static object range_merge(object par5860, object par5861)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_minus

		[Sql.Function(Name="pg_catalog.range_minus", ServerSideOnly=true)]
		public static object range_minus(object par5863, object par5864)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_ne

		[Sql.Function(Name="pg_catalog.range_ne", ServerSideOnly=true)]
		public static bool? range_ne(object par5866, object par5867)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_out

		[Sql.Function(Name="pg_catalog.range_out", ServerSideOnly=true)]
		public static object range_out(object par5869)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_overlaps

		[Sql.Function(Name="pg_catalog.range_overlaps", ServerSideOnly=true)]
		public static bool? range_overlaps(object par5871, object par5872)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_overleft

		[Sql.Function(Name="pg_catalog.range_overleft", ServerSideOnly=true)]
		public static bool? range_overleft(object par5874, object par5875)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_overright

		[Sql.Function(Name="pg_catalog.range_overright", ServerSideOnly=true)]
		public static bool? range_overright(object par5877, object par5878)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_recv

		[Sql.Function(Name="pg_catalog.range_recv", ServerSideOnly=true)]
		public static object range_recv(object par5880, int? par5881, int? par5882)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region rangesel

		[Sql.Function(Name="pg_catalog.rangesel", ServerSideOnly=true)]
		public static double? rangesel(object par5884, int? par5885, object par5886, int? par5887)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_send

		[Sql.Function(Name="pg_catalog.range_send", ServerSideOnly=true)]
		public static byte[] range_send(object par5889)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_typanalyze

		[Sql.Function(Name="pg_catalog.range_typanalyze", ServerSideOnly=true)]
		public static bool? range_typanalyze(object par5891)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region range_union

		[Sql.Function(Name="pg_catalog.range_union", ServerSideOnly=true)]
		public static object range_union(object par5893, object par5894)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region rank

		[Sql.Function(Name="pg_catalog.rank", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static long? rank<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, object>> par5897)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region rank_final

		[Sql.Function(Name="pg_catalog.rank_final", ServerSideOnly=true)]
		public static long? rank_final(object par5899, object par5900)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_eq

		[Sql.Function(Name="pg_catalog.record_eq", ServerSideOnly=true)]
		public static bool? record_eq(object par5902, object par5903)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_ge

		[Sql.Function(Name="pg_catalog.record_ge", ServerSideOnly=true)]
		public static bool? record_ge(object par5905, object par5906)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_gt

		[Sql.Function(Name="pg_catalog.record_gt", ServerSideOnly=true)]
		public static bool? record_gt(object par5908, object par5909)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_image_eq

		[Sql.Function(Name="pg_catalog.record_image_eq", ServerSideOnly=true)]
		public static bool? record_image_eq(object par5911, object par5912)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_image_ge

		[Sql.Function(Name="pg_catalog.record_image_ge", ServerSideOnly=true)]
		public static bool? record_image_ge(object par5914, object par5915)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_image_gt

		[Sql.Function(Name="pg_catalog.record_image_gt", ServerSideOnly=true)]
		public static bool? record_image_gt(object par5917, object par5918)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_image_le

		[Sql.Function(Name="pg_catalog.record_image_le", ServerSideOnly=true)]
		public static bool? record_image_le(object par5920, object par5921)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_image_lt

		[Sql.Function(Name="pg_catalog.record_image_lt", ServerSideOnly=true)]
		public static bool? record_image_lt(object par5923, object par5924)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_image_ne

		[Sql.Function(Name="pg_catalog.record_image_ne", ServerSideOnly=true)]
		public static bool? record_image_ne(object par5926, object par5927)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_in

		[Sql.Function(Name="pg_catalog.record_in", ServerSideOnly=true)]
		public static object record_in(object par5928, int? par5929, int? par5930)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_le

		[Sql.Function(Name="pg_catalog.record_le", ServerSideOnly=true)]
		public static bool? record_le(object par5932, object par5933)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_lt

		[Sql.Function(Name="pg_catalog.record_lt", ServerSideOnly=true)]
		public static bool? record_lt(object par5935, object par5936)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_ne

		[Sql.Function(Name="pg_catalog.record_ne", ServerSideOnly=true)]
		public static bool? record_ne(object par5938, object par5939)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_out

		[Sql.Function(Name="pg_catalog.record_out", ServerSideOnly=true)]
		public static object record_out(object par5941)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_recv

		[Sql.Function(Name="pg_catalog.record_recv", ServerSideOnly=true)]
		public static object record_recv(object par5942, int? par5943, int? par5944)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region record_send

		[Sql.Function(Name="pg_catalog.record_send", ServerSideOnly=true)]
		public static byte[] record_send(object par5946)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regclass

		[Sql.Function(Name="pg_catalog.regclass", ServerSideOnly=true)]
		public static object regclass(string par5948)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regclassin

		[Sql.Function(Name="pg_catalog.regclassin", ServerSideOnly=true)]
		public static object regclassin(object par5950)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regclassout

		[Sql.Function(Name="pg_catalog.regclassout", ServerSideOnly=true)]
		public static object regclassout(object par5952)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regclassrecv

		[Sql.Function(Name="pg_catalog.regclassrecv", ServerSideOnly=true)]
		public static object regclassrecv(object par5954)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regclasssend

		[Sql.Function(Name="pg_catalog.regclasssend", ServerSideOnly=true)]
		public static byte[] regclasssend(object par5956)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regconfigin

		[Sql.Function(Name="pg_catalog.regconfigin", ServerSideOnly=true)]
		public static object regconfigin(object par5958)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regconfigout

		[Sql.Function(Name="pg_catalog.regconfigout", ServerSideOnly=true)]
		public static object regconfigout(object par5960)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regconfigrecv

		[Sql.Function(Name="pg_catalog.regconfigrecv", ServerSideOnly=true)]
		public static object regconfigrecv(object par5962)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regconfigsend

		[Sql.Function(Name="pg_catalog.regconfigsend", ServerSideOnly=true)]
		public static byte[] regconfigsend(object par5964)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regdictionaryin

		[Sql.Function(Name="pg_catalog.regdictionaryin", ServerSideOnly=true)]
		public static object regdictionaryin(object par5966)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regdictionaryout

		[Sql.Function(Name="pg_catalog.regdictionaryout", ServerSideOnly=true)]
		public static object regdictionaryout(object par5968)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regdictionaryrecv

		[Sql.Function(Name="pg_catalog.regdictionaryrecv", ServerSideOnly=true)]
		public static object regdictionaryrecv(object par5970)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regdictionarysend

		[Sql.Function(Name="pg_catalog.regdictionarysend", ServerSideOnly=true)]
		public static byte[] regdictionarysend(object par5972)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regexeqjoinsel

		[Sql.Function(Name="pg_catalog.regexeqjoinsel", ServerSideOnly=true)]
		public static double? regexeqjoinsel(object par5974, int? par5975, object par5976, short? par5977, object par5978)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regexeqsel

		[Sql.Function(Name="pg_catalog.regexeqsel", ServerSideOnly=true)]
		public static double? regexeqsel(object par5980, int? par5981, object par5982, int? par5983)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regexnejoinsel

		[Sql.Function(Name="pg_catalog.regexnejoinsel", ServerSideOnly=true)]
		public static double? regexnejoinsel(object par5985, int? par5986, object par5987, short? par5988, object par5989)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regexnesel

		[Sql.Function(Name="pg_catalog.regexnesel", ServerSideOnly=true)]
		public static double? regexnesel(object par5991, int? par5992, object par5993, int? par5994)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regexp_match

		[Sql.Function(Name="pg_catalog.regexp_match", ServerSideOnly=true)]
		public static object regexp_match(string par5999, string par6000, string par6001)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regexp_replace

		[Sql.Function(Name="pg_catalog.regexp_replace", ServerSideOnly=true)]
		public static string regexp_replace(string par6012, string par6013, string par6014, string par6015)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regexp_split_to_array

		[Sql.Function(Name="pg_catalog.regexp_split_to_array", ServerSideOnly=true)]
		public static object regexp_split_to_array(string par6020, string par6021, string par6022)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regnamespacein

		[Sql.Function(Name="pg_catalog.regnamespacein", ServerSideOnly=true)]
		public static object regnamespacein(object par6029)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regnamespaceout

		[Sql.Function(Name="pg_catalog.regnamespaceout", ServerSideOnly=true)]
		public static object regnamespaceout(object par6031)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regnamespacerecv

		[Sql.Function(Name="pg_catalog.regnamespacerecv", ServerSideOnly=true)]
		public static object regnamespacerecv(object par6033)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regnamespacesend

		[Sql.Function(Name="pg_catalog.regnamespacesend", ServerSideOnly=true)]
		public static byte[] regnamespacesend(object par6035)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regoperatorin

		[Sql.Function(Name="pg_catalog.regoperatorin", ServerSideOnly=true)]
		public static object regoperatorin(object par6037)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regoperatorout

		[Sql.Function(Name="pg_catalog.regoperatorout", ServerSideOnly=true)]
		public static object regoperatorout(object par6039)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regoperatorrecv

		[Sql.Function(Name="pg_catalog.regoperatorrecv", ServerSideOnly=true)]
		public static object regoperatorrecv(object par6041)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regoperatorsend

		[Sql.Function(Name="pg_catalog.regoperatorsend", ServerSideOnly=true)]
		public static byte[] regoperatorsend(object par6043)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regoperin

		[Sql.Function(Name="pg_catalog.regoperin", ServerSideOnly=true)]
		public static object regoperin(object par6045)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regoperout

		[Sql.Function(Name="pg_catalog.regoperout", ServerSideOnly=true)]
		public static object regoperout(object par6047)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regoperrecv

		[Sql.Function(Name="pg_catalog.regoperrecv", ServerSideOnly=true)]
		public static object regoperrecv(object par6049)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regopersend

		[Sql.Function(Name="pg_catalog.regopersend", ServerSideOnly=true)]
		public static byte[] regopersend(object par6051)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regprocedurein

		[Sql.Function(Name="pg_catalog.regprocedurein", ServerSideOnly=true)]
		public static object regprocedurein(object par6053)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regprocedureout

		[Sql.Function(Name="pg_catalog.regprocedureout", ServerSideOnly=true)]
		public static object regprocedureout(object par6055)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regprocedurerecv

		[Sql.Function(Name="pg_catalog.regprocedurerecv", ServerSideOnly=true)]
		public static object regprocedurerecv(object par6057)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regproceduresend

		[Sql.Function(Name="pg_catalog.regproceduresend", ServerSideOnly=true)]
		public static byte[] regproceduresend(object par6059)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regprocin

		[Sql.Function(Name="pg_catalog.regprocin", ServerSideOnly=true)]
		public static object regprocin(object par6061)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regprocout

		[Sql.Function(Name="pg_catalog.regprocout", ServerSideOnly=true)]
		public static object regprocout(object par6063)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regprocrecv

		[Sql.Function(Name="pg_catalog.regprocrecv", ServerSideOnly=true)]
		public static object regprocrecv(object par6065)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regprocsend

		[Sql.Function(Name="pg_catalog.regprocsend", ServerSideOnly=true)]
		public static byte[] regprocsend(object par6067)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_avgx

		[Sql.Function(Name="pg_catalog.regr_avgx", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_avgx<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6069, Expression<Func<TSource, double?>> par6070)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_avgy

		[Sql.Function(Name="pg_catalog.regr_avgy", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_avgy<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6072, Expression<Func<TSource, double?>> par6073)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_count

		[Sql.Function(Name="pg_catalog.regr_count", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static long? regr_count<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6075, Expression<Func<TSource, double?>> par6076)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_intercept

		[Sql.Function(Name="pg_catalog.regr_intercept", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_intercept<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6078, Expression<Func<TSource, double?>> par6079)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regrolein

		[Sql.Function(Name="pg_catalog.regrolein", ServerSideOnly=true)]
		public static object regrolein(object par6081)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regroleout

		[Sql.Function(Name="pg_catalog.regroleout", ServerSideOnly=true)]
		public static object regroleout(object par6083)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regrolerecv

		[Sql.Function(Name="pg_catalog.regrolerecv", ServerSideOnly=true)]
		public static object regrolerecv(object par6085)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regrolesend

		[Sql.Function(Name="pg_catalog.regrolesend", ServerSideOnly=true)]
		public static byte[] regrolesend(object par6087)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_r2

		[Sql.Function(Name="pg_catalog.regr_r2", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_r2<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6089, Expression<Func<TSource, double?>> par6090)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_slope

		[Sql.Function(Name="pg_catalog.regr_slope", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_slope<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6092, Expression<Func<TSource, double?>> par6093)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_sxx

		[Sql.Function(Name="pg_catalog.regr_sxx", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_sxx<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6095, Expression<Func<TSource, double?>> par6096)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_sxy

		[Sql.Function(Name="pg_catalog.regr_sxy", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_sxy<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6098, Expression<Func<TSource, double?>> par6099)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regr_syy

		[Sql.Function(Name="pg_catalog.regr_syy", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static double? regr_syy<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, double?>> par6101, Expression<Func<TSource, double?>> par6102)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regtypein

		[Sql.Function(Name="pg_catalog.regtypein", ServerSideOnly=true)]
		public static object regtypein(object par6104)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regtypeout

		[Sql.Function(Name="pg_catalog.regtypeout", ServerSideOnly=true)]
		public static object regtypeout(object par6106)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regtyperecv

		[Sql.Function(Name="pg_catalog.regtyperecv", ServerSideOnly=true)]
		public static object regtyperecv(object par6108)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region regtypesend

		[Sql.Function(Name="pg_catalog.regtypesend", ServerSideOnly=true)]
		public static byte[] regtypesend(object par6110)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltime

		[Sql.Function(Name="pg_catalog.reltime", ServerSideOnly=true)]
		public static object reltime(NpgsqlTimeSpan? par6112)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimeeq

		[Sql.Function(Name="pg_catalog.reltimeeq", ServerSideOnly=true)]
		public static bool? reltimeeq(object par6114, object par6115)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimege

		[Sql.Function(Name="pg_catalog.reltimege", ServerSideOnly=true)]
		public static bool? reltimege(object par6117, object par6118)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimegt

		[Sql.Function(Name="pg_catalog.reltimegt", ServerSideOnly=true)]
		public static bool? reltimegt(object par6120, object par6121)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimein

		[Sql.Function(Name="pg_catalog.reltimein", ServerSideOnly=true)]
		public static object reltimein(object par6123)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimele

		[Sql.Function(Name="pg_catalog.reltimele", ServerSideOnly=true)]
		public static bool? reltimele(object par6125, object par6126)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimelt

		[Sql.Function(Name="pg_catalog.reltimelt", ServerSideOnly=true)]
		public static bool? reltimelt(object par6128, object par6129)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimene

		[Sql.Function(Name="pg_catalog.reltimene", ServerSideOnly=true)]
		public static bool? reltimene(object par6131, object par6132)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimeout

		[Sql.Function(Name="pg_catalog.reltimeout", ServerSideOnly=true)]
		public static object reltimeout(object par6134)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimerecv

		[Sql.Function(Name="pg_catalog.reltimerecv", ServerSideOnly=true)]
		public static object reltimerecv(object par6136)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reltimesend

		[Sql.Function(Name="pg_catalog.reltimesend", ServerSideOnly=true)]
		public static byte[] reltimesend(object par6138)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region repeat

		[Sql.Function(Name="pg_catalog.repeat", ServerSideOnly=true)]
		public static string repeat(string par6140, int? par6141)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region replace

		[Sql.Function(Name="pg_catalog.replace", ServerSideOnly=true)]
		public static string replace(string par6143, string par6144, string par6145)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region reverse

		[Sql.Function(Name="pg_catalog.reverse", ServerSideOnly=true)]
		public static string reverse(string par6147)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_cascade_del

		[Sql.Function(Name="pg_catalog.\"RI_FKey_cascade_del\"", ServerSideOnly=true)]
		public static object RI_FKey_cascade_del()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_cascade_upd

		[Sql.Function(Name="pg_catalog.\"RI_FKey_cascade_upd\"", ServerSideOnly=true)]
		public static object RI_FKey_cascade_upd()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_check_ins

		[Sql.Function(Name="pg_catalog.\"RI_FKey_check_ins\"", ServerSideOnly=true)]
		public static object RI_FKey_check_ins()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_check_upd

		[Sql.Function(Name="pg_catalog.\"RI_FKey_check_upd\"", ServerSideOnly=true)]
		public static object RI_FKey_check_upd()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_noaction_del

		[Sql.Function(Name="pg_catalog.\"RI_FKey_noaction_del\"", ServerSideOnly=true)]
		public static object RI_FKey_noaction_del()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_noaction_upd

		[Sql.Function(Name="pg_catalog.\"RI_FKey_noaction_upd\"", ServerSideOnly=true)]
		public static object RI_FKey_noaction_upd()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_restrict_del

		[Sql.Function(Name="pg_catalog.\"RI_FKey_restrict_del\"", ServerSideOnly=true)]
		public static object RI_FKey_restrict_del()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_restrict_upd

		[Sql.Function(Name="pg_catalog.\"RI_FKey_restrict_upd\"", ServerSideOnly=true)]
		public static object RI_FKey_restrict_upd()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_setdefault_del

		[Sql.Function(Name="pg_catalog.\"RI_FKey_setdefault_del\"", ServerSideOnly=true)]
		public static object RI_FKey_setdefault_del()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_setdefault_upd

		[Sql.Function(Name="pg_catalog.\"RI_FKey_setdefault_upd\"", ServerSideOnly=true)]
		public static object RI_FKey_setdefault_upd()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_setnull_del

		[Sql.Function(Name="pg_catalog.\"RI_FKey_setnull_del\"", ServerSideOnly=true)]
		public static object RI_FKey_setnull_del()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region RI_FKey_setnull_upd

		[Sql.Function(Name="pg_catalog.\"RI_FKey_setnull_upd\"", ServerSideOnly=true)]
		public static object RI_FKey_setnull_upd()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region right

		[Sql.Function(Name="pg_catalog.right", ServerSideOnly=true)]
		public static string right(string par6161, int? par6162)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region round

		[Sql.Function(Name="pg_catalog.round", ServerSideOnly=true)]
		public static decimal? round(decimal? par6169)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region row_number

		[Sql.Function(Name="pg_catalog.row_number", ServerSideOnly=true)]
		public static long? row_number()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region row_security_active

		[Sql.Function(Name="pg_catalog.row_security_active", ServerSideOnly=true)]
		public static bool? row_security_active(string par6174)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region row_to_json

		[Sql.Function(Name="pg_catalog.row_to_json", ServerSideOnly=true)]
		public static string row_to_json(object par6178, bool? par6179)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region rpad

		[Sql.Function(Name="pg_catalog.rpad", ServerSideOnly=true)]
		public static string rpad(string par6185, int? par6186)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region rtrim

		[Sql.Function(Name="pg_catalog.rtrim", ServerSideOnly=true)]
		public static string rtrim(string par6191)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region satisfies_hash_partition

		[Sql.Function(Name="pg_catalog.satisfies_hash_partition", ServerSideOnly=true)]
		public static bool? satisfies_hash_partition(int? par6193, int? par6194, int? par6195, object par6196)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalargejoinsel

		[Sql.Function(Name="pg_catalog.scalargejoinsel", ServerSideOnly=true)]
		public static double? scalargejoinsel(object par6198, int? par6199, object par6200, short? par6201, object par6202)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalargesel

		[Sql.Function(Name="pg_catalog.scalargesel", ServerSideOnly=true)]
		public static double? scalargesel(object par6204, int? par6205, object par6206, int? par6207)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalargtjoinsel

		[Sql.Function(Name="pg_catalog.scalargtjoinsel", ServerSideOnly=true)]
		public static double? scalargtjoinsel(object par6209, int? par6210, object par6211, short? par6212, object par6213)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalargtsel

		[Sql.Function(Name="pg_catalog.scalargtsel", ServerSideOnly=true)]
		public static double? scalargtsel(object par6215, int? par6216, object par6217, int? par6218)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalarlejoinsel

		[Sql.Function(Name="pg_catalog.scalarlejoinsel", ServerSideOnly=true)]
		public static double? scalarlejoinsel(object par6220, int? par6221, object par6222, short? par6223, object par6224)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalarlesel

		[Sql.Function(Name="pg_catalog.scalarlesel", ServerSideOnly=true)]
		public static double? scalarlesel(object par6226, int? par6227, object par6228, int? par6229)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalarltjoinsel

		[Sql.Function(Name="pg_catalog.scalarltjoinsel", ServerSideOnly=true)]
		public static double? scalarltjoinsel(object par6231, int? par6232, object par6233, short? par6234, object par6235)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scalarltsel

		[Sql.Function(Name="pg_catalog.scalarltsel", ServerSideOnly=true)]
		public static double? scalarltsel(object par6237, int? par6238, object par6239, int? par6240)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region scale

		[Sql.Function(Name="pg_catalog.scale", ServerSideOnly=true)]
		public static int? scale(decimal? par6242)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region schema_to_xml

		[Sql.Function(Name="pg_catalog.schema_to_xml", ServerSideOnly=true)]
		public static string schema_to_xml(string schema, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region schema_to_xml_and_xmlschema

		[Sql.Function(Name="pg_catalog.schema_to_xml_and_xmlschema", ServerSideOnly=true)]
		public static string schema_to_xml_and_xmlschema(string schema, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region schema_to_xmlschema

		[Sql.Function(Name="pg_catalog.schema_to_xmlschema", ServerSideOnly=true)]
		public static string schema_to_xmlschema(string schema, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region session_user

		[Sql.Function(Name="pg_catalog.session_user", ServerSideOnly=true)]
		public static string session_user()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region set_bit

		[Sql.Function(Name="pg_catalog.set_bit", ServerSideOnly=true)]
		public static byte[] set_bit(byte[] par6252, int? par6253, int? par6254)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region set_byte

		[Sql.Function(Name="pg_catalog.set_byte", ServerSideOnly=true)]
		public static byte[] set_byte(byte[] par6256, int? par6257, int? par6258)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region set_config

		[Sql.Function(Name="pg_catalog.set_config", ServerSideOnly=true)]
		public static string set_config(string par6260, string par6261, bool? par6262)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region set_masklen

		[Sql.Function(Name="pg_catalog.set_masklen", ServerSideOnly=true)]
		public static NpgsqlInet? set_masklen(NpgsqlInet? par6267, int? par6268)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region setseed

		[Sql.Function(Name="pg_catalog.setseed", ServerSideOnly=true)]
		public static object setseed(double? par6269)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region setval

		[Sql.Function(Name="pg_catalog.setval", ServerSideOnly=true)]
		public static long? setval(object par6274, long? par6275, bool? par6276)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region setweight

		[Sql.Function(Name="pg_catalog.setweight", ServerSideOnly=true)]
		public static object setweight(object par6282, object par6283)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sha224

		[Sql.Function(Name="pg_catalog.sha224", ServerSideOnly=true)]
		public static byte[] sha224(byte[] par6285)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sha256

		[Sql.Function(Name="pg_catalog.sha256", ServerSideOnly=true)]
		public static byte[] sha256(byte[] par6287)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sha384

		[Sql.Function(Name="pg_catalog.sha384", ServerSideOnly=true)]
		public static byte[] sha384(byte[] par6289)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sha512

		[Sql.Function(Name="pg_catalog.sha512", ServerSideOnly=true)]
		public static byte[] sha512(byte[] par6291)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region shell_in

		[Sql.Function(Name="pg_catalog.shell_in", ServerSideOnly=true)]
		public static object shell_in(object par6293)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region shell_out

		[Sql.Function(Name="pg_catalog.shell_out", ServerSideOnly=true)]
		public static object shell_out(object par6295)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region shift_jis_2004_to_euc_jis_2004

		[Sql.Function(Name="pg_catalog.shift_jis_2004_to_euc_jis_2004", ServerSideOnly=true)]
		public static object shift_jis_2004_to_euc_jis_2004(int? par6296, int? par6297, object par6298, object par6299, int? par6300)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region shift_jis_2004_to_utf8

		[Sql.Function(Name="pg_catalog.shift_jis_2004_to_utf8", ServerSideOnly=true)]
		public static object shift_jis_2004_to_utf8(int? par6301, int? par6302, object par6303, object par6304, int? par6305)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region shobj_description

		[Sql.Function(Name="pg_catalog.shobj_description", ServerSideOnly=true)]
		public static string shobj_description(int? par6307, string par6308)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sign

		[Sql.Function(Name="pg_catalog.sign", ServerSideOnly=true)]
		public static double? sign(double? par6312)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region similar_escape

		[Sql.Function(Name="pg_catalog.similar_escape", ServerSideOnly=true)]
		public static string similar_escape(string par6314, string par6315)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sin

		[Sql.Function(Name="pg_catalog.sin", ServerSideOnly=true)]
		public static double? sin(double? par6317)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sind

		[Sql.Function(Name="pg_catalog.sind", ServerSideOnly=true)]
		public static double? sind(double? par6319)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sjis_to_euc_jp

		[Sql.Function(Name="pg_catalog.sjis_to_euc_jp", ServerSideOnly=true)]
		public static object sjis_to_euc_jp(int? par6320, int? par6321, object par6322, object par6323, int? par6324)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sjis_to_mic

		[Sql.Function(Name="pg_catalog.sjis_to_mic", ServerSideOnly=true)]
		public static object sjis_to_mic(int? par6325, int? par6326, object par6327, object par6328, int? par6329)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sjis_to_utf8

		[Sql.Function(Name="pg_catalog.sjis_to_utf8", ServerSideOnly=true)]
		public static object sjis_to_utf8(int? par6330, int? par6331, object par6332, object par6333, int? par6334)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region slope

		[Sql.Function(Name="pg_catalog.slope", ServerSideOnly=true)]
		public static double? slope(NpgsqlPoint? par6336, NpgsqlPoint? par6337)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region smgreq

		[Sql.Function(Name="pg_catalog.smgreq", ServerSideOnly=true)]
		public static bool? smgreq(object par6339, object par6340)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region smgrin

		[Sql.Function(Name="pg_catalog.smgrin", ServerSideOnly=true)]
		public static object smgrin(object par6342)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region smgrne

		[Sql.Function(Name="pg_catalog.smgrne", ServerSideOnly=true)]
		public static bool? smgrne(object par6344, object par6345)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region smgrout

		[Sql.Function(Name="pg_catalog.smgrout", ServerSideOnly=true)]
		public static object smgrout(object par6347)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_bbox_quad_config

		[Sql.Function(Name="pg_catalog.spg_bbox_quad_config", ServerSideOnly=true)]
		public static object spg_bbox_quad_config(object par6348, object par6349)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_box_quad_choose

		[Sql.Function(Name="pg_catalog.spg_box_quad_choose", ServerSideOnly=true)]
		public static object spg_box_quad_choose(object par6350, object par6351)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_box_quad_config

		[Sql.Function(Name="pg_catalog.spg_box_quad_config", ServerSideOnly=true)]
		public static object spg_box_quad_config(object par6352, object par6353)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_box_quad_inner_consistent

		[Sql.Function(Name="pg_catalog.spg_box_quad_inner_consistent", ServerSideOnly=true)]
		public static object spg_box_quad_inner_consistent(object par6354, object par6355)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_box_quad_leaf_consistent

		[Sql.Function(Name="pg_catalog.spg_box_quad_leaf_consistent", ServerSideOnly=true)]
		public static bool? spg_box_quad_leaf_consistent(object par6357, object par6358)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_box_quad_picksplit

		[Sql.Function(Name="pg_catalog.spg_box_quad_picksplit", ServerSideOnly=true)]
		public static object spg_box_quad_picksplit(object par6359, object par6360)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spghandler

		[Sql.Function(Name="pg_catalog.spghandler", ServerSideOnly=true)]
		public static object spghandler(object par6362)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_kd_choose

		[Sql.Function(Name="pg_catalog.spg_kd_choose", ServerSideOnly=true)]
		public static object spg_kd_choose(object par6363, object par6364)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_kd_config

		[Sql.Function(Name="pg_catalog.spg_kd_config", ServerSideOnly=true)]
		public static object spg_kd_config(object par6365, object par6366)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_kd_inner_consistent

		[Sql.Function(Name="pg_catalog.spg_kd_inner_consistent", ServerSideOnly=true)]
		public static object spg_kd_inner_consistent(object par6367, object par6368)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_kd_picksplit

		[Sql.Function(Name="pg_catalog.spg_kd_picksplit", ServerSideOnly=true)]
		public static object spg_kd_picksplit(object par6369, object par6370)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_poly_quad_compress

		[Sql.Function(Name="pg_catalog.spg_poly_quad_compress", ServerSideOnly=true)]
		public static NpgsqlBox? spg_poly_quad_compress(NpgsqlPolygon? par6372)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_quad_choose

		[Sql.Function(Name="pg_catalog.spg_quad_choose", ServerSideOnly=true)]
		public static object spg_quad_choose(object par6373, object par6374)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_quad_config

		[Sql.Function(Name="pg_catalog.spg_quad_config", ServerSideOnly=true)]
		public static object spg_quad_config(object par6375, object par6376)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_quad_inner_consistent

		[Sql.Function(Name="pg_catalog.spg_quad_inner_consistent", ServerSideOnly=true)]
		public static object spg_quad_inner_consistent(object par6377, object par6378)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_quad_leaf_consistent

		[Sql.Function(Name="pg_catalog.spg_quad_leaf_consistent", ServerSideOnly=true)]
		public static bool? spg_quad_leaf_consistent(object par6380, object par6381)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_quad_picksplit

		[Sql.Function(Name="pg_catalog.spg_quad_picksplit", ServerSideOnly=true)]
		public static object spg_quad_picksplit(object par6382, object par6383)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_range_quad_choose

		[Sql.Function(Name="pg_catalog.spg_range_quad_choose", ServerSideOnly=true)]
		public static object spg_range_quad_choose(object par6384, object par6385)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_range_quad_config

		[Sql.Function(Name="pg_catalog.spg_range_quad_config", ServerSideOnly=true)]
		public static object spg_range_quad_config(object par6386, object par6387)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_range_quad_inner_consistent

		[Sql.Function(Name="pg_catalog.spg_range_quad_inner_consistent", ServerSideOnly=true)]
		public static object spg_range_quad_inner_consistent(object par6388, object par6389)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_range_quad_leaf_consistent

		[Sql.Function(Name="pg_catalog.spg_range_quad_leaf_consistent", ServerSideOnly=true)]
		public static bool? spg_range_quad_leaf_consistent(object par6391, object par6392)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_range_quad_picksplit

		[Sql.Function(Name="pg_catalog.spg_range_quad_picksplit", ServerSideOnly=true)]
		public static object spg_range_quad_picksplit(object par6393, object par6394)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_text_choose

		[Sql.Function(Name="pg_catalog.spg_text_choose", ServerSideOnly=true)]
		public static object spg_text_choose(object par6395, object par6396)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_text_config

		[Sql.Function(Name="pg_catalog.spg_text_config", ServerSideOnly=true)]
		public static object spg_text_config(object par6397, object par6398)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_text_inner_consistent

		[Sql.Function(Name="pg_catalog.spg_text_inner_consistent", ServerSideOnly=true)]
		public static object spg_text_inner_consistent(object par6399, object par6400)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_text_leaf_consistent

		[Sql.Function(Name="pg_catalog.spg_text_leaf_consistent", ServerSideOnly=true)]
		public static bool? spg_text_leaf_consistent(object par6402, object par6403)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region spg_text_picksplit

		[Sql.Function(Name="pg_catalog.spg_text_picksplit", ServerSideOnly=true)]
		public static object spg_text_picksplit(object par6404, object par6405)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region split_part

		[Sql.Function(Name="pg_catalog.split_part", ServerSideOnly=true)]
		public static string split_part(string par6407, string par6408, int? par6409)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sqrt

		[Sql.Function(Name="pg_catalog.sqrt", ServerSideOnly=true)]
		public static decimal? sqrt(decimal? par6413)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region starts_with

		[Sql.Function(Name="pg_catalog.starts_with", ServerSideOnly=true)]
		public static bool? starts_with(string par6415, string par6416)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region statement_timestamp

		[Sql.Function(Name="pg_catalog.statement_timestamp", ServerSideOnly=true)]
		public static DateTimeOffset? statement_timestamp()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region stddev

		[Sql.Function(Name="pg_catalog.stddev", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static decimal? stddev<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, decimal?>> par6429)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region stddev_pop

		[Sql.Function(Name="pg_catalog.stddev_pop", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static decimal? stddev_pop<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, decimal?>> par6441)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region stddev_samp

		[Sql.Function(Name="pg_catalog.stddev_samp", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static decimal? stddev_samp<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, decimal?>> par6453)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region string_agg

		[Sql.Function(Name="pg_catalog.string_agg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0, 1 })]
		public static byte[] string_agg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, byte[]>> par6458, Expression<Func<TSource, byte[]>> par6459)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region string_agg_finalfn

		[Sql.Function(Name="pg_catalog.string_agg_finalfn", ServerSideOnly=true)]
		public static string string_agg_finalfn(object par6461)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region string_agg_transfn

		[Sql.Function(Name="pg_catalog.string_agg_transfn", ServerSideOnly=true)]
		public static object string_agg_transfn(object par6463, string par6464, string par6465)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region string_to_array

		[Sql.Function(Name="pg_catalog.string_to_array", ServerSideOnly=true)]
		public static object string_to_array(string par6471, string par6472)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region strip

		[Sql.Function(Name="pg_catalog.strip", ServerSideOnly=true)]
		public static object strip(object par6474)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region strpos

		[Sql.Function(Name="pg_catalog.strpos", ServerSideOnly=true)]
		public static int? strpos(string par6476, string par6477)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region substr

		[Sql.Function(Name="pg_catalog.substr", ServerSideOnly=true)]
		public static string substr(string par6490, int? par6491)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region substring

		[Sql.Function(Name="pg_catalog.substring", ServerSideOnly=true)]
		public static string substring(string par6518, int? par6519)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region sum

		[Sql.Function(Name="pg_catalog.sum", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static decimal? sum<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, decimal?>> par6535)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region suppress_redundant_updates_trigger

		[Sql.Function(Name="pg_catalog.suppress_redundant_updates_trigger", ServerSideOnly=true)]
		public static object suppress_redundant_updates_trigger()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region system

		[Sql.Function(Name="pg_catalog.system", ServerSideOnly=true)]
		public static object system(object par6538)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region table_to_xml

		[Sql.Function(Name="pg_catalog.table_to_xml", ServerSideOnly=true)]
		public static string table_to_xml(object tbl, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region table_to_xml_and_xmlschema

		[Sql.Function(Name="pg_catalog.table_to_xml_and_xmlschema", ServerSideOnly=true)]
		public static string table_to_xml_and_xmlschema(object tbl, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region table_to_xmlschema

		[Sql.Function(Name="pg_catalog.table_to_xmlschema", ServerSideOnly=true)]
		public static string table_to_xmlschema(object tbl, bool? nulls, bool? tableforest, string targetns)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tan

		[Sql.Function(Name="pg_catalog.tan", ServerSideOnly=true)]
		public static double? tan(double? par6543)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tand

		[Sql.Function(Name="pg_catalog.tand", ServerSideOnly=true)]
		public static double? tand(double? par6545)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text

		[Sql.Function(Name="pg_catalog.text", ServerSideOnly=true)]
		public static string text(object par6557)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textanycat

		[Sql.Function(Name="pg_catalog.textanycat", ServerSideOnly=true)]
		public static string textanycat(string par6559, object par6560)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textcat

		[Sql.Function(Name="pg_catalog.textcat", ServerSideOnly=true)]
		public static string textcat(string par6562, string par6563)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region texteq

		[Sql.Function(Name="pg_catalog.texteq", ServerSideOnly=true)]
		public static bool? texteq(string par6565, string par6566)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_ge

		[Sql.Function(Name="pg_catalog.text_ge", ServerSideOnly=true)]
		public static bool? text_ge(string par6568, string par6569)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_gt

		[Sql.Function(Name="pg_catalog.text_gt", ServerSideOnly=true)]
		public static bool? text_gt(string par6571, string par6572)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region texticlike

		[Sql.Function(Name="pg_catalog.texticlike", ServerSideOnly=true)]
		public static bool? texticlike(string par6574, string par6575)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region texticnlike

		[Sql.Function(Name="pg_catalog.texticnlike", ServerSideOnly=true)]
		public static bool? texticnlike(string par6577, string par6578)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region texticregexeq

		[Sql.Function(Name="pg_catalog.texticregexeq", ServerSideOnly=true)]
		public static bool? texticregexeq(string par6580, string par6581)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region texticregexne

		[Sql.Function(Name="pg_catalog.texticregexne", ServerSideOnly=true)]
		public static bool? texticregexne(string par6583, string par6584)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textin

		[Sql.Function(Name="pg_catalog.textin", ServerSideOnly=true)]
		public static string textin(object par6586)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_larger

		[Sql.Function(Name="pg_catalog.text_larger", ServerSideOnly=true)]
		public static string text_larger(string par6588, string par6589)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_le

		[Sql.Function(Name="pg_catalog.text_le", ServerSideOnly=true)]
		public static bool? text_le(string par6591, string par6592)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textlen

		[Sql.Function(Name="pg_catalog.textlen", ServerSideOnly=true)]
		public static int? textlen(string par6594)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textlike

		[Sql.Function(Name="pg_catalog.textlike", ServerSideOnly=true)]
		public static bool? textlike(string par6596, string par6597)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_lt

		[Sql.Function(Name="pg_catalog.text_lt", ServerSideOnly=true)]
		public static bool? text_lt(string par6599, string par6600)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textne

		[Sql.Function(Name="pg_catalog.textne", ServerSideOnly=true)]
		public static bool? textne(string par6602, string par6603)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textnlike

		[Sql.Function(Name="pg_catalog.textnlike", ServerSideOnly=true)]
		public static bool? textnlike(string par6605, string par6606)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textout

		[Sql.Function(Name="pg_catalog.textout", ServerSideOnly=true)]
		public static object textout(string par6608)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_pattern_ge

		[Sql.Function(Name="pg_catalog.text_pattern_ge", ServerSideOnly=true)]
		public static bool? text_pattern_ge(string par6610, string par6611)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_pattern_gt

		[Sql.Function(Name="pg_catalog.text_pattern_gt", ServerSideOnly=true)]
		public static bool? text_pattern_gt(string par6613, string par6614)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_pattern_le

		[Sql.Function(Name="pg_catalog.text_pattern_le", ServerSideOnly=true)]
		public static bool? text_pattern_le(string par6616, string par6617)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_pattern_lt

		[Sql.Function(Name="pg_catalog.text_pattern_lt", ServerSideOnly=true)]
		public static bool? text_pattern_lt(string par6619, string par6620)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textrecv

		[Sql.Function(Name="pg_catalog.textrecv", ServerSideOnly=true)]
		public static string textrecv(object par6622)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textregexeq

		[Sql.Function(Name="pg_catalog.textregexeq", ServerSideOnly=true)]
		public static bool? textregexeq(string par6624, string par6625)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textregexne

		[Sql.Function(Name="pg_catalog.textregexne", ServerSideOnly=true)]
		public static bool? textregexne(string par6627, string par6628)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region textsend

		[Sql.Function(Name="pg_catalog.textsend", ServerSideOnly=true)]
		public static byte[] textsend(string par6630)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region text_smaller

		[Sql.Function(Name="pg_catalog.text_smaller", ServerSideOnly=true)]
		public static string text_smaller(string par6632, string par6633)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region thesaurus_init

		[Sql.Function(Name="pg_catalog.thesaurus_init", ServerSideOnly=true)]
		public static object thesaurus_init(object par6635)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region thesaurus_lexize

		[Sql.Function(Name="pg_catalog.thesaurus_lexize", ServerSideOnly=true)]
		public static object thesaurus_lexize(object par6637, object par6638, object par6639, object par6640)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tideq

		[Sql.Function(Name="pg_catalog.tideq", ServerSideOnly=true)]
		public static bool? tideq(object par6642, object par6643)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidge

		[Sql.Function(Name="pg_catalog.tidge", ServerSideOnly=true)]
		public static bool? tidge(object par6645, object par6646)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidgt

		[Sql.Function(Name="pg_catalog.tidgt", ServerSideOnly=true)]
		public static bool? tidgt(object par6648, object par6649)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidin

		[Sql.Function(Name="pg_catalog.tidin", ServerSideOnly=true)]
		public static object tidin(object par6651)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidlarger

		[Sql.Function(Name="pg_catalog.tidlarger", ServerSideOnly=true)]
		public static object tidlarger(object par6653, object par6654)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidle

		[Sql.Function(Name="pg_catalog.tidle", ServerSideOnly=true)]
		public static bool? tidle(object par6656, object par6657)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidlt

		[Sql.Function(Name="pg_catalog.tidlt", ServerSideOnly=true)]
		public static bool? tidlt(object par6659, object par6660)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidne

		[Sql.Function(Name="pg_catalog.tidne", ServerSideOnly=true)]
		public static bool? tidne(object par6662, object par6663)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidout

		[Sql.Function(Name="pg_catalog.tidout", ServerSideOnly=true)]
		public static object tidout(object par6665)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidrecv

		[Sql.Function(Name="pg_catalog.tidrecv", ServerSideOnly=true)]
		public static object tidrecv(object par6667)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidsend

		[Sql.Function(Name="pg_catalog.tidsend", ServerSideOnly=true)]
		public static byte[] tidsend(object par6669)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tidsmaller

		[Sql.Function(Name="pg_catalog.tidsmaller", ServerSideOnly=true)]
		public static object tidsmaller(object par6671, object par6672)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time

		[Sql.Function(Name="pg_catalog.time", ServerSideOnly=true)]
		public static TimeSpan? time(DateTimeOffset? par6685)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_cmp

		[Sql.Function(Name="pg_catalog.time_cmp", ServerSideOnly=true)]
		public static int? time_cmp(TimeSpan? par6687, TimeSpan? par6688)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timedate_pl

		[Sql.Function(Name="pg_catalog.timedate_pl", ServerSideOnly=true)]
		public static DateTime? timedate_pl(TimeSpan? par6690, NpgsqlDate? par6691)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_eq

		[Sql.Function(Name="pg_catalog.time_eq", ServerSideOnly=true)]
		public static bool? time_eq(TimeSpan? par6693, TimeSpan? par6694)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_ge

		[Sql.Function(Name="pg_catalog.time_ge", ServerSideOnly=true)]
		public static bool? time_ge(TimeSpan? par6696, TimeSpan? par6697)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_gt

		[Sql.Function(Name="pg_catalog.time_gt", ServerSideOnly=true)]
		public static bool? time_gt(TimeSpan? par6699, TimeSpan? par6700)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_hash

		[Sql.Function(Name="pg_catalog.time_hash", ServerSideOnly=true)]
		public static int? time_hash(TimeSpan? par6702)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_hash_extended

		[Sql.Function(Name="pg_catalog.time_hash_extended", ServerSideOnly=true)]
		public static long? time_hash_extended(TimeSpan? par6704, long? par6705)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_in

		[Sql.Function(Name="pg_catalog.time_in", ServerSideOnly=true)]
		public static TimeSpan? time_in(object par6707, int? par6708, int? par6709)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_larger

		[Sql.Function(Name="pg_catalog.time_larger", ServerSideOnly=true)]
		public static TimeSpan? time_larger(TimeSpan? par6711, TimeSpan? par6712)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_le

		[Sql.Function(Name="pg_catalog.time_le", ServerSideOnly=true)]
		public static bool? time_le(TimeSpan? par6714, TimeSpan? par6715)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_lt

		[Sql.Function(Name="pg_catalog.time_lt", ServerSideOnly=true)]
		public static bool? time_lt(TimeSpan? par6717, TimeSpan? par6718)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timemi

		[Sql.Function(Name="pg_catalog.timemi", ServerSideOnly=true)]
		public static object timemi(object par6720, object par6721)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_mi_interval

		[Sql.Function(Name="pg_catalog.time_mi_interval", ServerSideOnly=true)]
		public static TimeSpan? time_mi_interval(TimeSpan? par6723, NpgsqlTimeSpan? par6724)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_mi_time

		[Sql.Function(Name="pg_catalog.time_mi_time", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? time_mi_time(TimeSpan? par6726, TimeSpan? par6727)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_ne

		[Sql.Function(Name="pg_catalog.time_ne", ServerSideOnly=true)]
		public static bool? time_ne(TimeSpan? par6729, TimeSpan? par6730)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timenow

		[Sql.Function(Name="pg_catalog.timenow", ServerSideOnly=true)]
		public static object timenow()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timeofday

		[Sql.Function(Name="pg_catalog.timeofday", ServerSideOnly=true)]
		public static string timeofday()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_out

		[Sql.Function(Name="pg_catalog.time_out", ServerSideOnly=true)]
		public static object time_out(TimeSpan? par6734)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timepl

		[Sql.Function(Name="pg_catalog.timepl", ServerSideOnly=true)]
		public static object timepl(object par6736, object par6737)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_pl_interval

		[Sql.Function(Name="pg_catalog.time_pl_interval", ServerSideOnly=true)]
		public static TimeSpan? time_pl_interval(TimeSpan? par6739, NpgsqlTimeSpan? par6740)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_recv

		[Sql.Function(Name="pg_catalog.time_recv", ServerSideOnly=true)]
		public static TimeSpan? time_recv(object par6742, int? par6743, int? par6744)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_send

		[Sql.Function(Name="pg_catalog.time_send", ServerSideOnly=true)]
		public static byte[] time_send(TimeSpan? par6746)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_smaller

		[Sql.Function(Name="pg_catalog.time_smaller", ServerSideOnly=true)]
		public static TimeSpan? time_smaller(TimeSpan? par6748, TimeSpan? par6749)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp

		[Sql.Function(Name="pg_catalog.timestamp", ServerSideOnly=true)]
		public static DateTime? timestamp(DateTimeOffset? par6761)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_cmp

		[Sql.Function(Name="pg_catalog.timestamp_cmp", ServerSideOnly=true)]
		public static int? timestamp_cmp(DateTime? par6763, DateTime? par6764)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_cmp_date

		[Sql.Function(Name="pg_catalog.timestamp_cmp_date", ServerSideOnly=true)]
		public static int? timestamp_cmp_date(DateTime? par6766, NpgsqlDate? par6767)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_cmp_timestamptz

		[Sql.Function(Name="pg_catalog.timestamp_cmp_timestamptz", ServerSideOnly=true)]
		public static int? timestamp_cmp_timestamptz(DateTime? par6769, DateTimeOffset? par6770)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_eq

		[Sql.Function(Name="pg_catalog.timestamp_eq", ServerSideOnly=true)]
		public static bool? timestamp_eq(DateTime? par6772, DateTime? par6773)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_eq_date

		[Sql.Function(Name="pg_catalog.timestamp_eq_date", ServerSideOnly=true)]
		public static bool? timestamp_eq_date(DateTime? par6775, NpgsqlDate? par6776)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_eq_timestamptz

		[Sql.Function(Name="pg_catalog.timestamp_eq_timestamptz", ServerSideOnly=true)]
		public static bool? timestamp_eq_timestamptz(DateTime? par6778, DateTimeOffset? par6779)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_ge

		[Sql.Function(Name="pg_catalog.timestamp_ge", ServerSideOnly=true)]
		public static bool? timestamp_ge(DateTime? par6781, DateTime? par6782)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_ge_date

		[Sql.Function(Name="pg_catalog.timestamp_ge_date", ServerSideOnly=true)]
		public static bool? timestamp_ge_date(DateTime? par6784, NpgsqlDate? par6785)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_ge_timestamptz

		[Sql.Function(Name="pg_catalog.timestamp_ge_timestamptz", ServerSideOnly=true)]
		public static bool? timestamp_ge_timestamptz(DateTime? par6787, DateTimeOffset? par6788)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_gt

		[Sql.Function(Name="pg_catalog.timestamp_gt", ServerSideOnly=true)]
		public static bool? timestamp_gt(DateTime? par6790, DateTime? par6791)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_gt_date

		[Sql.Function(Name="pg_catalog.timestamp_gt_date", ServerSideOnly=true)]
		public static bool? timestamp_gt_date(DateTime? par6793, NpgsqlDate? par6794)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_gt_timestamptz

		[Sql.Function(Name="pg_catalog.timestamp_gt_timestamptz", ServerSideOnly=true)]
		public static bool? timestamp_gt_timestamptz(DateTime? par6796, DateTimeOffset? par6797)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_hash

		[Sql.Function(Name="pg_catalog.timestamp_hash", ServerSideOnly=true)]
		public static int? timestamp_hash(DateTime? par6799)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_hash_extended

		[Sql.Function(Name="pg_catalog.timestamp_hash_extended", ServerSideOnly=true)]
		public static long? timestamp_hash_extended(DateTime? par6801, long? par6802)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_in

		[Sql.Function(Name="pg_catalog.timestamp_in", ServerSideOnly=true)]
		public static DateTime? timestamp_in(object par6804, int? par6805, int? par6806)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_izone_transform

		[Sql.Function(Name="pg_catalog.timestamp_izone_transform", ServerSideOnly=true)]
		public static object timestamp_izone_transform(object par6808)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_larger

		[Sql.Function(Name="pg_catalog.timestamp_larger", ServerSideOnly=true)]
		public static DateTime? timestamp_larger(DateTime? par6810, DateTime? par6811)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_le

		[Sql.Function(Name="pg_catalog.timestamp_le", ServerSideOnly=true)]
		public static bool? timestamp_le(DateTime? par6813, DateTime? par6814)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_le_date

		[Sql.Function(Name="pg_catalog.timestamp_le_date", ServerSideOnly=true)]
		public static bool? timestamp_le_date(DateTime? par6816, NpgsqlDate? par6817)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_le_timestamptz

		[Sql.Function(Name="pg_catalog.timestamp_le_timestamptz", ServerSideOnly=true)]
		public static bool? timestamp_le_timestamptz(DateTime? par6819, DateTimeOffset? par6820)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_lt

		[Sql.Function(Name="pg_catalog.timestamp_lt", ServerSideOnly=true)]
		public static bool? timestamp_lt(DateTime? par6822, DateTime? par6823)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_lt_date

		[Sql.Function(Name="pg_catalog.timestamp_lt_date", ServerSideOnly=true)]
		public static bool? timestamp_lt_date(DateTime? par6825, NpgsqlDate? par6826)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_lt_timestamptz

		[Sql.Function(Name="pg_catalog.timestamp_lt_timestamptz", ServerSideOnly=true)]
		public static bool? timestamp_lt_timestamptz(DateTime? par6828, DateTimeOffset? par6829)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_mi

		[Sql.Function(Name="pg_catalog.timestamp_mi", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? timestamp_mi(DateTime? par6831, DateTime? par6832)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_mi_interval

		[Sql.Function(Name="pg_catalog.timestamp_mi_interval", ServerSideOnly=true)]
		public static DateTime? timestamp_mi_interval(DateTime? par6834, NpgsqlTimeSpan? par6835)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_ne

		[Sql.Function(Name="pg_catalog.timestamp_ne", ServerSideOnly=true)]
		public static bool? timestamp_ne(DateTime? par6837, DateTime? par6838)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_ne_date

		[Sql.Function(Name="pg_catalog.timestamp_ne_date", ServerSideOnly=true)]
		public static bool? timestamp_ne_date(DateTime? par6840, NpgsqlDate? par6841)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_ne_timestamptz

		[Sql.Function(Name="pg_catalog.timestamp_ne_timestamptz", ServerSideOnly=true)]
		public static bool? timestamp_ne_timestamptz(DateTime? par6843, DateTimeOffset? par6844)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_out

		[Sql.Function(Name="pg_catalog.timestamp_out", ServerSideOnly=true)]
		public static object timestamp_out(DateTime? par6846)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_pl_interval

		[Sql.Function(Name="pg_catalog.timestamp_pl_interval", ServerSideOnly=true)]
		public static DateTime? timestamp_pl_interval(DateTime? par6848, NpgsqlTimeSpan? par6849)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_recv

		[Sql.Function(Name="pg_catalog.timestamp_recv", ServerSideOnly=true)]
		public static DateTime? timestamp_recv(object par6851, int? par6852, int? par6853)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_send

		[Sql.Function(Name="pg_catalog.timestamp_send", ServerSideOnly=true)]
		public static byte[] timestamp_send(DateTime? par6855)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_smaller

		[Sql.Function(Name="pg_catalog.timestamp_smaller", ServerSideOnly=true)]
		public static DateTime? timestamp_smaller(DateTime? par6857, DateTime? par6858)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_sortsupport

		[Sql.Function(Name="pg_catalog.timestamp_sortsupport", ServerSideOnly=true)]
		public static object timestamp_sortsupport(object par6859)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_transform

		[Sql.Function(Name="pg_catalog.timestamp_transform", ServerSideOnly=true)]
		public static object timestamp_transform(object par6861)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptypmodin

		[Sql.Function(Name="pg_catalog.timestamptypmodin", ServerSideOnly=true)]
		public static int? timestamptypmodin(object par6863)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptypmodout

		[Sql.Function(Name="pg_catalog.timestamptypmodout", ServerSideOnly=true)]
		public static object timestamptypmodout(int? par6865)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz

		[Sql.Function(Name="pg_catalog.timestamptz", ServerSideOnly=true)]
		public static DateTimeOffset? timestamptz(DateTime? par6880)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_cmp

		[Sql.Function(Name="pg_catalog.timestamptz_cmp", ServerSideOnly=true)]
		public static int? timestamptz_cmp(DateTimeOffset? par6882, DateTimeOffset? par6883)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_cmp_date

		[Sql.Function(Name="pg_catalog.timestamptz_cmp_date", ServerSideOnly=true)]
		public static int? timestamptz_cmp_date(DateTimeOffset? par6885, NpgsqlDate? par6886)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_cmp_timestamp

		[Sql.Function(Name="pg_catalog.timestamptz_cmp_timestamp", ServerSideOnly=true)]
		public static int? timestamptz_cmp_timestamp(DateTimeOffset? par6888, DateTime? par6889)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_eq

		[Sql.Function(Name="pg_catalog.timestamptz_eq", ServerSideOnly=true)]
		public static bool? timestamptz_eq(DateTimeOffset? par6891, DateTimeOffset? par6892)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_eq_date

		[Sql.Function(Name="pg_catalog.timestamptz_eq_date", ServerSideOnly=true)]
		public static bool? timestamptz_eq_date(DateTimeOffset? par6894, NpgsqlDate? par6895)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_eq_timestamp

		[Sql.Function(Name="pg_catalog.timestamptz_eq_timestamp", ServerSideOnly=true)]
		public static bool? timestamptz_eq_timestamp(DateTimeOffset? par6897, DateTime? par6898)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_ge

		[Sql.Function(Name="pg_catalog.timestamptz_ge", ServerSideOnly=true)]
		public static bool? timestamptz_ge(DateTimeOffset? par6900, DateTimeOffset? par6901)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_ge_date

		[Sql.Function(Name="pg_catalog.timestamptz_ge_date", ServerSideOnly=true)]
		public static bool? timestamptz_ge_date(DateTimeOffset? par6903, NpgsqlDate? par6904)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_ge_timestamp

		[Sql.Function(Name="pg_catalog.timestamptz_ge_timestamp", ServerSideOnly=true)]
		public static bool? timestamptz_ge_timestamp(DateTimeOffset? par6906, DateTime? par6907)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_gt

		[Sql.Function(Name="pg_catalog.timestamptz_gt", ServerSideOnly=true)]
		public static bool? timestamptz_gt(DateTimeOffset? par6909, DateTimeOffset? par6910)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_gt_date

		[Sql.Function(Name="pg_catalog.timestamptz_gt_date", ServerSideOnly=true)]
		public static bool? timestamptz_gt_date(DateTimeOffset? par6912, NpgsqlDate? par6913)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_gt_timestamp

		[Sql.Function(Name="pg_catalog.timestamptz_gt_timestamp", ServerSideOnly=true)]
		public static bool? timestamptz_gt_timestamp(DateTimeOffset? par6915, DateTime? par6916)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_in

		[Sql.Function(Name="pg_catalog.timestamptz_in", ServerSideOnly=true)]
		public static DateTimeOffset? timestamptz_in(object par6918, int? par6919, int? par6920)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_larger

		[Sql.Function(Name="pg_catalog.timestamptz_larger", ServerSideOnly=true)]
		public static DateTimeOffset? timestamptz_larger(DateTimeOffset? par6922, DateTimeOffset? par6923)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_le

		[Sql.Function(Name="pg_catalog.timestamptz_le", ServerSideOnly=true)]
		public static bool? timestamptz_le(DateTimeOffset? par6925, DateTimeOffset? par6926)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_le_date

		[Sql.Function(Name="pg_catalog.timestamptz_le_date", ServerSideOnly=true)]
		public static bool? timestamptz_le_date(DateTimeOffset? par6928, NpgsqlDate? par6929)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_le_timestamp

		[Sql.Function(Name="pg_catalog.timestamptz_le_timestamp", ServerSideOnly=true)]
		public static bool? timestamptz_le_timestamp(DateTimeOffset? par6931, DateTime? par6932)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_lt

		[Sql.Function(Name="pg_catalog.timestamptz_lt", ServerSideOnly=true)]
		public static bool? timestamptz_lt(DateTimeOffset? par6934, DateTimeOffset? par6935)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_lt_date

		[Sql.Function(Name="pg_catalog.timestamptz_lt_date", ServerSideOnly=true)]
		public static bool? timestamptz_lt_date(DateTimeOffset? par6937, NpgsqlDate? par6938)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_lt_timestamp

		[Sql.Function(Name="pg_catalog.timestamptz_lt_timestamp", ServerSideOnly=true)]
		public static bool? timestamptz_lt_timestamp(DateTimeOffset? par6940, DateTime? par6941)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_mi

		[Sql.Function(Name="pg_catalog.timestamptz_mi", ServerSideOnly=true)]
		public static NpgsqlTimeSpan? timestamptz_mi(DateTimeOffset? par6943, DateTimeOffset? par6944)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_mi_interval

		[Sql.Function(Name="pg_catalog.timestamptz_mi_interval", ServerSideOnly=true)]
		public static DateTimeOffset? timestamptz_mi_interval(DateTimeOffset? par6946, NpgsqlTimeSpan? par6947)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_ne

		[Sql.Function(Name="pg_catalog.timestamptz_ne", ServerSideOnly=true)]
		public static bool? timestamptz_ne(DateTimeOffset? par6949, DateTimeOffset? par6950)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_ne_date

		[Sql.Function(Name="pg_catalog.timestamptz_ne_date", ServerSideOnly=true)]
		public static bool? timestamptz_ne_date(DateTimeOffset? par6952, NpgsqlDate? par6953)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_ne_timestamp

		[Sql.Function(Name="pg_catalog.timestamptz_ne_timestamp", ServerSideOnly=true)]
		public static bool? timestamptz_ne_timestamp(DateTimeOffset? par6955, DateTime? par6956)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_out

		[Sql.Function(Name="pg_catalog.timestamptz_out", ServerSideOnly=true)]
		public static object timestamptz_out(DateTimeOffset? par6958)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_pl_interval

		[Sql.Function(Name="pg_catalog.timestamptz_pl_interval", ServerSideOnly=true)]
		public static DateTimeOffset? timestamptz_pl_interval(DateTimeOffset? par6960, NpgsqlTimeSpan? par6961)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_recv

		[Sql.Function(Name="pg_catalog.timestamptz_recv", ServerSideOnly=true)]
		public static DateTimeOffset? timestamptz_recv(object par6963, int? par6964, int? par6965)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_send

		[Sql.Function(Name="pg_catalog.timestamptz_send", ServerSideOnly=true)]
		public static byte[] timestamptz_send(DateTimeOffset? par6967)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptz_smaller

		[Sql.Function(Name="pg_catalog.timestamptz_smaller", ServerSideOnly=true)]
		public static DateTimeOffset? timestamptz_smaller(DateTimeOffset? par6969, DateTimeOffset? par6970)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptztypmodin

		[Sql.Function(Name="pg_catalog.timestamptztypmodin", ServerSideOnly=true)]
		public static int? timestamptztypmodin(object par6972)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamptztypmodout

		[Sql.Function(Name="pg_catalog.timestamptztypmodout", ServerSideOnly=true)]
		public static object timestamptztypmodout(int? par6974)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timestamp_zone_transform

		[Sql.Function(Name="pg_catalog.timestamp_zone_transform", ServerSideOnly=true)]
		public static object timestamp_zone_transform(object par6976)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region time_transform

		[Sql.Function(Name="pg_catalog.time_transform", ServerSideOnly=true)]
		public static object time_transform(object par6978)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetypmodin

		[Sql.Function(Name="pg_catalog.timetypmodin", ServerSideOnly=true)]
		public static int? timetypmodin(object par6980)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetypmodout

		[Sql.Function(Name="pg_catalog.timetypmodout", ServerSideOnly=true)]
		public static object timetypmodout(int? par6982)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz

		[Sql.Function(Name="pg_catalog.timetz", ServerSideOnly=true)]
		public static DateTimeOffset? timetz(TimeSpan? par6989)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_cmp

		[Sql.Function(Name="pg_catalog.timetz_cmp", ServerSideOnly=true)]
		public static int? timetz_cmp(DateTimeOffset? par6991, DateTimeOffset? par6992)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetzdate_pl

		[Sql.Function(Name="pg_catalog.timetzdate_pl", ServerSideOnly=true)]
		public static DateTimeOffset? timetzdate_pl(DateTimeOffset? par6994, NpgsqlDate? par6995)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_eq

		[Sql.Function(Name="pg_catalog.timetz_eq", ServerSideOnly=true)]
		public static bool? timetz_eq(DateTimeOffset? par6997, DateTimeOffset? par6998)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_ge

		[Sql.Function(Name="pg_catalog.timetz_ge", ServerSideOnly=true)]
		public static bool? timetz_ge(DateTimeOffset? par7000, DateTimeOffset? par7001)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_gt

		[Sql.Function(Name="pg_catalog.timetz_gt", ServerSideOnly=true)]
		public static bool? timetz_gt(DateTimeOffset? par7003, DateTimeOffset? par7004)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_hash

		[Sql.Function(Name="pg_catalog.timetz_hash", ServerSideOnly=true)]
		public static int? timetz_hash(DateTimeOffset? par7006)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_hash_extended

		[Sql.Function(Name="pg_catalog.timetz_hash_extended", ServerSideOnly=true)]
		public static long? timetz_hash_extended(DateTimeOffset? par7008, long? par7009)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_in

		[Sql.Function(Name="pg_catalog.timetz_in", ServerSideOnly=true)]
		public static DateTimeOffset? timetz_in(object par7011, int? par7012, int? par7013)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_larger

		[Sql.Function(Name="pg_catalog.timetz_larger", ServerSideOnly=true)]
		public static DateTimeOffset? timetz_larger(DateTimeOffset? par7015, DateTimeOffset? par7016)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_le

		[Sql.Function(Name="pg_catalog.timetz_le", ServerSideOnly=true)]
		public static bool? timetz_le(DateTimeOffset? par7018, DateTimeOffset? par7019)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_lt

		[Sql.Function(Name="pg_catalog.timetz_lt", ServerSideOnly=true)]
		public static bool? timetz_lt(DateTimeOffset? par7021, DateTimeOffset? par7022)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_mi_interval

		[Sql.Function(Name="pg_catalog.timetz_mi_interval", ServerSideOnly=true)]
		public static DateTimeOffset? timetz_mi_interval(DateTimeOffset? par7024, NpgsqlTimeSpan? par7025)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_ne

		[Sql.Function(Name="pg_catalog.timetz_ne", ServerSideOnly=true)]
		public static bool? timetz_ne(DateTimeOffset? par7027, DateTimeOffset? par7028)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_out

		[Sql.Function(Name="pg_catalog.timetz_out", ServerSideOnly=true)]
		public static object timetz_out(DateTimeOffset? par7030)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_pl_interval

		[Sql.Function(Name="pg_catalog.timetz_pl_interval", ServerSideOnly=true)]
		public static DateTimeOffset? timetz_pl_interval(DateTimeOffset? par7032, NpgsqlTimeSpan? par7033)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_recv

		[Sql.Function(Name="pg_catalog.timetz_recv", ServerSideOnly=true)]
		public static DateTimeOffset? timetz_recv(object par7035, int? par7036, int? par7037)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_send

		[Sql.Function(Name="pg_catalog.timetz_send", ServerSideOnly=true)]
		public static byte[] timetz_send(DateTimeOffset? par7039)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetz_smaller

		[Sql.Function(Name="pg_catalog.timetz_smaller", ServerSideOnly=true)]
		public static DateTimeOffset? timetz_smaller(DateTimeOffset? par7041, DateTimeOffset? par7042)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetztypmodin

		[Sql.Function(Name="pg_catalog.timetztypmodin", ServerSideOnly=true)]
		public static int? timetztypmodin(object par7044)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timetztypmodout

		[Sql.Function(Name="pg_catalog.timetztypmodout", ServerSideOnly=true)]
		public static object timetztypmodout(int? par7046)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region timezone

		[Sql.Function(Name="pg_catalog.timezone", ServerSideOnly=true)]
		public static DateTimeOffset? timezone(NpgsqlTimeSpan? par7063, DateTime? par7064)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tinterval

		[Sql.Function(Name="pg_catalog.tinterval", ServerSideOnly=true)]
		public static object tinterval(object par7066, object par7067)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalct

		[Sql.Function(Name="pg_catalog.tintervalct", ServerSideOnly=true)]
		public static bool? tintervalct(object par7069, object par7070)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalend

		[Sql.Function(Name="pg_catalog.tintervalend", ServerSideOnly=true)]
		public static object tintervalend(object par7072)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervaleq

		[Sql.Function(Name="pg_catalog.tintervaleq", ServerSideOnly=true)]
		public static bool? tintervaleq(object par7074, object par7075)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalge

		[Sql.Function(Name="pg_catalog.tintervalge", ServerSideOnly=true)]
		public static bool? tintervalge(object par7077, object par7078)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalgt

		[Sql.Function(Name="pg_catalog.tintervalgt", ServerSideOnly=true)]
		public static bool? tintervalgt(object par7080, object par7081)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalin

		[Sql.Function(Name="pg_catalog.tintervalin", ServerSideOnly=true)]
		public static object tintervalin(object par7083)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalle

		[Sql.Function(Name="pg_catalog.tintervalle", ServerSideOnly=true)]
		public static bool? tintervalle(object par7085, object par7086)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalleneq

		[Sql.Function(Name="pg_catalog.tintervalleneq", ServerSideOnly=true)]
		public static bool? tintervalleneq(object par7088, object par7089)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervallenge

		[Sql.Function(Name="pg_catalog.tintervallenge", ServerSideOnly=true)]
		public static bool? tintervallenge(object par7091, object par7092)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervallengt

		[Sql.Function(Name="pg_catalog.tintervallengt", ServerSideOnly=true)]
		public static bool? tintervallengt(object par7094, object par7095)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervallenle

		[Sql.Function(Name="pg_catalog.tintervallenle", ServerSideOnly=true)]
		public static bool? tintervallenle(object par7097, object par7098)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervallenlt

		[Sql.Function(Name="pg_catalog.tintervallenlt", ServerSideOnly=true)]
		public static bool? tintervallenlt(object par7100, object par7101)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervallenne

		[Sql.Function(Name="pg_catalog.tintervallenne", ServerSideOnly=true)]
		public static bool? tintervallenne(object par7103, object par7104)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervallt

		[Sql.Function(Name="pg_catalog.tintervallt", ServerSideOnly=true)]
		public static bool? tintervallt(object par7106, object par7107)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalne

		[Sql.Function(Name="pg_catalog.tintervalne", ServerSideOnly=true)]
		public static bool? tintervalne(object par7109, object par7110)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalout

		[Sql.Function(Name="pg_catalog.tintervalout", ServerSideOnly=true)]
		public static object tintervalout(object par7112)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalov

		[Sql.Function(Name="pg_catalog.tintervalov", ServerSideOnly=true)]
		public static bool? tintervalov(object par7114, object par7115)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalrecv

		[Sql.Function(Name="pg_catalog.tintervalrecv", ServerSideOnly=true)]
		public static object tintervalrecv(object par7117)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalrel

		[Sql.Function(Name="pg_catalog.tintervalrel", ServerSideOnly=true)]
		public static object tintervalrel(object par7119)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalsame

		[Sql.Function(Name="pg_catalog.tintervalsame", ServerSideOnly=true)]
		public static bool? tintervalsame(object par7121, object par7122)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalsend

		[Sql.Function(Name="pg_catalog.tintervalsend", ServerSideOnly=true)]
		public static byte[] tintervalsend(object par7124)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tintervalstart

		[Sql.Function(Name="pg_catalog.tintervalstart", ServerSideOnly=true)]
		public static object tintervalstart(object par7126)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_ascii

		[Sql.Function(Name="pg_catalog.to_ascii", ServerSideOnly=true)]
		public static string to_ascii(string par7133, string par7134)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_char

		[Sql.Function(Name="pg_catalog.to_char", ServerSideOnly=true)]
		public static string to_char(DateTime? par7157, string par7158)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_date

		[Sql.Function(Name="pg_catalog.to_date", ServerSideOnly=true)]
		public static NpgsqlDate? to_date(string par7160, string par7161)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_hex

		[Sql.Function(Name="pg_catalog.to_hex", ServerSideOnly=true)]
		public static string to_hex(long? par7165)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_json

		[Sql.Function(Name="pg_catalog.to_json", ServerSideOnly=true)]
		public static string to_json(object par7167)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_jsonb

		[Sql.Function(Name="pg_catalog.to_jsonb", ServerSideOnly=true)]
		public static string to_jsonb(object par7169)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_number

		[Sql.Function(Name="pg_catalog.to_number", ServerSideOnly=true)]
		public static decimal? to_number(string par7171, string par7172)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regclass

		[Sql.Function(Name="pg_catalog.to_regclass", ServerSideOnly=true)]
		public static object to_regclass(string par7174)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regnamespace

		[Sql.Function(Name="pg_catalog.to_regnamespace", ServerSideOnly=true)]
		public static object to_regnamespace(string par7176)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regoper

		[Sql.Function(Name="pg_catalog.to_regoper", ServerSideOnly=true)]
		public static object to_regoper(string par7178)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regoperator

		[Sql.Function(Name="pg_catalog.to_regoperator", ServerSideOnly=true)]
		public static object to_regoperator(string par7180)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regproc

		[Sql.Function(Name="pg_catalog.to_regproc", ServerSideOnly=true)]
		public static object to_regproc(string par7182)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regprocedure

		[Sql.Function(Name="pg_catalog.to_regprocedure", ServerSideOnly=true)]
		public static object to_regprocedure(string par7184)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regrole

		[Sql.Function(Name="pg_catalog.to_regrole", ServerSideOnly=true)]
		public static object to_regrole(string par7186)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_regtype

		[Sql.Function(Name="pg_catalog.to_regtype", ServerSideOnly=true)]
		public static object to_regtype(string par7188)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_timestamp

		[Sql.Function(Name="pg_catalog.to_timestamp", ServerSideOnly=true)]
		public static DateTimeOffset? to_timestamp(string par7192, string par7193)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_tsquery

		[Sql.Function(Name="pg_catalog.to_tsquery", ServerSideOnly=true)]
		public static object to_tsquery(string par7198)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region to_tsvector

		[Sql.Function(Name="pg_catalog.to_tsvector", ServerSideOnly=true)]
		public static object to_tsvector(object par7212, string par7213)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region transaction_timestamp

		[Sql.Function(Name="pg_catalog.transaction_timestamp", ServerSideOnly=true)]
		public static DateTimeOffset? transaction_timestamp()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region translate

		[Sql.Function(Name="pg_catalog.translate", ServerSideOnly=true)]
		public static string translate(string par7216, string par7217, string par7218)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region trigger_in

		[Sql.Function(Name="pg_catalog.trigger_in", ServerSideOnly=true)]
		public static object trigger_in(object par7220)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region trigger_out

		[Sql.Function(Name="pg_catalog.trigger_out", ServerSideOnly=true)]
		public static object trigger_out(object par7222)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region trunc

		[Sql.Function(Name="pg_catalog.trunc", ServerSideOnly=true)]
		public static PhysicalAddress trunc(PhysicalAddress par7233)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_delete

		[Sql.Function(Name="pg_catalog.ts_delete", ServerSideOnly=true)]
		public static object ts_delete(object par7238, object par7239)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_filter

		[Sql.Function(Name="pg_catalog.ts_filter", ServerSideOnly=true)]
		public static object ts_filter(object par7241, object par7242)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_headline

		[Sql.Function(Name="pg_catalog.ts_headline", ServerSideOnly=true)]
		public static string ts_headline(string par7289, object par7290)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_lexize

		[Sql.Function(Name="pg_catalog.ts_lexize", ServerSideOnly=true)]
		public static object ts_lexize(object par7292, string par7293)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsmatchjoinsel

		[Sql.Function(Name="pg_catalog.tsmatchjoinsel", ServerSideOnly=true)]
		public static double? tsmatchjoinsel(object par7295, int? par7296, object par7297, short? par7298, object par7299)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_match_qv

		[Sql.Function(Name="pg_catalog.ts_match_qv", ServerSideOnly=true)]
		public static bool? ts_match_qv(object par7301, object par7302)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsmatchsel

		[Sql.Function(Name="pg_catalog.tsmatchsel", ServerSideOnly=true)]
		public static double? tsmatchsel(object par7304, int? par7305, object par7306, int? par7307)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_match_tq

		[Sql.Function(Name="pg_catalog.ts_match_tq", ServerSideOnly=true)]
		public static bool? ts_match_tq(string par7309, object par7310)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_match_tt

		[Sql.Function(Name="pg_catalog.ts_match_tt", ServerSideOnly=true)]
		public static bool? ts_match_tt(string par7312, string par7313)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_match_vq

		[Sql.Function(Name="pg_catalog.ts_match_vq", ServerSideOnly=true)]
		public static bool? ts_match_vq(object par7315, object par7316)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsm_handler_in

		[Sql.Function(Name="pg_catalog.tsm_handler_in", ServerSideOnly=true)]
		public static object tsm_handler_in(object par7318)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsm_handler_out

		[Sql.Function(Name="pg_catalog.tsm_handler_out", ServerSideOnly=true)]
		public static object tsm_handler_out(object par7320)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsq_mcontained

		[Sql.Function(Name="pg_catalog.tsq_mcontained", ServerSideOnly=true)]
		public static bool? tsq_mcontained(object par7322, object par7323)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsq_mcontains

		[Sql.Function(Name="pg_catalog.tsq_mcontains", ServerSideOnly=true)]
		public static bool? tsq_mcontains(object par7325, object par7326)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_and

		[Sql.Function(Name="pg_catalog.tsquery_and", ServerSideOnly=true)]
		public static object tsquery_and(object par7328, object par7329)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_cmp

		[Sql.Function(Name="pg_catalog.tsquery_cmp", ServerSideOnly=true)]
		public static int? tsquery_cmp(object par7331, object par7332)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_eq

		[Sql.Function(Name="pg_catalog.tsquery_eq", ServerSideOnly=true)]
		public static bool? tsquery_eq(object par7334, object par7335)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_ge

		[Sql.Function(Name="pg_catalog.tsquery_ge", ServerSideOnly=true)]
		public static bool? tsquery_ge(object par7337, object par7338)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_gt

		[Sql.Function(Name="pg_catalog.tsquery_gt", ServerSideOnly=true)]
		public static bool? tsquery_gt(object par7340, object par7341)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsqueryin

		[Sql.Function(Name="pg_catalog.tsqueryin", ServerSideOnly=true)]
		public static object tsqueryin(object par7343)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_le

		[Sql.Function(Name="pg_catalog.tsquery_le", ServerSideOnly=true)]
		public static bool? tsquery_le(object par7345, object par7346)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_lt

		[Sql.Function(Name="pg_catalog.tsquery_lt", ServerSideOnly=true)]
		public static bool? tsquery_lt(object par7348, object par7349)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_ne

		[Sql.Function(Name="pg_catalog.tsquery_ne", ServerSideOnly=true)]
		public static bool? tsquery_ne(object par7351, object par7352)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_not

		[Sql.Function(Name="pg_catalog.tsquery_not", ServerSideOnly=true)]
		public static object tsquery_not(object par7354)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_or

		[Sql.Function(Name="pg_catalog.tsquery_or", ServerSideOnly=true)]
		public static object tsquery_or(object par7356, object par7357)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsqueryout

		[Sql.Function(Name="pg_catalog.tsqueryout", ServerSideOnly=true)]
		public static object tsqueryout(object par7359)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquery_phrase

		[Sql.Function(Name="pg_catalog.tsquery_phrase", ServerSideOnly=true)]
		public static object tsquery_phrase(object par7364, object par7365, int? par7366)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsqueryrecv

		[Sql.Function(Name="pg_catalog.tsqueryrecv", ServerSideOnly=true)]
		public static object tsqueryrecv(object par7368)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsquerysend

		[Sql.Function(Name="pg_catalog.tsquerysend", ServerSideOnly=true)]
		public static byte[] tsquerysend(object par7370)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsrange

		[Sql.Function(Name="pg_catalog.tsrange", ServerSideOnly=true)]
		public static object tsrange(DateTime? par7375, DateTime? par7376, string par7377)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsrange_subdiff

		[Sql.Function(Name="pg_catalog.tsrange_subdiff", ServerSideOnly=true)]
		public static double? tsrange_subdiff(DateTime? par7379, DateTime? par7380)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_rank

		[Sql.Function(Name="pg_catalog.ts_rank", ServerSideOnly=true)]
		public static float? ts_rank(object par7395, object par7396)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_rank_cd

		[Sql.Function(Name="pg_catalog.ts_rank_cd", ServerSideOnly=true)]
		public static float? ts_rank_cd(object par7411, object par7412)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_rewrite

		[Sql.Function(Name="pg_catalog.ts_rewrite", ServerSideOnly=true)]
		public static object ts_rewrite(object par7418, string par7419)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region ts_typanalyze

		[Sql.Function(Name="pg_catalog.ts_typanalyze", ServerSideOnly=true)]
		public static bool? ts_typanalyze(object par7421)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tstzrange

		[Sql.Function(Name="pg_catalog.tstzrange", ServerSideOnly=true)]
		public static object tstzrange(DateTimeOffset? par7426, DateTimeOffset? par7427, string par7428)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tstzrange_subdiff

		[Sql.Function(Name="pg_catalog.tstzrange_subdiff", ServerSideOnly=true)]
		public static double? tstzrange_subdiff(DateTimeOffset? par7430, DateTimeOffset? par7431)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_cmp

		[Sql.Function(Name="pg_catalog.tsvector_cmp", ServerSideOnly=true)]
		public static int? tsvector_cmp(object par7433, object par7434)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_concat

		[Sql.Function(Name="pg_catalog.tsvector_concat", ServerSideOnly=true)]
		public static object tsvector_concat(object par7436, object par7437)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_eq

		[Sql.Function(Name="pg_catalog.tsvector_eq", ServerSideOnly=true)]
		public static bool? tsvector_eq(object par7439, object par7440)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_ge

		[Sql.Function(Name="pg_catalog.tsvector_ge", ServerSideOnly=true)]
		public static bool? tsvector_ge(object par7442, object par7443)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_gt

		[Sql.Function(Name="pg_catalog.tsvector_gt", ServerSideOnly=true)]
		public static bool? tsvector_gt(object par7445, object par7446)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvectorin

		[Sql.Function(Name="pg_catalog.tsvectorin", ServerSideOnly=true)]
		public static object tsvectorin(object par7448)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_le

		[Sql.Function(Name="pg_catalog.tsvector_le", ServerSideOnly=true)]
		public static bool? tsvector_le(object par7450, object par7451)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_lt

		[Sql.Function(Name="pg_catalog.tsvector_lt", ServerSideOnly=true)]
		public static bool? tsvector_lt(object par7453, object par7454)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_ne

		[Sql.Function(Name="pg_catalog.tsvector_ne", ServerSideOnly=true)]
		public static bool? tsvector_ne(object par7456, object par7457)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvectorout

		[Sql.Function(Name="pg_catalog.tsvectorout", ServerSideOnly=true)]
		public static object tsvectorout(object par7459)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvectorrecv

		[Sql.Function(Name="pg_catalog.tsvectorrecv", ServerSideOnly=true)]
		public static object tsvectorrecv(object par7461)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvectorsend

		[Sql.Function(Name="pg_catalog.tsvectorsend", ServerSideOnly=true)]
		public static byte[] tsvectorsend(object par7463)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_to_array

		[Sql.Function(Name="pg_catalog.tsvector_to_array", ServerSideOnly=true)]
		public static object tsvector_to_array(object par7465)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_update_trigger

		[Sql.Function(Name="pg_catalog.tsvector_update_trigger", ServerSideOnly=true)]
		public static object tsvector_update_trigger()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region tsvector_update_trigger_column

		[Sql.Function(Name="pg_catalog.tsvector_update_trigger_column", ServerSideOnly=true)]
		public static object tsvector_update_trigger_column()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_current

		[Sql.Function(Name="pg_catalog.txid_current", ServerSideOnly=true)]
		public static long? txid_current()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_current_if_assigned

		[Sql.Function(Name="pg_catalog.txid_current_if_assigned", ServerSideOnly=true)]
		public static long? txid_current_if_assigned()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_current_snapshot

		[Sql.Function(Name="pg_catalog.txid_current_snapshot", ServerSideOnly=true)]
		public static object txid_current_snapshot()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_snapshot_in

		[Sql.Function(Name="pg_catalog.txid_snapshot_in", ServerSideOnly=true)]
		public static object txid_snapshot_in(object par7472)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_snapshot_out

		[Sql.Function(Name="pg_catalog.txid_snapshot_out", ServerSideOnly=true)]
		public static object txid_snapshot_out(object par7474)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_snapshot_recv

		[Sql.Function(Name="pg_catalog.txid_snapshot_recv", ServerSideOnly=true)]
		public static object txid_snapshot_recv(object par7476)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_snapshot_send

		[Sql.Function(Name="pg_catalog.txid_snapshot_send", ServerSideOnly=true)]
		public static byte[] txid_snapshot_send(object par7478)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_snapshot_xmax

		[Sql.Function(Name="pg_catalog.txid_snapshot_xmax", ServerSideOnly=true)]
		public static long? txid_snapshot_xmax(object par7481)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_snapshot_xmin

		[Sql.Function(Name="pg_catalog.txid_snapshot_xmin", ServerSideOnly=true)]
		public static long? txid_snapshot_xmin(object par7483)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_status

		[Sql.Function(Name="pg_catalog.txid_status", ServerSideOnly=true)]
		public static string txid_status(long? par7485)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region txid_visible_in_snapshot

		[Sql.Function(Name="pg_catalog.txid_visible_in_snapshot", ServerSideOnly=true)]
		public static bool? txid_visible_in_snapshot(long? par7487, object par7488)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uhc_to_utf8

		[Sql.Function(Name="pg_catalog.uhc_to_utf8", ServerSideOnly=true)]
		public static object uhc_to_utf8(int? par7489, int? par7490, object par7491, object par7492, int? par7493)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region unique_key_recheck

		[Sql.Function(Name="pg_catalog.unique_key_recheck", ServerSideOnly=true)]
		public static object unique_key_recheck()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region unknownin

		[Sql.Function(Name="pg_catalog.unknownin", ServerSideOnly=true)]
		public static object unknownin(object par7496)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region unknownout

		[Sql.Function(Name="pg_catalog.unknownout", ServerSideOnly=true)]
		public static object unknownout(object par7498)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region unknownrecv

		[Sql.Function(Name="pg_catalog.unknownrecv", ServerSideOnly=true)]
		public static object unknownrecv(object par7500)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region unknownsend

		[Sql.Function(Name="pg_catalog.unknownsend", ServerSideOnly=true)]
		public static byte[] unknownsend(object par7502)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region upper

		[Sql.Function(Name="pg_catalog.upper", ServerSideOnly=true)]
		public static string upper(string par7507)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region upper_inc

		[Sql.Function(Name="pg_catalog.upper_inc", ServerSideOnly=true)]
		public static bool? upper_inc(object par7509)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region upper_inf

		[Sql.Function(Name="pg_catalog.upper_inf", ServerSideOnly=true)]
		public static bool? upper_inf(object par7511)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_ascii

		[Sql.Function(Name="pg_catalog.utf8_to_ascii", ServerSideOnly=true)]
		public static object utf8_to_ascii(int? par7512, int? par7513, object par7514, object par7515, int? par7516)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_big5

		[Sql.Function(Name="pg_catalog.utf8_to_big5", ServerSideOnly=true)]
		public static object utf8_to_big5(int? par7517, int? par7518, object par7519, object par7520, int? par7521)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_euc_cn

		[Sql.Function(Name="pg_catalog.utf8_to_euc_cn", ServerSideOnly=true)]
		public static object utf8_to_euc_cn(int? par7522, int? par7523, object par7524, object par7525, int? par7526)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_euc_jis_2004

		[Sql.Function(Name="pg_catalog.utf8_to_euc_jis_2004", ServerSideOnly=true)]
		public static object utf8_to_euc_jis_2004(int? par7527, int? par7528, object par7529, object par7530, int? par7531)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_euc_jp

		[Sql.Function(Name="pg_catalog.utf8_to_euc_jp", ServerSideOnly=true)]
		public static object utf8_to_euc_jp(int? par7532, int? par7533, object par7534, object par7535, int? par7536)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_euc_kr

		[Sql.Function(Name="pg_catalog.utf8_to_euc_kr", ServerSideOnly=true)]
		public static object utf8_to_euc_kr(int? par7537, int? par7538, object par7539, object par7540, int? par7541)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_euc_tw

		[Sql.Function(Name="pg_catalog.utf8_to_euc_tw", ServerSideOnly=true)]
		public static object utf8_to_euc_tw(int? par7542, int? par7543, object par7544, object par7545, int? par7546)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_gb18030

		[Sql.Function(Name="pg_catalog.utf8_to_gb18030", ServerSideOnly=true)]
		public static object utf8_to_gb18030(int? par7547, int? par7548, object par7549, object par7550, int? par7551)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_gbk

		[Sql.Function(Name="pg_catalog.utf8_to_gbk", ServerSideOnly=true)]
		public static object utf8_to_gbk(int? par7552, int? par7553, object par7554, object par7555, int? par7556)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_iso8859_1

		[Sql.Function(Name="pg_catalog.utf8_to_iso8859_1", ServerSideOnly=true)]
		public static object utf8_to_iso8859_1(int? par7557, int? par7558, object par7559, object par7560, int? par7561)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_iso8859

		[Sql.Function(Name="pg_catalog.utf8_to_iso8859", ServerSideOnly=true)]
		public static object utf8_to_iso8859(int? par7562, int? par7563, object par7564, object par7565, int? par7566)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_johab

		[Sql.Function(Name="pg_catalog.utf8_to_johab", ServerSideOnly=true)]
		public static object utf8_to_johab(int? par7567, int? par7568, object par7569, object par7570, int? par7571)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_koi8r

		[Sql.Function(Name="pg_catalog.utf8_to_koi8r", ServerSideOnly=true)]
		public static object utf8_to_koi8r(int? par7572, int? par7573, object par7574, object par7575, int? par7576)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_koi8u

		[Sql.Function(Name="pg_catalog.utf8_to_koi8u", ServerSideOnly=true)]
		public static object utf8_to_koi8u(int? par7577, int? par7578, object par7579, object par7580, int? par7581)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_shift_jis_2004

		[Sql.Function(Name="pg_catalog.utf8_to_shift_jis_2004", ServerSideOnly=true)]
		public static object utf8_to_shift_jis_2004(int? par7582, int? par7583, object par7584, object par7585, int? par7586)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_sjis

		[Sql.Function(Name="pg_catalog.utf8_to_sjis", ServerSideOnly=true)]
		public static object utf8_to_sjis(int? par7587, int? par7588, object par7589, object par7590, int? par7591)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_uhc

		[Sql.Function(Name="pg_catalog.utf8_to_uhc", ServerSideOnly=true)]
		public static object utf8_to_uhc(int? par7592, int? par7593, object par7594, object par7595, int? par7596)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region utf8_to_win

		[Sql.Function(Name="pg_catalog.utf8_to_win", ServerSideOnly=true)]
		public static object utf8_to_win(int? par7597, int? par7598, object par7599, object par7600, int? par7601)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_cmp

		[Sql.Function(Name="pg_catalog.uuid_cmp", ServerSideOnly=true)]
		public static int? uuid_cmp(Guid? par7603, Guid? par7604)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_eq

		[Sql.Function(Name="pg_catalog.uuid_eq", ServerSideOnly=true)]
		public static bool? uuid_eq(Guid? par7606, Guid? par7607)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_ge

		[Sql.Function(Name="pg_catalog.uuid_ge", ServerSideOnly=true)]
		public static bool? uuid_ge(Guid? par7609, Guid? par7610)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_gt

		[Sql.Function(Name="pg_catalog.uuid_gt", ServerSideOnly=true)]
		public static bool? uuid_gt(Guid? par7612, Guid? par7613)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_hash

		[Sql.Function(Name="pg_catalog.uuid_hash", ServerSideOnly=true)]
		public static int? uuid_hash(Guid? par7615)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_hash_extended

		[Sql.Function(Name="pg_catalog.uuid_hash_extended", ServerSideOnly=true)]
		public static long? uuid_hash_extended(Guid? par7617, long? par7618)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_in

		[Sql.Function(Name="pg_catalog.uuid_in", ServerSideOnly=true)]
		public static Guid? uuid_in(object par7620)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_le

		[Sql.Function(Name="pg_catalog.uuid_le", ServerSideOnly=true)]
		public static bool? uuid_le(Guid? par7622, Guid? par7623)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_lt

		[Sql.Function(Name="pg_catalog.uuid_lt", ServerSideOnly=true)]
		public static bool? uuid_lt(Guid? par7625, Guid? par7626)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_ne

		[Sql.Function(Name="pg_catalog.uuid_ne", ServerSideOnly=true)]
		public static bool? uuid_ne(Guid? par7628, Guid? par7629)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_out

		[Sql.Function(Name="pg_catalog.uuid_out", ServerSideOnly=true)]
		public static object uuid_out(Guid? par7631)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_recv

		[Sql.Function(Name="pg_catalog.uuid_recv", ServerSideOnly=true)]
		public static Guid? uuid_recv(object par7633)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_send

		[Sql.Function(Name="pg_catalog.uuid_send", ServerSideOnly=true)]
		public static byte[] uuid_send(Guid? par7635)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region uuid_sortsupport

		[Sql.Function(Name="pg_catalog.uuid_sortsupport", ServerSideOnly=true)]
		public static object uuid_sortsupport(object par7636)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbit

		[Sql.Function(Name="pg_catalog.varbit", ServerSideOnly=true)]
		public static BitArray varbit(BitArray par7638, int? par7639, bool? par7640)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbitcmp

		[Sql.Function(Name="pg_catalog.varbitcmp", ServerSideOnly=true)]
		public static int? varbitcmp(BitArray par7642, BitArray par7643)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbiteq

		[Sql.Function(Name="pg_catalog.varbiteq", ServerSideOnly=true)]
		public static bool? varbiteq(BitArray par7645, BitArray par7646)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbitge

		[Sql.Function(Name="pg_catalog.varbitge", ServerSideOnly=true)]
		public static bool? varbitge(BitArray par7648, BitArray par7649)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbitgt

		[Sql.Function(Name="pg_catalog.varbitgt", ServerSideOnly=true)]
		public static bool? varbitgt(BitArray par7651, BitArray par7652)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbit_in

		[Sql.Function(Name="pg_catalog.varbit_in", ServerSideOnly=true)]
		public static BitArray varbit_in(object par7654, int? par7655, int? par7656)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbitle

		[Sql.Function(Name="pg_catalog.varbitle", ServerSideOnly=true)]
		public static bool? varbitle(BitArray par7658, BitArray par7659)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbitlt

		[Sql.Function(Name="pg_catalog.varbitlt", ServerSideOnly=true)]
		public static bool? varbitlt(BitArray par7661, BitArray par7662)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbitne

		[Sql.Function(Name="pg_catalog.varbitne", ServerSideOnly=true)]
		public static bool? varbitne(BitArray par7664, BitArray par7665)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbit_out

		[Sql.Function(Name="pg_catalog.varbit_out", ServerSideOnly=true)]
		public static object varbit_out(BitArray par7667)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbit_recv

		[Sql.Function(Name="pg_catalog.varbit_recv", ServerSideOnly=true)]
		public static BitArray varbit_recv(object par7669, int? par7670, int? par7671)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbit_send

		[Sql.Function(Name="pg_catalog.varbit_send", ServerSideOnly=true)]
		public static byte[] varbit_send(BitArray par7673)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbit_transform

		[Sql.Function(Name="pg_catalog.varbit_transform", ServerSideOnly=true)]
		public static object varbit_transform(object par7675)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbittypmodin

		[Sql.Function(Name="pg_catalog.varbittypmodin", ServerSideOnly=true)]
		public static int? varbittypmodin(object par7677)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varbittypmodout

		[Sql.Function(Name="pg_catalog.varbittypmodout", ServerSideOnly=true)]
		public static object varbittypmodout(int? par7679)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varchar

		[Sql.Function(Name="pg_catalog.varchar", ServerSideOnly=true)]
		public static string varchar(string par7683, int? par7684, bool? par7685)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varcharin

		[Sql.Function(Name="pg_catalog.varcharin", ServerSideOnly=true)]
		public static string varcharin(object par7687, int? par7688, int? par7689)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varcharout

		[Sql.Function(Name="pg_catalog.varcharout", ServerSideOnly=true)]
		public static object varcharout(string par7691)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varcharrecv

		[Sql.Function(Name="pg_catalog.varcharrecv", ServerSideOnly=true)]
		public static string varcharrecv(object par7693, int? par7694, int? par7695)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varcharsend

		[Sql.Function(Name="pg_catalog.varcharsend", ServerSideOnly=true)]
		public static byte[] varcharsend(string par7697)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varchar_transform

		[Sql.Function(Name="pg_catalog.varchar_transform", ServerSideOnly=true)]
		public static object varchar_transform(object par7699)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varchartypmodin

		[Sql.Function(Name="pg_catalog.varchartypmodin", ServerSideOnly=true)]
		public static int? varchartypmodin(object par7701)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region varchartypmodout

		[Sql.Function(Name="pg_catalog.varchartypmodout", ServerSideOnly=true)]
		public static object varchartypmodout(int? par7703)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region variance

		[Sql.Function(Name="pg_catalog.variance", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static decimal? variance<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, decimal?>> par7715)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region var_pop

		[Sql.Function(Name="pg_catalog.var_pop", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static decimal? var_pop<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, decimal?>> par7727)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region var_samp

		[Sql.Function(Name="pg_catalog.var_samp", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static decimal? var_samp<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, decimal?>> par7739)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region version

		[Sql.Function(Name="pg_catalog.version", ServerSideOnly=true)]
		public static string version()
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region void_in

		[Sql.Function(Name="pg_catalog.void_in", ServerSideOnly=true)]
		public static object void_in(object par7741)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region void_out

		[Sql.Function(Name="pg_catalog.void_out", ServerSideOnly=true)]
		public static object void_out(object par7743)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region void_recv

		[Sql.Function(Name="pg_catalog.void_recv", ServerSideOnly=true)]
		public static object void_recv(object par7744)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region void_send

		[Sql.Function(Name="pg_catalog.void_send", ServerSideOnly=true)]
		public static byte[] void_send(object par7746)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region websearch_to_tsquery

		[Sql.Function(Name="pg_catalog.websearch_to_tsquery", ServerSideOnly=true)]
		public static object websearch_to_tsquery(string par7751)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region width

		[Sql.Function(Name="pg_catalog.width", ServerSideOnly=true)]
		public static double? width(NpgsqlBox? par7753)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region width_bucket

		[Sql.Function(Name="pg_catalog.width_bucket", ServerSideOnly=true)]
		public static int? width_bucket(object par7765, object par7766)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win1250_to_latin2

		[Sql.Function(Name="pg_catalog.win1250_to_latin2", ServerSideOnly=true)]
		public static object win1250_to_latin2(int? par7767, int? par7768, object par7769, object par7770, int? par7771)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win1250_to_mic

		[Sql.Function(Name="pg_catalog.win1250_to_mic", ServerSideOnly=true)]
		public static object win1250_to_mic(int? par7772, int? par7773, object par7774, object par7775, int? par7776)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win1251_to_iso

		[Sql.Function(Name="pg_catalog.win1251_to_iso", ServerSideOnly=true)]
		public static object win1251_to_iso(int? par7777, int? par7778, object par7779, object par7780, int? par7781)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win1251_to_koi8r

		[Sql.Function(Name="pg_catalog.win1251_to_koi8r", ServerSideOnly=true)]
		public static object win1251_to_koi8r(int? par7782, int? par7783, object par7784, object par7785, int? par7786)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win1251_to_mic

		[Sql.Function(Name="pg_catalog.win1251_to_mic", ServerSideOnly=true)]
		public static object win1251_to_mic(int? par7787, int? par7788, object par7789, object par7790, int? par7791)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win1251_to_win866

		[Sql.Function(Name="pg_catalog.win1251_to_win866", ServerSideOnly=true)]
		public static object win1251_to_win866(int? par7792, int? par7793, object par7794, object par7795, int? par7796)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win866_to_iso

		[Sql.Function(Name="pg_catalog.win866_to_iso", ServerSideOnly=true)]
		public static object win866_to_iso(int? par7797, int? par7798, object par7799, object par7800, int? par7801)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win866_to_koi8r

		[Sql.Function(Name="pg_catalog.win866_to_koi8r", ServerSideOnly=true)]
		public static object win866_to_koi8r(int? par7802, int? par7803, object par7804, object par7805, int? par7806)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win866_to_mic

		[Sql.Function(Name="pg_catalog.win866_to_mic", ServerSideOnly=true)]
		public static object win866_to_mic(int? par7807, int? par7808, object par7809, object par7810, int? par7811)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win866_to_win1251

		[Sql.Function(Name="pg_catalog.win866_to_win1251", ServerSideOnly=true)]
		public static object win866_to_win1251(int? par7812, int? par7813, object par7814, object par7815, int? par7816)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region win_to_utf8

		[Sql.Function(Name="pg_catalog.win_to_utf8", ServerSideOnly=true)]
		public static object win_to_utf8(int? par7817, int? par7818, object par7819, object par7820, int? par7821)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xideq

		[Sql.Function(Name="pg_catalog.xideq", ServerSideOnly=true)]
		public static bool? xideq(int? par7823, int? par7824)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xideqint4

		[Sql.Function(Name="pg_catalog.xideqint4", ServerSideOnly=true)]
		public static bool? xideqint4(int? par7826, int? par7827)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xidin

		[Sql.Function(Name="pg_catalog.xidin", ServerSideOnly=true)]
		public static int? xidin(object par7829)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xidneq

		[Sql.Function(Name="pg_catalog.xidneq", ServerSideOnly=true)]
		public static bool? xidneq(int? par7831, int? par7832)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xidneqint4

		[Sql.Function(Name="pg_catalog.xidneqint4", ServerSideOnly=true)]
		public static bool? xidneqint4(int? par7834, int? par7835)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xidout

		[Sql.Function(Name="pg_catalog.xidout", ServerSideOnly=true)]
		public static object xidout(int? par7837)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xidrecv

		[Sql.Function(Name="pg_catalog.xidrecv", ServerSideOnly=true)]
		public static int? xidrecv(object par7839)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xidsend

		[Sql.Function(Name="pg_catalog.xidsend", ServerSideOnly=true)]
		public static byte[] xidsend(int? par7841)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml

		[Sql.Function(Name="pg_catalog.xml", ServerSideOnly=true)]
		public static string xml(string par7843)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xmlagg

		[Sql.Function(Name="pg_catalog.xmlagg", ServerSideOnly=true, IsAggregate = true, ArgIndices = new[] { 0 })]
		public static string xmlagg<TSource>(this IEnumerable<TSource> src, Expression<Func<TSource, string>> par7845)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xmlcomment

		[Sql.Function(Name="pg_catalog.xmlcomment", ServerSideOnly=true)]
		public static string xmlcomment(string par7847)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xmlconcat2

		[Sql.Function(Name="pg_catalog.xmlconcat2", ServerSideOnly=true)]
		public static string xmlconcat2(string par7849, string par7850)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xmlexists

		[Sql.Function(Name="pg_catalog.xmlexists", ServerSideOnly=true)]
		public static bool? xmlexists(string par7852, string par7853)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml_in

		[Sql.Function(Name="pg_catalog.xml_in", ServerSideOnly=true)]
		public static string xml_in(object par7855)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml_is_well_formed

		[Sql.Function(Name="pg_catalog.xml_is_well_formed", ServerSideOnly=true)]
		public static bool? xml_is_well_formed(string par7857)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml_is_well_formed_content

		[Sql.Function(Name="pg_catalog.xml_is_well_formed_content", ServerSideOnly=true)]
		public static bool? xml_is_well_formed_content(string par7859)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml_is_well_formed_document

		[Sql.Function(Name="pg_catalog.xml_is_well_formed_document", ServerSideOnly=true)]
		public static bool? xml_is_well_formed_document(string par7861)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml_out

		[Sql.Function(Name="pg_catalog.xml_out", ServerSideOnly=true)]
		public static object xml_out(string par7863)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml_recv

		[Sql.Function(Name="pg_catalog.xml_recv", ServerSideOnly=true)]
		public static string xml_recv(object par7865)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xml_send

		[Sql.Function(Name="pg_catalog.xml_send", ServerSideOnly=true)]
		public static byte[] xml_send(string par7867)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xmlvalidate

		[Sql.Function(Name="pg_catalog.xmlvalidate", ServerSideOnly=true)]
		public static bool? xmlvalidate(string par7869, string par7870)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xpath

		[Sql.Function(Name="pg_catalog.xpath", ServerSideOnly=true)]
		public static object xpath(string par7876, string par7877)
		{
			throw new InvalidOperationException();
		}

		#endregion

		#region xpath_exists

		[Sql.Function(Name="pg_catalog.xpath_exists", ServerSideOnly=true)]
		public static bool? xpath_exists(string par7883, string par7884)
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static __EFMigrationsHistory Find(this ITable<__EFMigrationsHistory> table, string MigrationId)
		{
			return table.FirstOrDefault(t =>
				t.MigrationId == MigrationId);
		}

		public static Article Find(this ITable<Article> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ArticleType Find(this ITable<ArticleType> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Comment Find(this ITable<Comment> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static Log Find(this ITable<Log> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find(this ITable<User> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
